netcdf sgp1smosE1.b1.20040615.000000 {
dimensions:
	time = UNLIMITED ; // (1440 currently)
variables:
	int base_time ;
		base_time:string = "14-Jun-2004,23:02:00 GMT" ;
		base_time:long_name = "Base time in Epoch" ;
		base_time:units = "seconds since 1970-1-1 0:00:00 0:00" ;
	double time_offset(time) ;
		time_offset:long_name = "Time offset from base_time" ;
		time_offset:units = "seconds since 2004-06-14 23:02:00 0:00" ;
	double time(time) ;
		time:long_name = "Time offset from midnight" ;
		time:units = "seconds since 2004-06-15 00:00:00 0:00" ;
	int qc_time(time) ;
		qc_time:long_name = "Results of quality checks on sample time" ;
		qc_time:units = "unitless" ;
		qc_time:description = "The qc_time values are calculated by comparing each sample\n",
    "time with the previous time (i.e. delta_t = t[n] - t[n-1]).\n",
    "If the \'qc_check_prior\' flag is set the first sample time\n",
    "from a new raw file will be compared against the time just\n",
    "previous to it in the stored data. If the \'qc_check_prior\'\n",
    "flag is not set the qc_time value for the first sample time\n",
    "will be set to 0\n",
    "\n",
    "The qc_time bit values are as follows:\n",
    "=========================================================\n",
    "0x0 = delta time is within the specified range\n",
    "0x1 = delta time is equal to 0, duplicate sample times\n",
    "0x2 = delta time is less than the \'delta_t_lower_limit\'\n",
    "0x4 = delta time is greater than the \'delta_t_upper_limit\'\n",
    "\n",
    "" ;
		qc_time:delta_t_lower_limit = 60 ;
		qc_time:delta_t_upper_limit = 60 ;
		qc_time:prior_sample_flag = 1 ;
	float wspd(time) ;
		wspd:long_name = "Wind Speed" ;
		wspd:units = "m/s" ;
		wspd:valid_min = 0.f ;
		wspd:valid_max = 60.f ;
		wspd:resolution = 0.01f ;
		wspd:missing_value = -9999.f ;
		wspd:threshold = "1.00 m/s" ;
		wspd:uncertainty = "+/- 1% for 2.5 to 30 m/s\n",
    "- 0.12 to +0.02 m/s at 2.0 m/s\n",
    "- 0.22 to +0.00 m/s at 1.5 m/s\n",
    "- 0.31 to -0.20 m/s at 1.0 m/s\n",
    "- 0.51 to -0.49 m/s at 0.5 m/s\n",
    "Error included in uncertainty are calibration accuracy,\n",
    "data logger timebase accuracy, and bias by underestimation\n",
    "due to threshold.  The latter assumes normal distibution\n",
    "of winds about the mean with standard deviations ranging\n",
    "between 0.25 and 1.00 m/s." ;
	int qc_wspd(time) ;
		qc_wspd:long_name = "Quality check results on field: Wind Speed" ;
		qc_wspd:units = "unitless" ;
	float wspd_va(time) ;
		wspd_va:long_name = "Wind Speed (vector averaged)" ;
		wspd_va:units = "m/s" ;
		wspd_va:valid_min = 0.f ;
		wspd_va:valid_max = 60.f ;
		wspd_va:resolution = 0.01f ;
		wspd_va:missing_value = -9999.f ;
	int qc_wspd_va(time) ;
		qc_wspd_va:long_name = "Quality check results on field: Wind Speed (vector averaged)" ;
		qc_wspd_va:units = "unitless" ;
	float wdir(time) ;
		wdir:long_name = "Wind Direction" ;
		wdir:units = "deg" ;
		wdir:valid_min = 0.f ;
		wdir:valid_max = 360.f ;
		wdir:resolution = 0.1f ;
		wdir:missing_value = -9999.f ;
		wdir:threshold = "Wind speed </= 1.00 m/s" ;
		wdir:uncertainty = "+/- 5.0 deg for wind speed > 1.0 m/s\n",
    "+/- 180.0 deg for wind speed </= 1.0 m/s\n",
    "Errors included in uncertainty are sensor accuracy,\n",
    "alignment accuracy, and A/D conversion accuracy." ;
	int qc_wdir(time) ;
		qc_wdir:long_name = "Quality check results on field: Wind Direction" ;
		qc_wdir:units = "unitless" ;
	float sd_deg(time) ;
		sd_deg:long_name = "Standard Deviation of wind direction" ;
		sd_deg:units = "deg" ;
		sd_deg:valid_min = 0.f ;
		sd_deg:valid_max = 90.f ;
		sd_deg:resolution = 0.1f ;
		sd_deg:missing_value = -9999.f ;
	int qc_sd_deg(time) ;
		qc_sd_deg:long_name = "Quality check results on field: Standard Deviation of wind direction" ;
		qc_sd_deg:units = "unitless" ;
	float temp(time) ;
		temp:long_name = "Temperature" ;
		temp:units = "C" ;
		temp:valid_min = -40.f ;
		temp:valid_max = 50.f ;
		temp:resolution = 0.01f ;
		temp:missing_value = -9999.f ;
		temp:uncertainty = "+/- 0.45 C for wind speed >/= 6.00 m/s\n",
    "+/- 0.89 C for wind speed = 3.00 m/s\n",
    "+/- 1.46 C for wind speed = 2.00 m/s\n",
    "+/- 3.07 C for wind speed = 1.00 m/s\n",
    "Errors included in uncertainty are radiation error, sensor\n",
    "interchangeability, bridge resistor precision, and polynomial\n",
    "curve fitting.  Radiation error is the largest contributor to\n",
    "the latter uncertainties.  Future algorithm development may\n",
    "reduce these uncertainties." ;
	int qc_temp(time) ;
		qc_temp:long_name = "Quality check results on field: Temperature" ;
		qc_temp:units = "unitless" ;
	float rh(time) ;
		rh:long_name = "Relative Humidity" ;
		rh:units = "%" ;
		rh:valid_min = -2.f ;
		rh:valid_max = 104.f ;
		rh:resolution = 0.1f ;
		rh:missing_value = -9999.f ;
		rh:uncertainty = "+/- 2.06 % RH for 0 to 90 % RH\n",
    "+/- 3.04 % RH for 90 to 100 % RH\n",
    "Errors included in uncertainty are calibration uncertainty,\n",
    "repeatability, temperature dependence, long term (1 yr)\n",
    "stability, and A/D conversion accuracy.  Wind speed dependence\n",
    "and radiation dependence have not been considered and may\n",
    "increase the uncertainty." ;
	int qc_rh(time) ;
		qc_rh:long_name = "Quality check results on field: Relative Humidity" ;
		qc_rh:units = "unitless" ;
	float vap_pres(time) ;
		vap_pres:long_name = "Vapor Pressure" ;
		vap_pres:units = "kPa" ;
		vap_pres:valid_min = 0.f ;
		vap_pres:valid_max = 10.f ;
		vap_pres:resolution = 0.001f ;
		vap_pres:missing_value = -9999.f ;
	int qc_vap_pres(time) ;
		qc_vap_pres:long_name = "Quality check results on field: Vapor Pressure" ;
		qc_vap_pres:units = "unitless" ;
	float bar_pres(time) ;
		bar_pres:long_name = "Barometric Pressure" ;
		bar_pres:units = "kPa" ;
		bar_pres:valid_min = 80.f ;
		bar_pres:valid_max = 110.f ;
		bar_pres:resolution = 0.01f ;
		bar_pres:missing_value = -9999.f ;
		bar_pres:uncertainty = "+/- 0.035 kPa\n",
    "Errors included in uncertainty are linearity, hysteresis,\n",
    "repeatability, calibration uncertainty, temperature dependence,\n",
    "and long-term (1 yr) stability.  Wind speed dependence has not\n",
    "been considered and may increase the uncertainty." ;
	int qc_bar_pres(time) ;
		qc_bar_pres:long_name = "Quality check results on field: Barometric Pressure" ;
		qc_bar_pres:units = "unitless" ;
	float precip(time) ;
		precip:long_name = "Precipitation Total" ;
		precip:units = "mm" ;
		precip:valid_min = 0.f ;
		precip:valid_max = 10.f ;
		precip:resolution = 0.001f ;
		precip:missing_value = -9999.f ;
		precip:uncertainty = "Under normal conditions, uncertainty for\n",
    "rain is +/- 0.254 mm (one bucket).  Uncertainty increases to\n",
    "an unknown value during strong winds or very heavy rains (in\n",
    "excess of 75 mm per hour). The instrument is not considered\n",
    "reliable for snow amounts." ;
	int qc_precip(time) ;
		qc_precip:long_name = "Quality check results on field: Precipitation Total" ;
		qc_precip:units = "unitless" ;
	float lat ;
		lat:long_name = "north latitude" ;
		lat:units = "degrees" ;
		lat:valid_min = -90.f ;
		lat:valid_max = 90.f ;
	float lon ;
		lon:long_name = "east longitude" ;
		lon:units = "degrees" ;
		lon:valid_min = -180.f ;
		lon:valid_max = 180.f ;
	float alt ;
		alt:long_name = "altitude" ;
		alt:units = "meters above Mean Sea Level" ;

// global attributes:
		:ingest_software = " smos_ingest.c,v 7.6 2003/10/02 23:29:29 ermold process-ingest-smos_ingest-7.5-0 $" ;
		:proc_level = "b1" ;
		:input_source = "smos1:/data/collection/sgp/sgpsmosE1.00/1087254120.icm" ;
		:site_id = "sgp" ;
		:facility_id = "E1 : Larned" ;
		:sample_int = "bar press - 1 minute\n",
    "all others 1 second" ;
		:averaging_int = "1 minute" ;
		:serial_number = "SMOS11" ;
		:comment = "The time assigned to each data point indicates the end of any\n",
    "period of averaging of the geophysical data.\n",
    "\n",
    "The snow depth sensors were removed from service in August 2002.\n",
    "\n",
    "Altitude is in meters above Mean Sea Level." ;
		:resolution_description = "The resolution field attributes refer to the number of significant\n",
    "digits relative to the decimal point that should be used in\n",
    "calculations.  Using fewer digits might result in greater uncertainty;\n",
    "using a larger number of digits should have no effect and thus is\n",
    "unnecessary.  However, analyses based on differences in values with\n",
    "a larger number of significant digits than indicated could lead to\n",
    "erroneous results or misleading scientific conclusions.\n",
    "\n",
    "resolution for lat= 0.001\n",
    "resolution for lon = 0.001\n",
    "resolution for alt = 1" ;
		:sensor_location = "Sensors heights (above base \"alt\"):\n",
    "  10m for winds\n",
    "  2m for temp, RH, and vap pres\n",
    "  1m for bar pres" ;
		:qc_method = "Standard Mentor QC" ;
		:Mentor_QC_Field_Information = "For each qc_<field> interpret the values as follows:\n",
    "\n",
    "Basic mentor QC checks (bit values):\n",
    "==========================================\n",
    "0x0 = value is within the specified range\n",
    "0x1 = value is equal to \'missing_value\'\n",
    "0x2 = value is less than the \'valid_min\'\n",
    "0x4 = value is greater than the \'valid_max\'\n",
    "0x8 = value failed the \'valid_delta\' check\n",
    "\n",
    "If the value is a \'missing_value\' no min, max, or delta checks are performed.\n",
    "\n",
    "The delta checks are done by comparing each data value to the one just\n",
    "prior to it in time. If a previous data value does not exist or is a\n",
    "\'missing_value\' the delta check will not be performed.\n",
    "\n",
    "Note that the delta computation for multi-dimensioned data compares the\n",
    "absolute value between points in the same spatial location to the previous\n",
    "point in time.\n",
    "\n",
    "If the associated non-QC field does not contain any mentor-specified minimum,\n",
    "maximum, or delta information a qc_field is not generated.\n",
    "" ;
		:zeb_platform = "sgp1smosE1.b1" ;
		:history = "created by user dsmgr on machine left at 15-Jun-2004,1:06:53, using $State: ds-zebra-zeblib-4.12-0 $" ;
}
netcdf sgp1smosE11.b1.20040615.000000 {
dimensions:
	time = UNLIMITED ; // (1440 currently)
variables:
	int base_time ;
		base_time:string = "14-Jun-2004,23:02:00 GMT" ;
		base_time:long_name = "Base time in Epoch" ;
		base_time:units = "seconds since 1970-1-1 0:00:00 0:00" ;
	double time_offset(time) ;
		time_offset:long_name = "Time offset from base_time" ;
		time_offset:units = "seconds since 2004-06-14 23:02:00 0:00" ;
	double time(time) ;
		time:long_name = "Time offset from midnight" ;
		time:units = "seconds since 2004-06-15 00:00:00 0:00" ;
	int qc_time(time) ;
		qc_time:long_name = "Results of quality checks on sample time" ;
		qc_time:units = "unitless" ;
		qc_time:description = "The qc_time values are calculated by comparing each sample\n",
    "time with the previous time (i.e. delta_t = t[n] - t[n-1]).\n",
    "If the \'qc_check_prior\' flag is set the first sample time\n",
    "from a new raw file will be compared against the time just\n",
    "previous to it in the stored data. If the \'qc_check_prior\'\n",
    "flag is not set the qc_time value for the first sample time\n",
    "will be set to 0\n",
    "\n",
    "The qc_time bit values are as follows:\n",
    "=========================================================\n",
    "0x0 = delta time is within the specified range\n",
    "0x1 = delta time is equal to 0, duplicate sample times\n",
    "0x2 = delta time is less than the \'delta_t_lower_limit\'\n",
    "0x4 = delta time is greater than the \'delta_t_upper_limit\'\n",
    "\n",
    "" ;
		qc_time:delta_t_lower_limit = 60 ;
		qc_time:delta_t_upper_limit = 60 ;
		qc_time:prior_sample_flag = 1 ;
	float wspd(time) ;
		wspd:long_name = "Wind Speed" ;
		wspd:units = "m/s" ;
		wspd:valid_min = 0.f ;
		wspd:valid_max = 60.f ;
		wspd:resolution = 0.01f ;
		wspd:missing_value = -9999.f ;
		wspd:threshold = "1.00 m/s" ;
		wspd:uncertainty = "+/- 1% for 2.5 to 30 m/s\n",
    "- 0.12 to +0.02 m/s at 2.0 m/s\n",
    "- 0.22 to +0.00 m/s at 1.5 m/s\n",
    "- 0.31 to -0.20 m/s at 1.0 m/s\n",
    "- 0.51 to -0.49 m/s at 0.5 m/s\n",
    "Error included in uncertainty are calibration accuracy,\n",
    "data logger timebase accuracy, and bias by underestimation\n",
    "due to threshold.  The latter assumes normal distibution\n",
    "of winds about the mean with standard deviations ranging\n",
    "between 0.25 and 1.00 m/s." ;
	int qc_wspd(time) ;
		qc_wspd:long_name = "Quality check results on field: Wind Speed" ;
		qc_wspd:units = "unitless" ;
	float wspd_va(time) ;
		wspd_va:long_name = "Wind Speed (vector averaged)" ;
		wspd_va:units = "m/s" ;
		wspd_va:valid_min = 0.f ;
		wspd_va:valid_max = 60.f ;
		wspd_va:resolution = 0.01f ;
		wspd_va:missing_value = -9999.f ;
	int qc_wspd_va(time) ;
		qc_wspd_va:long_name = "Quality check results on field: Wind Speed (vector averaged)" ;
		qc_wspd_va:units = "unitless" ;
	float wdir(time) ;
		wdir:long_name = "Wind Direction" ;
		wdir:units = "deg" ;
		wdir:valid_min = 0.f ;
		wdir:valid_max = 360.f ;
		wdir:resolution = 0.1f ;
		wdir:missing_value = -9999.f ;
		wdir:threshold = "Wind speed </= 1.00 m/s" ;
		wdir:uncertainty = "+/- 5.0 deg for wind speed > 1.0 m/s\n",
    "+/- 180.0 deg for wind speed </= 1.0 m/s\n",
    "Errors included in uncertainty are sensor accuracy,\n",
    "alignment accuracy, and A/D conversion accuracy." ;
	int qc_wdir(time) ;
		qc_wdir:long_name = "Quality check results on field: Wind Direction" ;
		qc_wdir:units = "unitless" ;
	float sd_deg(time) ;
		sd_deg:long_name = "Standard Deviation of wind direction" ;
		sd_deg:units = "deg" ;
		sd_deg:valid_min = 0.f ;
		sd_deg:valid_max = 90.f ;
		sd_deg:resolution = 0.1f ;
		sd_deg:missing_value = -9999.f ;
	int qc_sd_deg(time) ;
		qc_sd_deg:long_name = "Quality check results on field: Standard Deviation of wind direction" ;
		qc_sd_deg:units = "unitless" ;
	float temp(time) ;
		temp:long_name = "Temperature" ;
		temp:units = "C" ;
		temp:valid_min = -40.f ;
		temp:valid_max = 50.f ;
		temp:resolution = 0.01f ;
		temp:missing_value = -9999.f ;
		temp:uncertainty = "+/- 0.45 C for wind speed >/= 6.00 m/s\n",
    "+/- 0.89 C for wind speed = 3.00 m/s\n",
    "+/- 1.46 C for wind speed = 2.00 m/s\n",
    "+/- 3.07 C for wind speed = 1.00 m/s\n",
    "Errors included in uncertainty are radiation error, sensor\n",
    "interchangeability, bridge resistor precision, and polynomial\n",
    "curve fitting.  Radiation error is the largest contributor to\n",
    "the latter uncertainties.  Future algorithm development may\n",
    "reduce these uncertainties." ;
	int qc_temp(time) ;
		qc_temp:long_name = "Quality check results on field: Temperature" ;
		qc_temp:units = "unitless" ;
	float rh(time) ;
		rh:long_name = "Relative Humidity" ;
		rh:units = "%" ;
		rh:valid_min = -2.f ;
		rh:valid_max = 104.f ;
		rh:resolution = 0.1f ;
		rh:missing_value = -9999.f ;
		rh:uncertainty = "+/- 2.06 % RH for 0 to 90 % RH\n",
    "+/- 3.04 % RH for 90 to 100 % RH\n",
    "Errors included in uncertainty are calibration uncertainty,\n",
    "repeatability, temperature dependence, long term (1 yr)\n",
    "stability, and A/D conversion accuracy.  Wind speed dependence\n",
    "and radiation dependence have not been considered and may\n",
    "increase the uncertainty." ;
	int qc_rh(time) ;
		qc_rh:long_name = "Quality check results on field: Relative Humidity" ;
		qc_rh:units = "unitless" ;
	float vap_pres(time) ;
		vap_pres:long_name = "Vapor Pressure" ;
		vap_pres:units = "kPa" ;
		vap_pres:valid_min = 0.f ;
		vap_pres:valid_max = 10.f ;
		vap_pres:resolution = 0.001f ;
		vap_pres:missing_value = -9999.f ;
	int qc_vap_pres(time) ;
		qc_vap_pres:long_name = "Quality check results on field: Vapor Pressure" ;
		qc_vap_pres:units = "unitless" ;
	float bar_pres(time) ;
		bar_pres:long_name = "Barometric Pressure" ;
		bar_pres:units = "kPa" ;
		bar_pres:valid_min = 80.f ;
		bar_pres:valid_max = 110.f ;
		bar_pres:resolution = 0.01f ;
		bar_pres:missing_value = -9999.f ;
		bar_pres:uncertainty = "+/- 0.035 kPa\n",
    "Errors included in uncertainty are linearity, hysteresis,\n",
    "repeatability, calibration uncertainty, temperature dependence,\n",
    "and long-term (1 yr) stability.  Wind speed dependence has not\n",
    "been considered and may increase the uncertainty." ;
	int qc_bar_pres(time) ;
		qc_bar_pres:long_name = "Quality check results on field: Barometric Pressure" ;
		qc_bar_pres:units = "unitless" ;
	float precip(time) ;
		precip:long_name = "Precipitation Total" ;
		precip:units = "mm" ;
		precip:valid_min = 0.f ;
		precip:valid_max = 10.f ;
		precip:resolution = 0.001f ;
		precip:missing_value = -9999.f ;
		precip:uncertainty = "Under normal conditions, uncertainty for\n",
    "rain is +/- 0.254 mm (one bucket).  Uncertainty increases to\n",
    "an unknown value during strong winds or very heavy rains (in\n",
    "excess of 75 mm per hour). The instrument is not considered\n",
    "reliable for snow amounts." ;
	int qc_precip(time) ;
		qc_precip:long_name = "Quality check results on field: Precipitation Total" ;
		qc_precip:units = "unitless" ;
	float lat ;
		lat:long_name = "north latitude" ;
		lat:units = "degrees" ;
		lat:valid_min = -90.f ;
		lat:valid_max = 90.f ;
	float lon ;
		lon:long_name = "east longitude" ;
		lon:units = "degrees" ;
		lon:valid_min = -180.f ;
		lon:valid_max = 180.f ;
	float alt ;
		alt:long_name = "altitude" ;
		alt:units = "meters above Mean Sea Level" ;

// global attributes:
		:ingest_software = " smos_ingest.c,v 7.6 2003/10/02 23:29:29 ermold process-ingest-smos_ingest-7.5-0 $" ;
		:proc_level = "b1" ;
		:input_source = "smos11:/data/collection/sgp/sgpsmosE11.00/1087254120.icm" ;
		:site_id = "sgp" ;
		:facility_id = "E11 : Byron" ;
		:sample_int = "bar press - 1 minute\n",
    "all others 1 second" ;
		:averaging_int = "1 minute" ;
		:serial_number = "SMOS10" ;
		:comment = "The time assigned to each data point indicates the end of any\n",
    "period of averaging of the geophysical data.\n",
    "\n",
    "The snow depth sensors were removed from service in August 2002.\n",
    "\n",
    "Altitude is in meters above Mean Sea Level." ;
		:resolution_description = "The resolution field attributes refer to the number of significant\n",
    "digits relative to the decimal point that should be used in\n",
    "calculations.  Using fewer digits might result in greater uncertainty;\n",
    "using a larger number of digits should have no effect and thus is\n",
    "unnecessary.  However, analyses based on differences in values with\n",
    "a larger number of significant digits than indicated could lead to\n",
    "erroneous results or misleading scientific conclusions.\n",
    "\n",
    "resolution for lat= 0.001\n",
    "resolution for lon = 0.001\n",
    "resolution for alt = 1" ;
		:sensor_location = "Sensors heights (above base \"alt\"):\n",
    "  10m for winds\n",
    "  2m for temp, RH, and vap pres\n",
    "  1m for bar pres" ;
		:qc_method = "Standard Mentor QC" ;
		:Mentor_QC_Field_Information = "For each qc_<field> interpret the values as follows:\n",
    "\n",
    "Basic mentor QC checks (bit values):\n",
    "==========================================\n",
    "0x0 = value is within the specified range\n",
    "0x1 = value is equal to \'missing_value\'\n",
    "0x2 = value is less than the \'valid_min\'\n",
    "0x4 = value is greater than the \'valid_max\'\n",
    "0x8 = value failed the \'valid_delta\' check\n",
    "\n",
    "If the value is a \'missing_value\' no min, max, or delta checks are performed.\n",
    "\n",
    "The delta checks are done by comparing each data value to the one just\n",
    "prior to it in time. If a previous data value does not exist or is a\n",
    "\'missing_value\' the delta check will not be performed.\n",
    "\n",
    "Note that the delta computation for multi-dimensioned data compares the\n",
    "absolute value between points in the same spatial location to the previous\n",
    "point in time.\n",
    "\n",
    "If the associated non-QC field does not contain any mentor-specified minimum,\n",
    "maximum, or delta information a qc_field is not generated.\n",
    "" ;
		:zeb_platform = "sgp1smosE11.b1" ;
		:history = "created by user dsmgr on machine left at 15-Jun-2004,1:27:21, using $State: ds-zebra-zeblib-4.12-0 $" ;
}
netcdf sgp1smosE13.b1.20040615.000000 {
dimensions:
	time = UNLIMITED ; // (1440 currently)
variables:
	int base_time ;
		base_time:string = "14-Jun-2004,23:07:00 GMT" ;
		base_time:long_name = "Base time in Epoch" ;
		base_time:units = "seconds since 1970-1-1 0:00:00 0:00" ;
	double time_offset(time) ;
		time_offset:long_name = "Time offset from base_time" ;
		time_offset:units = "seconds since 2004-06-14 23:07:00 0:00" ;
	double time(time) ;
		time:long_name = "Time offset from midnight" ;
		time:units = "seconds since 2004-06-15 00:00:00 0:00" ;
	int qc_time(time) ;
		qc_time:long_name = "Results of quality checks on sample time" ;
		qc_time:units = "unitless" ;
		qc_time:description = "The qc_time values are calculated by comparing each sample\n",
    "time with the previous time (i.e. delta_t = t[n] - t[n-1]).\n",
    "If the \'qc_check_prior\' flag is set the first sample time\n",
    "from a new raw file will be compared against the time just\n",
    "previous to it in the stored data. If the \'qc_check_prior\'\n",
    "flag is not set the qc_time value for the first sample time\n",
    "will be set to 0\n",
    "\n",
    "The qc_time bit values are as follows:\n",
    "=========================================================\n",
    "0x0 = delta time is within the specified range\n",
    "0x1 = delta time is equal to 0, duplicate sample times\n",
    "0x2 = delta time is less than the \'delta_t_lower_limit\'\n",
    "0x4 = delta time is greater than the \'delta_t_upper_limit\'\n",
    "\n",
    "" ;
		qc_time:delta_t_lower_limit = 60 ;
		qc_time:delta_t_upper_limit = 60 ;
		qc_time:prior_sample_flag = 1 ;
	float wspd(time) ;
		wspd:long_name = "Wind Speed" ;
		wspd:units = "m/s" ;
		wspd:valid_min = 0.f ;
		wspd:valid_max = 60.f ;
		wspd:resolution = 0.01f ;
		wspd:missing_value = -9999.f ;
		wspd:threshold = "1.00 m/s" ;
		wspd:uncertainty = "+/- 1% for 2.5 to 30 m/s\n",
    "- 0.12 to +0.02 m/s at 2.0 m/s\n",
    "- 0.22 to +0.00 m/s at 1.5 m/s\n",
    "- 0.31 to -0.20 m/s at 1.0 m/s\n",
    "- 0.51 to -0.49 m/s at 0.5 m/s\n",
    "Error included in uncertainty are calibration accuracy,\n",
    "data logger timebase accuracy, and bias by underestimation\n",
    "due to threshold.  The latter assumes normal distibution\n",
    "of winds about the mean with standard deviations ranging\n",
    "between 0.25 and 1.00 m/s." ;
	int qc_wspd(time) ;
		qc_wspd:long_name = "Quality check results on field: Wind Speed" ;
		qc_wspd:units = "unitless" ;
	float wspd_va(time) ;
		wspd_va:long_name = "Wind Speed (vector averaged)" ;
		wspd_va:units = "m/s" ;
		wspd_va:valid_min = 0.f ;
		wspd_va:valid_max = 60.f ;
		wspd_va:resolution = 0.01f ;
		wspd_va:missing_value = -9999.f ;
	int qc_wspd_va(time) ;
		qc_wspd_va:long_name = "Quality check results on field: Wind Speed (vector averaged)" ;
		qc_wspd_va:units = "unitless" ;
	float wdir(time) ;
		wdir:long_name = "Wind Direction" ;
		wdir:units = "deg" ;
		wdir:valid_min = 0.f ;
		wdir:valid_max = 360.f ;
		wdir:resolution = 0.1f ;
		wdir:missing_value = -9999.f ;
		wdir:threshold = "Wind speed </= 1.00 m/s" ;
		wdir:uncertainty = "+/- 5.0 deg for wind speed > 1.0 m/s\n",
    "+/- 180.0 deg for wind speed </= 1.0 m/s\n",
    "Errors included in uncertainty are sensor accuracy,\n",
    "alignment accuracy, and A/D conversion accuracy." ;
	int qc_wdir(time) ;
		qc_wdir:long_name = "Quality check results on field: Wind Direction" ;
		qc_wdir:units = "unitless" ;
	float sd_deg(time) ;
		sd_deg:long_name = "Standard Deviation of wind direction" ;
		sd_deg:units = "deg" ;
		sd_deg:valid_min = 0.f ;
		sd_deg:valid_max = 90.f ;
		sd_deg:resolution = 0.1f ;
		sd_deg:missing_value = -9999.f ;
	int qc_sd_deg(time) ;
		qc_sd_deg:long_name = "Quality check results on field: Standard Deviation of wind direction" ;
		qc_sd_deg:units = "unitless" ;
	float temp(time) ;
		temp:long_name = "Temperature" ;
		temp:units = "C" ;
		temp:valid_min = -40.f ;
		temp:valid_max = 50.f ;
		temp:resolution = 0.01f ;
		temp:missing_value = -9999.f ;
		temp:uncertainty = "+/- 0.45 C for wind speed >/= 6.00 m/s\n",
    "+/- 0.89 C for wind speed = 3.00 m/s\n",
    "+/- 1.46 C for wind speed = 2.00 m/s\n",
    "+/- 3.07 C for wind speed = 1.00 m/s\n",
    "Errors included in uncertainty are radiation error, sensor\n",
    "interchangeability, bridge resistor precision, and polynomial\n",
    "curve fitting.  Radiation error is the largest contributor to\n",
    "the latter uncertainties.  Future algorithm development may\n",
    "reduce these uncertainties." ;
	int qc_temp(time) ;
		qc_temp:long_name = "Quality check results on field: Temperature" ;
		qc_temp:units = "unitless" ;
	float rh(time) ;
		rh:long_name = "Relative Humidity" ;
		rh:units = "%" ;
		rh:valid_min = -2.f ;
		rh:valid_max = 104.f ;
		rh:resolution = 0.1f ;
		rh:missing_value = -9999.f ;
		rh:uncertainty = "+/- 2.06 % RH for 0 to 90 % RH\n",
    "+/- 3.04 % RH for 90 to 100 % RH\n",
    "Errors included in uncertainty are calibration uncertainty,\n",
    "repeatability, temperature dependence, long term (1 yr)\n",
    "stability, and A/D conversion accuracy.  Wind speed dependence\n",
    "and radiation dependence have not been considered and may\n",
    "increase the uncertainty." ;
	int qc_rh(time) ;
		qc_rh:long_name = "Quality check results on field: Relative Humidity" ;
		qc_rh:units = "unitless" ;
	float vap_pres(time) ;
		vap_pres:long_name = "Vapor Pressure" ;
		vap_pres:units = "kPa" ;
		vap_pres:valid_min = 0.f ;
		vap_pres:valid_max = 10.f ;
		vap_pres:resolution = 0.001f ;
		vap_pres:missing_value = -9999.f ;
	int qc_vap_pres(time) ;
		qc_vap_pres:long_name = "Quality check results on field: Vapor Pressure" ;
		qc_vap_pres:units = "unitless" ;
	float bar_pres(time) ;
		bar_pres:long_name = "Barometric Pressure" ;
		bar_pres:units = "kPa" ;
		bar_pres:valid_min = 80.f ;
		bar_pres:valid_max = 110.f ;
		bar_pres:resolution = 0.01f ;
		bar_pres:missing_value = -9999.f ;
		bar_pres:uncertainty = "+/- 0.035 kPa\n",
    "Errors included in uncertainty are linearity, hysteresis,\n",
    "repeatability, calibration uncertainty, temperature dependence,\n",
    "and long-term (1 yr) stability.  Wind speed dependence has not\n",
    "been considered and may increase the uncertainty." ;
	int qc_bar_pres(time) ;
		qc_bar_pres:long_name = "Quality check results on field: Barometric Pressure" ;
		qc_bar_pres:units = "unitless" ;
	float precip(time) ;
		precip:long_name = "Precipitation Total" ;
		precip:units = "mm" ;
		precip:valid_min = 0.f ;
		precip:valid_max = 10.f ;
		precip:resolution = 0.001f ;
		precip:missing_value = -9999.f ;
		precip:uncertainty = "Under normal conditions, uncertainty for\n",
    "rain is +/- 0.254 mm (one bucket).  Uncertainty increases to\n",
    "an unknown value during strong winds or very heavy rains (in\n",
    "excess of 75 mm per hour). The instrument is not considered\n",
    "reliable for snow amounts." ;
	int qc_precip(time) ;
		qc_precip:long_name = "Quality check results on field: Precipitation Total" ;
		qc_precip:units = "unitless" ;
	float lat ;
		lat:long_name = "north latitude" ;
		lat:units = "degrees" ;
		lat:valid_min = -90.f ;
		lat:valid_max = 90.f ;
	float lon ;
		lon:long_name = "east longitude" ;
		lon:units = "degrees" ;
		lon:valid_min = -180.f ;
		lon:valid_max = 180.f ;
	float alt ;
		alt:long_name = "altitude" ;
		alt:units = "meters above Mean Sea Level" ;

// global attributes:
		:ingest_software = " smos_ingest.c,v 7.6 2003/10/02 23:29:29 ermold process-ingest-smos_ingest-7.5-0 $" ;
		:proc_level = "b1" ;
		:input_source = "smos13:/data/collection/sgp/sgpsmosE13.00/1087254420.icm" ;
		:site_id = "sgp" ;
		:facility_id = "E13 : Lamont_CF1" ;
		:sample_int = "bar press - 1 minute\n",
    "all others 1 second" ;
		:averaging_int = "1 minute" ;
		:serial_number = "SMOS8" ;
		:comment = "The time assigned to each data point indicates the end of any\n",
    "period of averaging of the geophysical data.\n",
    "\n",
    "The snow depth sensors were removed from service in August 2002.\n",
    "\n",
    "Altitude is in meters above Mean Sea Level." ;
		:resolution_description = "The resolution field attributes refer to the number of significant\n",
    "digits relative to the decimal point that should be used in\n",
    "calculations.  Using fewer digits might result in greater uncertainty;\n",
    "using a larger number of digits should have no effect and thus is\n",
    "unnecessary.  However, analyses based on differences in values with\n",
    "a larger number of significant digits than indicated could lead to\n",
    "erroneous results or misleading scientific conclusions.\n",
    "\n",
    "resolution for lat= 0.001\n",
    "resolution for lon = 0.001\n",
    "resolution for alt = 1" ;
		:sensor_location = "Sensors heights (above base \"alt\"):\n",
    "  10m for winds\n",
    "  2m for temp, RH, and vap pres\n",
    "  1m for bar pres" ;
		:qc_method = "Standard Mentor QC" ;
		:Mentor_QC_Field_Information = "For each qc_<field> interpret the values as follows:\n",
    "\n",
    "Basic mentor QC checks (bit values):\n",
    "==========================================\n",
    "0x0 = value is within the specified range\n",
    "0x1 = value is equal to \'missing_value\'\n",
    "0x2 = value is less than the \'valid_min\'\n",
    "0x4 = value is greater than the \'valid_max\'\n",
    "0x8 = value failed the \'valid_delta\' check\n",
    "\n",
    "If the value is a \'missing_value\' no min, max, or delta checks are performed.\n",
    "\n",
    "The delta checks are done by comparing each data value to the one just\n",
    "prior to it in time. If a previous data value does not exist or is a\n",
    "\'missing_value\' the delta check will not be performed.\n",
    "\n",
    "Note that the delta computation for multi-dimensioned data compares the\n",
    "absolute value between points in the same spatial location to the previous\n",
    "point in time.\n",
    "\n",
    "If the associated non-QC field does not contain any mentor-specified minimum,\n",
    "maximum, or delta information a qc_field is not generated.\n",
    "" ;
		:zeb_platform = "sgp1smosE13.b1" ;
		:history = "created by user dsmgr on machine left at 15-Jun-2004,1:13:00, using $State: ds-zebra-zeblib-4.12-0 $" ;
}
netcdf sgp1smosE15.b1.20040615.000000 {
dimensions:
	time = UNLIMITED ; // (1440 currently)
variables:
	int base_time ;
		base_time:string = "14-Jun-2004,23:02:00 GMT" ;
		base_time:long_name = "Base time in Epoch" ;
		base_time:units = "seconds since 1970-1-1 0:00:00 0:00" ;
	double time_offset(time) ;
		time_offset:long_name = "Time offset from base_time" ;
		time_offset:units = "seconds since 2004-06-14 23:02:00 0:00" ;
	double time(time) ;
		time:long_name = "Time offset from midnight" ;
		time:units = "seconds since 2004-06-15 00:00:00 0:00" ;
	int qc_time(time) ;
		qc_time:long_name = "Results of quality checks on sample time" ;
		qc_time:units = "unitless" ;
		qc_time:description = "The qc_time values are calculated by comparing each sample\n",
    "time with the previous time (i.e. delta_t = t[n] - t[n-1]).\n",
    "If the \'qc_check_prior\' flag is set the first sample time\n",
    "from a new raw file will be compared against the time just\n",
    "previous to it in the stored data. If the \'qc_check_prior\'\n",
    "flag is not set the qc_time value for the first sample time\n",
    "will be set to 0\n",
    "\n",
    "The qc_time bit values are as follows:\n",
    "=========================================================\n",
    "0x0 = delta time is within the specified range\n",
    "0x1 = delta time is equal to 0, duplicate sample times\n",
    "0x2 = delta time is less than the \'delta_t_lower_limit\'\n",
    "0x4 = delta time is greater than the \'delta_t_upper_limit\'\n",
    "\n",
    "" ;
		qc_time:delta_t_lower_limit = 60 ;
		qc_time:delta_t_upper_limit = 60 ;
		qc_time:prior_sample_flag = 1 ;
	float wspd(time) ;
		wspd:long_name = "Wind Speed" ;
		wspd:units = "m/s" ;
		wspd:valid_min = 0.f ;
		wspd:valid_max = 60.f ;
		wspd:resolution = 0.01f ;
		wspd:missing_value = -9999.f ;
		wspd:threshold = "1.00 m/s" ;
		wspd:uncertainty = "+/- 1% for 2.5 to 30 m/s\n",
    "- 0.12 to +0.02 m/s at 2.0 m/s\n",
    "- 0.22 to +0.00 m/s at 1.5 m/s\n",
    "- 0.31 to -0.20 m/s at 1.0 m/s\n",
    "- 0.51 to -0.49 m/s at 0.5 m/s\n",
    "Error included in uncertainty are calibration accuracy,\n",
    "data logger timebase accuracy, and bias by underestimation\n",
    "due to threshold.  The latter assumes normal distibution\n",
    "of winds about the mean with standard deviations ranging\n",
    "between 0.25 and 1.00 m/s." ;
	int qc_wspd(time) ;
		qc_wspd:long_name = "Quality check results on field: Wind Speed" ;
		qc_wspd:units = "unitless" ;
	float wspd_va(time) ;
		wspd_va:long_name = "Wind Speed (vector averaged)" ;
		wspd_va:units = "m/s" ;
		wspd_va:valid_min = 0.f ;
		wspd_va:valid_max = 60.f ;
		wspd_va:resolution = 0.01f ;
		wspd_va:missing_value = -9999.f ;
	int qc_wspd_va(time) ;
		qc_wspd_va:long_name = "Quality check results on field: Wind Speed (vector averaged)" ;
		qc_wspd_va:units = "unitless" ;
	float wdir(time) ;
		wdir:long_name = "Wind Direction" ;
		wdir:units = "deg" ;
		wdir:valid_min = 0.f ;
		wdir:valid_max = 360.f ;
		wdir:resolution = 0.1f ;
		wdir:missing_value = -9999.f ;
		wdir:threshold = "Wind speed </= 1.00 m/s" ;
		wdir:uncertainty = "+/- 5.0 deg for wind speed > 1.0 m/s\n",
    "+/- 180.0 deg for wind speed </= 1.0 m/s\n",
    "Errors included in uncertainty are sensor accuracy,\n",
    "alignment accuracy, and A/D conversion accuracy." ;
	int qc_wdir(time) ;
		qc_wdir:long_name = "Quality check results on field: Wind Direction" ;
		qc_wdir:units = "unitless" ;
	float sd_deg(time) ;
		sd_deg:long_name = "Standard Deviation of wind direction" ;
		sd_deg:units = "deg" ;
		sd_deg:valid_min = 0.f ;
		sd_deg:valid_max = 90.f ;
		sd_deg:resolution = 0.1f ;
		sd_deg:missing_value = -9999.f ;
	int qc_sd_deg(time) ;
		qc_sd_deg:long_name = "Quality check results on field: Standard Deviation of wind direction" ;
		qc_sd_deg:units = "unitless" ;
	float temp(time) ;
		temp:long_name = "Temperature" ;
		temp:units = "C" ;
		temp:valid_min = -40.f ;
		temp:valid_max = 50.f ;
		temp:resolution = 0.01f ;
		temp:missing_value = -9999.f ;
		temp:uncertainty = "+/- 0.45 C for wind speed >/= 6.00 m/s\n",
    "+/- 0.89 C for wind speed = 3.00 m/s\n",
    "+/- 1.46 C for wind speed = 2.00 m/s\n",
    "+/- 3.07 C for wind speed = 1.00 m/s\n",
    "Errors included in uncertainty are radiation error, sensor\n",
    "interchangeability, bridge resistor precision, and polynomial\n",
    "curve fitting.  Radiation error is the largest contributor to\n",
    "the latter uncertainties.  Future algorithm development may\n",
    "reduce these uncertainties." ;
	int qc_temp(time) ;
		qc_temp:long_name = "Quality check results on field: Temperature" ;
		qc_temp:units = "unitless" ;
	float rh(time) ;
		rh:long_name = "Relative Humidity" ;
		rh:units = "%" ;
		rh:valid_min = -2.f ;
		rh:valid_max = 104.f ;
		rh:resolution = 0.1f ;
		rh:missing_value = -9999.f ;
		rh:uncertainty = "+/- 2.06 % RH for 0 to 90 % RH\n",
    "+/- 3.04 % RH for 90 to 100 % RH\n",
    "Errors included in uncertainty are calibration uncertainty,\n",
    "repeatability, temperature dependence, long term (1 yr)\n",
    "stability, and A/D conversion accuracy.  Wind speed dependence\n",
    "and radiation dependence have not been considered and may\n",
    "increase the uncertainty." ;
	int qc_rh(time) ;
		qc_rh:long_name = "Quality check results on field: Relative Humidity" ;
		qc_rh:units = "unitless" ;
	float vap_pres(time) ;
		vap_pres:long_name = "Vapor Pressure" ;
		vap_pres:units = "kPa" ;
		vap_pres:valid_min = 0.f ;
		vap_pres:valid_max = 10.f ;
		vap_pres:resolution = 0.001f ;
		vap_pres:missing_value = -9999.f ;
	int qc_vap_pres(time) ;
		qc_vap_pres:long_name = "Quality check results on field: Vapor Pressure" ;
		qc_vap_pres:units = "unitless" ;
	float bar_pres(time) ;
		bar_pres:long_name = "Barometric Pressure" ;
		bar_pres:units = "kPa" ;
		bar_pres:valid_min = 80.f ;
		bar_pres:valid_max = 110.f ;
		bar_pres:resolution = 0.01f ;
		bar_pres:missing_value = -9999.f ;
		bar_pres:uncertainty = "+/- 0.035 kPa\n",
    "Errors included in uncertainty are linearity, hysteresis,\n",
    "repeatability, calibration uncertainty, temperature dependence,\n",
    "and long-term (1 yr) stability.  Wind speed dependence has not\n",
    "been considered and may increase the uncertainty." ;
	int qc_bar_pres(time) ;
		qc_bar_pres:long_name = "Quality check results on field: Barometric Pressure" ;
		qc_bar_pres:units = "unitless" ;
	float precip(time) ;
		precip:long_name = "Precipitation Total" ;
		precip:units = "mm" ;
		precip:valid_min = 0.f ;
		precip:valid_max = 10.f ;
		precip:resolution = 0.001f ;
		precip:missing_value = -9999.f ;
		precip:uncertainty = "Under normal conditions, uncertainty for\n",
    "rain is +/- 0.254 mm (one bucket).  Uncertainty increases to\n",
    "an unknown value during strong winds or very heavy rains (in\n",
    "excess of 75 mm per hour). The instrument is not considered\n",
    "reliable for snow amounts." ;
	int qc_precip(time) ;
		qc_precip:long_name = "Quality check results on field: Precipitation Total" ;
		qc_precip:units = "unitless" ;
	float lat ;
		lat:long_name = "north latitude" ;
		lat:units = "degrees" ;
		lat:valid_min = -90.f ;
		lat:valid_max = 90.f ;
	float lon ;
		lon:long_name = "east longitude" ;
		lon:units = "degrees" ;
		lon:valid_min = -180.f ;
		lon:valid_max = 180.f ;
	float alt ;
		alt:long_name = "altitude" ;
		alt:units = "meters above Mean Sea Level" ;

// global attributes:
		:ingest_software = " smos_ingest.c,v 7.6 2003/10/02 23:29:29 ermold process-ingest-smos_ingest-7.5-0 $" ;
		:proc_level = "b1" ;
		:input_source = "smos15:/data/collection/sgp/sgpsmosE15.00/1087254120.icm" ;
		:site_id = "sgp" ;
		:facility_id = "E15 : Ringwood" ;
		:sample_int = "bar press - 1 minute\n",
    "all others 1 second" ;
		:averaging_int = "1 minute" ;
		:serial_number = "SMOS5" ;
		:comment = "The time assigned to each data point indicates the end of any\n",
    "period of averaging of the geophysical data.\n",
    "\n",
    "The snow depth sensors were removed from service in August 2002.\n",
    "\n",
    "Altitude is in meters above Mean Sea Level." ;
		:resolution_description = "The resolution field attributes refer to the number of significant\n",
    "digits relative to the decimal point that should be used in\n",
    "calculations.  Using fewer digits might result in greater uncertainty;\n",
    "using a larger number of digits should have no effect and thus is\n",
    "unnecessary.  However, analyses based on differences in values with\n",
    "a larger number of significant digits than indicated could lead to\n",
    "erroneous results or misleading scientific conclusions.\n",
    "\n",
    "resolution for lat= 0.001\n",
    "resolution for lon = 0.001\n",
    "resolution for alt = 1" ;
		:sensor_location = "Sensors heights (above base \"alt\"):\n",
    "  10m for winds\n",
    "  2m for temp, RH, and vap pres\n",
    "  1m for bar pres" ;
		:qc_method = "Standard Mentor QC" ;
		:Mentor_QC_Field_Information = "For each qc_<field> interpret the values as follows:\n",
    "\n",
    "Basic mentor QC checks (bit values):\n",
    "==========================================\n",
    "0x0 = value is within the specified range\n",
    "0x1 = value is equal to \'missing_value\'\n",
    "0x2 = value is less than the \'valid_min\'\n",
    "0x4 = value is greater than the \'valid_max\'\n",
    "0x8 = value failed the \'valid_delta\' check\n",
    "\n",
    "If the value is a \'missing_value\' no min, max, or delta checks are performed.\n",
    "\n",
    "The delta checks are done by comparing each data value to the one just\n",
    "prior to it in time. If a previous data value does not exist or is a\n",
    "\'missing_value\' the delta check will not be performed.\n",
    "\n",
    "Note that the delta computation for multi-dimensioned data compares the\n",
    "absolute value between points in the same spatial location to the previous\n",
    "point in time.\n",
    "\n",
    "If the associated non-QC field does not contain any mentor-specified minimum,\n",
    "maximum, or delta information a qc_field is not generated.\n",
    "" ;
		:zeb_platform = "sgp1smosE15.b1" ;
		:history = "created by user dsmgr on machine left at 15-Jun-2004,1:14:14, using $State: ds-zebra-zeblib-4.12-0 $" ;
}
netcdf sgp1smosE20.b1.20040615.000000 {
dimensions:
	time = UNLIMITED ; // (1440 currently)
variables:
	int base_time ;
		base_time:string = "14-Jun-2004,23:02:00 GMT" ;
		base_time:long_name = "Base time in Epoch" ;
		base_time:units = "seconds since 1970-1-1 0:00:00 0:00" ;
	double time_offset(time) ;
		time_offset:long_name = "Time offset from base_time" ;
		time_offset:units = "seconds since 2004-06-14 23:02:00 0:00" ;
	double time(time) ;
		time:long_name = "Time offset from midnight" ;
		time:units = "seconds since 2004-06-15 00:00:00 0:00" ;
	int qc_time(time) ;
		qc_time:long_name = "Results of quality checks on sample time" ;
		qc_time:units = "unitless" ;
		qc_time:description = "The qc_time values are calculated by comparing each sample\n",
    "time with the previous time (i.e. delta_t = t[n] - t[n-1]).\n",
    "If the \'qc_check_prior\' flag is set the first sample time\n",
    "from a new raw file will be compared against the time just\n",
    "previous to it in the stored data. If the \'qc_check_prior\'\n",
    "flag is not set the qc_time value for the first sample time\n",
    "will be set to 0\n",
    "\n",
    "The qc_time bit values are as follows:\n",
    "=========================================================\n",
    "0x0 = delta time is within the specified range\n",
    "0x1 = delta time is equal to 0, duplicate sample times\n",
    "0x2 = delta time is less than the \'delta_t_lower_limit\'\n",
    "0x4 = delta time is greater than the \'delta_t_upper_limit\'\n",
    "\n",
    "" ;
		qc_time:delta_t_lower_limit = 60 ;
		qc_time:delta_t_upper_limit = 60 ;
		qc_time:prior_sample_flag = 1 ;
	float wspd(time) ;
		wspd:long_name = "Wind Speed" ;
		wspd:units = "m/s" ;
		wspd:valid_min = 0.f ;
		wspd:valid_max = 60.f ;
		wspd:resolution = 0.01f ;
		wspd:missing_value = -9999.f ;
		wspd:threshold = "1.00 m/s" ;
		wspd:uncertainty = "+/- 1% for 2.5 to 30 m/s\n",
    "- 0.12 to +0.02 m/s at 2.0 m/s\n",
    "- 0.22 to +0.00 m/s at 1.5 m/s\n",
    "- 0.31 to -0.20 m/s at 1.0 m/s\n",
    "- 0.51 to -0.49 m/s at 0.5 m/s\n",
    "Error included in uncertainty are calibration accuracy,\n",
    "data logger timebase accuracy, and bias by underestimation\n",
    "due to threshold.  The latter assumes normal distibution\n",
    "of winds about the mean with standard deviations ranging\n",
    "between 0.25 and 1.00 m/s." ;
	int qc_wspd(time) ;
		qc_wspd:long_name = "Quality check results on field: Wind Speed" ;
		qc_wspd:units = "unitless" ;
	float wspd_va(time) ;
		wspd_va:long_name = "Wind Speed (vector averaged)" ;
		wspd_va:units = "m/s" ;
		wspd_va:valid_min = 0.f ;
		wspd_va:valid_max = 60.f ;
		wspd_va:resolution = 0.01f ;
		wspd_va:missing_value = -9999.f ;
	int qc_wspd_va(time) ;
		qc_wspd_va:long_name = "Quality check results on field: Wind Speed (vector averaged)" ;
		qc_wspd_va:units = "unitless" ;
	float wdir(time) ;
		wdir:long_name = "Wind Direction" ;
		wdir:units = "deg" ;
		wdir:valid_min = 0.f ;
		wdir:valid_max = 360.f ;
		wdir:resolution = 0.1f ;
		wdir:missing_value = -9999.f ;
		wdir:threshold = "Wind speed </= 1.00 m/s" ;
		wdir:uncertainty = "+/- 5.0 deg for wind speed > 1.0 m/s\n",
    "+/- 180.0 deg for wind speed </= 1.0 m/s\n",
    "Errors included in uncertainty are sensor accuracy,\n",
    "alignment accuracy, and A/D conversion accuracy." ;
	int qc_wdir(time) ;
		qc_wdir:long_name = "Quality check results on field: Wind Direction" ;
		qc_wdir:units = "unitless" ;
	float sd_deg(time) ;
		sd_deg:long_name = "Standard Deviation of wind direction" ;
		sd_deg:units = "deg" ;
		sd_deg:valid_min = 0.f ;
		sd_deg:valid_max = 90.f ;
		sd_deg:resolution = 0.1f ;
		sd_deg:missing_value = -9999.f ;
	int qc_sd_deg(time) ;
		qc_sd_deg:long_name = "Quality check results on field: Standard Deviation of wind direction" ;
		qc_sd_deg:units = "unitless" ;
	float temp(time) ;
		temp:long_name = "Temperature" ;
		temp:units = "C" ;
		temp:valid_min = -40.f ;
		temp:valid_max = 50.f ;
		temp:resolution = 0.01f ;
		temp:missing_value = -9999.f ;
		temp:uncertainty = "+/- 0.45 C for wind speed >/= 6.00 m/s\n",
    "+/- 0.89 C for wind speed = 3.00 m/s\n",
    "+/- 1.46 C for wind speed = 2.00 m/s\n",
    "+/- 3.07 C for wind speed = 1.00 m/s\n",
    "Errors included in uncertainty are radiation error, sensor\n",
    "interchangeability, bridge resistor precision, and polynomial\n",
    "curve fitting.  Radiation error is the largest contributor to\n",
    "the latter uncertainties.  Future algorithm development may\n",
    "reduce these uncertainties." ;
	int qc_temp(time) ;
		qc_temp:long_name = "Quality check results on field: Temperature" ;
		qc_temp:units = "unitless" ;
	float rh(time) ;
		rh:long_name = "Relative Humidity" ;
		rh:units = "%" ;
		rh:valid_min = -2.f ;
		rh:valid_max = 104.f ;
		rh:resolution = 0.1f ;
		rh:missing_value = -9999.f ;
		rh:uncertainty = "+/- 2.06 % RH for 0 to 90 % RH\n",
    "+/- 3.04 % RH for 90 to 100 % RH\n",
    "Errors included in uncertainty are calibration uncertainty,\n",
    "repeatability, temperature dependence, long term (1 yr)\n",
    "stability, and A/D conversion accuracy.  Wind speed dependence\n",
    "and radiation dependence have not been considered and may\n",
    "increase the uncertainty." ;
	int qc_rh(time) ;
		qc_rh:long_name = "Quality check results on field: Relative Humidity" ;
		qc_rh:units = "unitless" ;
	float vap_pres(time) ;
		vap_pres:long_name = "Vapor Pressure" ;
		vap_pres:units = "kPa" ;
		vap_pres:valid_min = 0.f ;
		vap_pres:valid_max = 10.f ;
		vap_pres:resolution = 0.001f ;
		vap_pres:missing_value = -9999.f ;
	int qc_vap_pres(time) ;
		qc_vap_pres:long_name = "Quality check results on field: Vapor Pressure" ;
		qc_vap_pres:units = "unitless" ;
	float bar_pres(time) ;
		bar_pres:long_name = "Barometric Pressure" ;
		bar_pres:units = "kPa" ;
		bar_pres:valid_min = 80.f ;
		bar_pres:valid_max = 110.f ;
		bar_pres:resolution = 0.01f ;
		bar_pres:missing_value = -9999.f ;
		bar_pres:uncertainty = "+/- 0.035 kPa\n",
    "Errors included in uncertainty are linearity, hysteresis,\n",
    "repeatability, calibration uncertainty, temperature dependence,\n",
    "and long-term (1 yr) stability.  Wind speed dependence has not\n",
    "been considered and may increase the uncertainty." ;
	int qc_bar_pres(time) ;
		qc_bar_pres:long_name = "Quality check results on field: Barometric Pressure" ;
		qc_bar_pres:units = "unitless" ;
	float precip(time) ;
		precip:long_name = "Precipitation Total" ;
		precip:units = "mm" ;
		precip:valid_min = 0.f ;
		precip:valid_max = 10.f ;
		precip:resolution = 0.001f ;
		precip:missing_value = -9999.f ;
		precip:uncertainty = "Under normal conditions, uncertainty for\n",
    "rain is +/- 0.254 mm (one bucket).  Uncertainty increases to\n",
    "an unknown value during strong winds or very heavy rains (in\n",
    "excess of 75 mm per hour). The instrument is not considered\n",
    "reliable for snow amounts." ;
	int qc_precip(time) ;
		qc_precip:long_name = "Quality check results on field: Precipitation Total" ;
		qc_precip:units = "unitless" ;
	float lat ;
		lat:long_name = "north latitude" ;
		lat:units = "degrees" ;
		lat:valid_min = -90.f ;
		lat:valid_max = 90.f ;
	float lon ;
		lon:long_name = "east longitude" ;
		lon:units = "degrees" ;
		lon:valid_min = -180.f ;
		lon:valid_max = 180.f ;
	float alt ;
		alt:long_name = "altitude" ;
		alt:units = "meters above Mean Sea Level" ;

// global attributes:
		:ingest_software = " smos_ingest.c,v 7.6 2003/10/02 23:29:29 ermold process-ingest-smos_ingest-7.5-0 $" ;
		:proc_level = "b1" ;
		:input_source = "smos20:/data/collection/sgp/sgpsmosE20.00/1087254120.icm" ;
		:site_id = "sgp" ;
		:facility_id = "E20 : Meeker" ;
		:sample_int = "bar press - 1 minute\n",
    "all others 1 second" ;
		:averaging_int = "1 minute" ;
		:serial_number = "SMOS4" ;
		:comment = "The time assigned to each data point indicates the end of any\n",
    "period of averaging of the geophysical data.\n",
    "\n",
    "The snow depth sensors were removed from service in August 2002.\n",
    "\n",
    "Altitude is in meters above Mean Sea Level." ;
		:resolution_description = "The resolution field attributes refer to the number of significant\n",
    "digits relative to the decimal point that should be used in\n",
    "calculations.  Using fewer digits might result in greater uncertainty;\n",
    "using a larger number of digits should have no effect and thus is\n",
    "unnecessary.  However, analyses based on differences in values with\n",
    "a larger number of significant digits than indicated could lead to\n",
    "erroneous results or misleading scientific conclusions.\n",
    "\n",
    "resolution for lat= 0.001\n",
    "resolution for lon = 0.001\n",
    "resolution for alt = 1" ;
		:sensor_location = "Sensors heights (above base \"alt\"):\n",
    "  10m for winds\n",
    "  2m for temp, RH, and vap pres\n",
    "  1m for bar pres" ;
		:qc_method = "Standard Mentor QC" ;
		:Mentor_QC_Field_Information = "For each qc_<field> interpret the values as follows:\n",
    "\n",
    "Basic mentor QC checks (bit values):\n",
    "==========================================\n",
    "0x0 = value is within the specified range\n",
    "0x1 = value is equal to \'missing_value\'\n",
    "0x2 = value is less than the \'valid_min\'\n",
    "0x4 = value is greater than the \'valid_max\'\n",
    "0x8 = value failed the \'valid_delta\' check\n",
    "\n",
    "If the value is a \'missing_value\' no min, max, or delta checks are performed.\n",
    "\n",
    "The delta checks are done by comparing each data value to the one just\n",
    "prior to it in time. If a previous data value does not exist or is a\n",
    "\'missing_value\' the delta check will not be performed.\n",
    "\n",
    "Note that the delta computation for multi-dimensioned data compares the\n",
    "absolute value between points in the same spatial location to the previous\n",
    "point in time.\n",
    "\n",
    "If the associated non-QC field does not contain any mentor-specified minimum,\n",
    "maximum, or delta information a qc_field is not generated.\n",
    "" ;
		:zeb_platform = "sgp1smosE20.b1" ;
		:history = "created by user dsmgr on machine left at 15-Jun-2004,1:15:58, using $State: ds-zebra-zeblib-4.12-0 $" ;
}
netcdf sgp1smosE21.b1.20040615.000000 {
dimensions:
	time = UNLIMITED ; // (1440 currently)
variables:
	int base_time ;
		base_time:string = "14-Jun-2004,23:02:00 GMT" ;
		base_time:long_name = "Base time in Epoch" ;
		base_time:units = "seconds since 1970-1-1 0:00:00 0:00" ;
	double time_offset(time) ;
		time_offset:long_name = "Time offset from base_time" ;
		time_offset:units = "seconds since 2004-06-14 23:02:00 0:00" ;
	double time(time) ;
		time:long_name = "Time offset from midnight" ;
		time:units = "seconds since 2004-06-15 00:00:00 0:00" ;
	int qc_time(time) ;
		qc_time:long_name = "Results of quality checks on sample time" ;
		qc_time:units = "unitless" ;
		qc_time:description = "The qc_time values are calculated by comparing each sample\n",
    "time with the previous time (i.e. delta_t = t[n] - t[n-1]).\n",
    "If the \'qc_check_prior\' flag is set the first sample time\n",
    "from a new raw file will be compared against the time just\n",
    "previous to it in the stored data. If the \'qc_check_prior\'\n",
    "flag is not set the qc_time value for the first sample time\n",
    "will be set to 0\n",
    "\n",
    "The qc_time bit values are as follows:\n",
    "=========================================================\n",
    "0x0 = delta time is within the specified range\n",
    "0x1 = delta time is equal to 0, duplicate sample times\n",
    "0x2 = delta time is less than the \'delta_t_lower_limit\'\n",
    "0x4 = delta time is greater than the \'delta_t_upper_limit\'\n",
    "\n",
    "" ;
		qc_time:delta_t_lower_limit = 60 ;
		qc_time:delta_t_upper_limit = 60 ;
		qc_time:prior_sample_flag = 1 ;
	float wspd(time) ;
		wspd:long_name = "Wind Speed" ;
		wspd:units = "m/s" ;
		wspd:valid_min = 0.f ;
		wspd:valid_max = 60.f ;
		wspd:resolution = 0.01f ;
		wspd:missing_value = -9999.f ;
		wspd:threshold = "1.00 m/s" ;
		wspd:uncertainty = "+/- 1% for 2.5 to 30 m/s\n",
    "- 0.12 to +0.02 m/s at 2.0 m/s\n",
    "- 0.22 to +0.00 m/s at 1.5 m/s\n",
    "- 0.31 to -0.20 m/s at 1.0 m/s\n",
    "- 0.51 to -0.49 m/s at 0.5 m/s\n",
    "Error included in uncertainty are calibration accuracy,\n",
    "data logger timebase accuracy, and bias by underestimation\n",
    "due to threshold.  The latter assumes normal distibution\n",
    "of winds about the mean with standard deviations ranging\n",
    "between 0.25 and 1.00 m/s." ;
	int qc_wspd(time) ;
		qc_wspd:long_name = "Quality check results on field: Wind Speed" ;
		qc_wspd:units = "unitless" ;
	float wspd_va(time) ;
		wspd_va:long_name = "Wind Speed (vector averaged)" ;
		wspd_va:units = "m/s" ;
		wspd_va:valid_min = 0.f ;
		wspd_va:valid_max = 60.f ;
		wspd_va:resolution = 0.01f ;
		wspd_va:missing_value = -9999.f ;
	int qc_wspd_va(time) ;
		qc_wspd_va:long_name = "Quality check results on field: Wind Speed (vector averaged)" ;
		qc_wspd_va:units = "unitless" ;
	float wdir(time) ;
		wdir:long_name = "Wind Direction" ;
		wdir:units = "deg" ;
		wdir:valid_min = 0.f ;
		wdir:valid_max = 360.f ;
		wdir:resolution = 0.1f ;
		wdir:missing_value = -9999.f ;
		wdir:threshold = "Wind speed </= 1.00 m/s" ;
		wdir:uncertainty = "+/- 5.0 deg for wind speed > 1.0 m/s\n",
    "+/- 180.0 deg for wind speed </= 1.0 m/s\n",
    "Errors included in uncertainty are sensor accuracy,\n",
    "alignment accuracy, and A/D conversion accuracy." ;
	int qc_wdir(time) ;
		qc_wdir:long_name = "Quality check results on field: Wind Direction" ;
		qc_wdir:units = "unitless" ;
	float sd_deg(time) ;
		sd_deg:long_name = "Standard Deviation of wind direction" ;
		sd_deg:units = "deg" ;
		sd_deg:valid_min = 0.f ;
		sd_deg:valid_max = 90.f ;
		sd_deg:resolution = 0.1f ;
		sd_deg:missing_value = -9999.f ;
	int qc_sd_deg(time) ;
		qc_sd_deg:long_name = "Quality check results on field: Standard Deviation of wind direction" ;
		qc_sd_deg:units = "unitless" ;
	float temp(time) ;
		temp:long_name = "Temperature" ;
		temp:units = "C" ;
		temp:valid_min = -40.f ;
		temp:valid_max = 50.f ;
		temp:resolution = 0.01f ;
		temp:missing_value = -9999.f ;
		temp:uncertainty = "+/- 0.45 C for wind speed >/= 6.00 m/s\n",
    "+/- 0.89 C for wind speed = 3.00 m/s\n",
    "+/- 1.46 C for wind speed = 2.00 m/s\n",
    "+/- 3.07 C for wind speed = 1.00 m/s\n",
    "Errors included in uncertainty are radiation error, sensor\n",
    "interchangeability, bridge resistor precision, and polynomial\n",
    "curve fitting.  Radiation error is the largest contributor to\n",
    "the latter uncertainties.  Future algorithm development may\n",
    "reduce these uncertainties." ;
	int qc_temp(time) ;
		qc_temp:long_name = "Quality check results on field: Temperature" ;
		qc_temp:units = "unitless" ;
	float rh(time) ;
		rh:long_name = "Relative Humidity" ;
		rh:units = "%" ;
		rh:valid_min = -2.f ;
		rh:valid_max = 104.f ;
		rh:resolution = 0.1f ;
		rh:missing_value = -9999.f ;
		rh:uncertainty = "+/- 2.06 % RH for 0 to 90 % RH\n",
    "+/- 3.04 % RH for 90 to 100 % RH\n",
    "Errors included in uncertainty are calibration uncertainty,\n",
    "repeatability, temperature dependence, long term (1 yr)\n",
    "stability, and A/D conversion accuracy.  Wind speed dependence\n",
    "and radiation dependence have not been considered and may\n",
    "increase the uncertainty." ;
	int qc_rh(time) ;
		qc_rh:long_name = "Quality check results on field: Relative Humidity" ;
		qc_rh:units = "unitless" ;
	float vap_pres(time) ;
		vap_pres:long_name = "Vapor Pressure" ;
		vap_pres:units = "kPa" ;
		vap_pres:valid_min = 0.f ;
		vap_pres:valid_max = 10.f ;
		vap_pres:resolution = 0.001f ;
		vap_pres:missing_value = -9999.f ;
	int qc_vap_pres(time) ;
		qc_vap_pres:long_name = "Quality check results on field: Vapor Pressure" ;
		qc_vap_pres:units = "unitless" ;
	float bar_pres(time) ;
		bar_pres:long_name = "Barometric Pressure" ;
		bar_pres:units = "kPa" ;
		bar_pres:valid_min = 80.f ;
		bar_pres:valid_max = 110.f ;
		bar_pres:resolution = 0.01f ;
		bar_pres:missing_value = -9999.f ;
		bar_pres:uncertainty = "+/- 0.035 kPa\n",
    "Errors included in uncertainty are linearity, hysteresis,\n",
    "repeatability, calibration uncertainty, temperature dependence,\n",
    "and long-term (1 yr) stability.  Wind speed dependence has not\n",
    "been considered and may increase the uncertainty." ;
	int qc_bar_pres(time) ;
		qc_bar_pres:long_name = "Quality check results on field: Barometric Pressure" ;
		qc_bar_pres:units = "unitless" ;
	float precip(time) ;
		precip:long_name = "Precipitation Total" ;
		precip:units = "mm" ;
		precip:valid_min = 0.f ;
		precip:valid_max = 10.f ;
		precip:resolution = 0.001f ;
		precip:missing_value = -9999.f ;
		precip:uncertainty = "Under normal conditions, uncertainty for\n",
    "rain is +/- 0.254 mm (one bucket).  Uncertainty increases to\n",
    "an unknown value during strong winds or very heavy rains (in\n",
    "excess of 75 mm per hour). The instrument is not considered\n",
    "reliable for snow amounts." ;
	int qc_precip(time) ;
		qc_precip:long_name = "Quality check results on field: Precipitation Total" ;
		qc_precip:units = "unitless" ;
	float lat ;
		lat:long_name = "north latitude" ;
		lat:units = "degrees" ;
		lat:valid_min = -90.f ;
		lat:valid_max = 90.f ;
	float lon ;
		lon:long_name = "east longitude" ;
		lon:units = "degrees" ;
		lon:valid_min = -180.f ;
		lon:valid_max = 180.f ;
	float alt ;
		alt:long_name = "altitude" ;
		alt:units = "meters above Mean Sea Level" ;

// global attributes:
		:ingest_software = " smos_ingest.c,v 7.6 2003/10/02 23:29:29 ermold process-ingest-smos_ingest-7.5-0 $" ;
		:proc_level = "b1" ;
		:input_source = "smos21:/data/collection/sgp/sgpsmosE21.00/1087254120.icm" ;
		:site_id = "sgp" ;
		:facility_id = "E21 : Okmulgee" ;
		:sample_int = "bar press - 1 minute\n",
    "all others 1 second" ;
		:averaging_int = "1 minute" ;
		:serial_number = "SMOS9" ;
		:comment = "The time assigned to each data point indicates the end of any\n",
    "period of averaging of the geophysical data.\n",
    "\n",
    "The snow depth sensors were removed from service in August 2002.\n",
    "\n",
    "Altitude is in meters above Mean Sea Level." ;
		:resolution_description = "The resolution field attributes refer to the number of significant\n",
    "digits relative to the decimal point that should be used in\n",
    "calculations.  Using fewer digits might result in greater uncertainty;\n",
    "using a larger number of digits should have no effect and thus is\n",
    "unnecessary.  However, analyses based on differences in values with\n",
    "a larger number of significant digits than indicated could lead to\n",
    "erroneous results or misleading scientific conclusions.\n",
    "\n",
    "resolution for lat= 0.001\n",
    "resolution for lon = 0.001\n",
    "resolution for alt = 1" ;
		:sensor_location = "Sensors heights (above base \"alt\"):\n",
    "  17.8m for winds.\n",
    "  17.0m for temp, RH, and vap pres before 7/15/01.  19.25m after 7/15/01.\n",
    "  18.6m for bar pres." ;
		:qc_method = "Standard Mentor QC" ;
		:Mentor_QC_Field_Information = "For each qc_<field> interpret the values as follows:\n",
    "\n",
    "Basic mentor QC checks (bit values):\n",
    "==========================================\n",
    "0x0 = value is within the specified range\n",
    "0x1 = value is equal to \'missing_value\'\n",
    "0x2 = value is less than the \'valid_min\'\n",
    "0x4 = value is greater than the \'valid_max\'\n",
    "0x8 = value failed the \'valid_delta\' check\n",
    "\n",
    "If the value is a \'missing_value\' no min, max, or delta checks are performed.\n",
    "\n",
    "The delta checks are done by comparing each data value to the one just\n",
    "prior to it in time. If a previous data value does not exist or is a\n",
    "\'missing_value\' the delta check will not be performed.\n",
    "\n",
    "Note that the delta computation for multi-dimensioned data compares the\n",
    "absolute value between points in the same spatial location to the previous\n",
    "point in time.\n",
    "\n",
    "If the associated non-QC field does not contain any mentor-specified minimum,\n",
    "maximum, or delta information a qc_field is not generated.\n",
    "" ;
		:zeb_platform = "sgp1smosE21.b1" ;
		:history = "created by user dsmgr on machine left at 15-Jun-2004,1:16:01, using $State: ds-zebra-zeblib-4.12-0 $" ;
}
netcdf sgp1smosE24.b1.20040615.000000 {
dimensions:
	time = UNLIMITED ; // (1440 currently)
variables:
	int base_time ;
		base_time:string = "14-Jun-2004,23:02:00 GMT" ;
		base_time:long_name = "Base time in Epoch" ;
		base_time:units = "seconds since 1970-1-1 0:00:00 0:00" ;
	double time_offset(time) ;
		time_offset:long_name = "Time offset from base_time" ;
		time_offset:units = "seconds since 2004-06-14 23:02:00 0:00" ;
	double time(time) ;
		time:long_name = "Time offset from midnight" ;
		time:units = "seconds since 2004-06-15 00:00:00 0:00" ;
	int qc_time(time) ;
		qc_time:long_name = "Results of quality checks on sample time" ;
		qc_time:units = "unitless" ;
		qc_time:description = "The qc_time values are calculated by comparing each sample\n",
    "time with the previous time (i.e. delta_t = t[n] - t[n-1]).\n",
    "If the \'qc_check_prior\' flag is set the first sample time\n",
    "from a new raw file will be compared against the time just\n",
    "previous to it in the stored data. If the \'qc_check_prior\'\n",
    "flag is not set the qc_time value for the first sample time\n",
    "will be set to 0\n",
    "\n",
    "The qc_time bit values are as follows:\n",
    "=========================================================\n",
    "0x0 = delta time is within the specified range\n",
    "0x1 = delta time is equal to 0, duplicate sample times\n",
    "0x2 = delta time is less than the \'delta_t_lower_limit\'\n",
    "0x4 = delta time is greater than the \'delta_t_upper_limit\'\n",
    "\n",
    "" ;
		qc_time:delta_t_lower_limit = 60 ;
		qc_time:delta_t_upper_limit = 60 ;
		qc_time:prior_sample_flag = 1 ;
	float wspd(time) ;
		wspd:long_name = "Wind Speed" ;
		wspd:units = "m/s" ;
		wspd:valid_min = 0.f ;
		wspd:valid_max = 60.f ;
		wspd:resolution = 0.01f ;
		wspd:missing_value = -9999.f ;
		wspd:threshold = "1.00 m/s" ;
		wspd:uncertainty = "+/- 1% for 2.5 to 30 m/s\n",
    "- 0.12 to +0.02 m/s at 2.0 m/s\n",
    "- 0.22 to +0.00 m/s at 1.5 m/s\n",
    "- 0.31 to -0.20 m/s at 1.0 m/s\n",
    "- 0.51 to -0.49 m/s at 0.5 m/s\n",
    "Error included in uncertainty are calibration accuracy,\n",
    "data logger timebase accuracy, and bias by underestimation\n",
    "due to threshold.  The latter assumes normal distibution\n",
    "of winds about the mean with standard deviations ranging\n",
    "between 0.25 and 1.00 m/s." ;
	int qc_wspd(time) ;
		qc_wspd:long_name = "Quality check results on field: Wind Speed" ;
		qc_wspd:units = "unitless" ;
	float wspd_va(time) ;
		wspd_va:long_name = "Wind Speed (vector averaged)" ;
		wspd_va:units = "m/s" ;
		wspd_va:valid_min = 0.f ;
		wspd_va:valid_max = 60.f ;
		wspd_va:resolution = 0.01f ;
		wspd_va:missing_value = -9999.f ;
	int qc_wspd_va(time) ;
		qc_wspd_va:long_name = "Quality check results on field: Wind Speed (vector averaged)" ;
		qc_wspd_va:units = "unitless" ;
	float wdir(time) ;
		wdir:long_name = "Wind Direction" ;
		wdir:units = "deg" ;
		wdir:valid_min = 0.f ;
		wdir:valid_max = 360.f ;
		wdir:resolution = 0.1f ;
		wdir:missing_value = -9999.f ;
		wdir:threshold = "Wind speed </= 1.00 m/s" ;
		wdir:uncertainty = "+/- 5.0 deg for wind speed > 1.0 m/s\n",
    "+/- 180.0 deg for wind speed </= 1.0 m/s\n",
    "Errors included in uncertainty are sensor accuracy,\n",
    "alignment accuracy, and A/D conversion accuracy." ;
	int qc_wdir(time) ;
		qc_wdir:long_name = "Quality check results on field: Wind Direction" ;
		qc_wdir:units = "unitless" ;
	float sd_deg(time) ;
		sd_deg:long_name = "Standard Deviation of wind direction" ;
		sd_deg:units = "deg" ;
		sd_deg:valid_min = 0.f ;
		sd_deg:valid_max = 90.f ;
		sd_deg:resolution = 0.1f ;
		sd_deg:missing_value = -9999.f ;
	int qc_sd_deg(time) ;
		qc_sd_deg:long_name = "Quality check results on field: Standard Deviation of wind direction" ;
		qc_sd_deg:units = "unitless" ;
	float temp(time) ;
		temp:long_name = "Temperature" ;
		temp:units = "C" ;
		temp:valid_min = -40.f ;
		temp:valid_max = 50.f ;
		temp:resolution = 0.01f ;
		temp:missing_value = -9999.f ;
		temp:uncertainty = "+/- 0.45 C for wind speed >/= 6.00 m/s\n",
    "+/- 0.89 C for wind speed = 3.00 m/s\n",
    "+/- 1.46 C for wind speed = 2.00 m/s\n",
    "+/- 3.07 C for wind speed = 1.00 m/s\n",
    "Errors included in uncertainty are radiation error, sensor\n",
    "interchangeability, bridge resistor precision, and polynomial\n",
    "curve fitting.  Radiation error is the largest contributor to\n",
    "the latter uncertainties.  Future algorithm development may\n",
    "reduce these uncertainties." ;
	int qc_temp(time) ;
		qc_temp:long_name = "Quality check results on field: Temperature" ;
		qc_temp:units = "unitless" ;
	float rh(time) ;
		rh:long_name = "Relative Humidity" ;
		rh:units = "%" ;
		rh:valid_min = -2.f ;
		rh:valid_max = 104.f ;
		rh:resolution = 0.1f ;
		rh:missing_value = -9999.f ;
		rh:uncertainty = "+/- 2.06 % RH for 0 to 90 % RH\n",
    "+/- 3.04 % RH for 90 to 100 % RH\n",
    "Errors included in uncertainty are calibration uncertainty,\n",
    "repeatability, temperature dependence, long term (1 yr)\n",
    "stability, and A/D conversion accuracy.  Wind speed dependence\n",
    "and radiation dependence have not been considered and may\n",
    "increase the uncertainty." ;
	int qc_rh(time) ;
		qc_rh:long_name = "Quality check results on field: Relative Humidity" ;
		qc_rh:units = "unitless" ;
	float vap_pres(time) ;
		vap_pres:long_name = "Vapor Pressure" ;
		vap_pres:units = "kPa" ;
		vap_pres:valid_min = 0.f ;
		vap_pres:valid_max = 10.f ;
		vap_pres:resolution = 0.001f ;
		vap_pres:missing_value = -9999.f ;
	int qc_vap_pres(time) ;
		qc_vap_pres:long_name = "Quality check results on field: Vapor Pressure" ;
		qc_vap_pres:units = "unitless" ;
	float bar_pres(time) ;
		bar_pres:long_name = "Barometric Pressure" ;
		bar_pres:units = "kPa" ;
		bar_pres:valid_min = 80.f ;
		bar_pres:valid_max = 110.f ;
		bar_pres:resolution = 0.01f ;
		bar_pres:missing_value = -9999.f ;
		bar_pres:uncertainty = "+/- 0.035 kPa\n",
    "Errors included in uncertainty are linearity, hysteresis,\n",
    "repeatability, calibration uncertainty, temperature dependence,\n",
    "and long-term (1 yr) stability.  Wind speed dependence has not\n",
    "been considered and may increase the uncertainty." ;
	int qc_bar_pres(time) ;
		qc_bar_pres:long_name = "Quality check results on field: Barometric Pressure" ;
		qc_bar_pres:units = "unitless" ;
	float precip(time) ;
		precip:long_name = "Precipitation Total" ;
		precip:units = "mm" ;
		precip:valid_min = 0.f ;
		precip:valid_max = 10.f ;
		precip:resolution = 0.001f ;
		precip:missing_value = -9999.f ;
		precip:uncertainty = "Under normal conditions, uncertainty for\n",
    "rain is +/- 0.254 mm (one bucket).  Uncertainty increases to\n",
    "an unknown value during strong winds or very heavy rains (in\n",
    "excess of 75 mm per hour). The instrument is not considered\n",
    "reliable for snow amounts." ;
	int qc_precip(time) ;
		qc_precip:long_name = "Quality check results on field: Precipitation Total" ;
		qc_precip:units = "unitless" ;
	float lat ;
		lat:long_name = "north latitude" ;
		lat:units = "degrees" ;
		lat:valid_min = -90.f ;
		lat:valid_max = 90.f ;
	float lon ;
		lon:long_name = "east longitude" ;
		lon:units = "degrees" ;
		lon:valid_min = -180.f ;
		lon:valid_max = 180.f ;
	float alt ;
		alt:long_name = "altitude" ;
		alt:units = "meters above Mean Sea Level" ;

// global attributes:
		:ingest_software = " smos_ingest.c,v 7.6 2003/10/02 23:29:29 ermold process-ingest-smos_ingest-7.5-0 $" ;
		:proc_level = "b1" ;
		:input_source = "smos24:/data/collection/sgp/sgpsmosE24.00/1087254120.icm" ;
		:site_id = "sgp" ;
		:facility_id = "E24 : Cyril" ;
		:sample_int = "bar press - 1 minute\n",
    "all others 1 second" ;
		:averaging_int = "1 minute" ;
		:serial_number = "SMOS9" ;
		:comment = "The time assigned to each data point indicates the end of any\n",
    "period of averaging of the geophysical data.\n",
    "\n",
    "The snow depth sensors were removed from service in August 2002.\n",
    "\n",
    "Altitude is in meters above Mean Sea Level." ;
		:resolution_description = "The resolution field attributes refer to the number of significant\n",
    "digits relative to the decimal point that should be used in\n",
    "calculations.  Using fewer digits might result in greater uncertainty;\n",
    "using a larger number of digits should have no effect and thus is\n",
    "unnecessary.  However, analyses based on differences in values with\n",
    "a larger number of significant digits than indicated could lead to\n",
    "erroneous results or misleading scientific conclusions.\n",
    "\n",
    "resolution for lat= 0.001\n",
    "resolution for lon = 0.001\n",
    "resolution for alt = 1" ;
		:sensor_location = "Sensors heights (above base \"alt\"):\n",
    "  10m for winds\n",
    "  2m for temp, RH, and vap pres\n",
    "  1m for bar pres" ;
		:qc_method = "Standard Mentor QC" ;
		:Mentor_QC_Field_Information = "For each qc_<field> interpret the values as follows:\n",
    "\n",
    "Basic mentor QC checks (bit values):\n",
    "==========================================\n",
    "0x0 = value is within the specified range\n",
    "0x1 = value is equal to \'missing_value\'\n",
    "0x2 = value is less than the \'valid_min\'\n",
    "0x4 = value is greater than the \'valid_max\'\n",
    "0x8 = value failed the \'valid_delta\' check\n",
    "\n",
    "If the value is a \'missing_value\' no min, max, or delta checks are performed.\n",
    "\n",
    "The delta checks are done by comparing each data value to the one just\n",
    "prior to it in time. If a previous data value does not exist or is a\n",
    "\'missing_value\' the delta check will not be performed.\n",
    "\n",
    "Note that the delta computation for multi-dimensioned data compares the\n",
    "absolute value between points in the same spatial location to the previous\n",
    "point in time.\n",
    "\n",
    "If the associated non-QC field does not contain any mentor-specified minimum,\n",
    "maximum, or delta information a qc_field is not generated.\n",
    "" ;
		:zeb_platform = "sgp1smosE24.b1" ;
		:history = "created by user dsmgr on machine left at 15-Jun-2004,1:17:01, using $State: ds-zebra-zeblib-4.12-0 $" ;
}
netcdf sgp1smosE27.b1.20040615.000000 {
dimensions:
	time = UNLIMITED ; // (1440 currently)
variables:
	int base_time ;
		base_time:string = "14-Jun-2004,23:02:00 GMT" ;
		base_time:long_name = "Base time in Epoch" ;
		base_time:units = "seconds since 1970-1-1 0:00:00 0:00" ;
	double time_offset(time) ;
		time_offset:long_name = "Time offset from base_time" ;
		time_offset:units = "seconds since 2004-06-14 23:02:00 0:00" ;
	double time(time) ;
		time:long_name = "Time offset from midnight" ;
		time:units = "seconds since 2004-06-15 00:00:00 0:00" ;
	int qc_time(time) ;
		qc_time:long_name = "Results of quality checks on sample time" ;
		qc_time:units = "unitless" ;
		qc_time:description = "The qc_time values are calculated by comparing each sample\n",
    "time with the previous time (i.e. delta_t = t[n] - t[n-1]).\n",
    "If the \'qc_check_prior\' flag is set the first sample time\n",
    "from a new raw file will be compared against the time just\n",
    "previous to it in the stored data. If the \'qc_check_prior\'\n",
    "flag is not set the qc_time value for the first sample time\n",
    "will be set to 0\n",
    "\n",
    "The qc_time bit values are as follows:\n",
    "=========================================================\n",
    "0x0 = delta time is within the specified range\n",
    "0x1 = delta time is equal to 0, duplicate sample times\n",
    "0x2 = delta time is less than the \'delta_t_lower_limit\'\n",
    "0x4 = delta time is greater than the \'delta_t_upper_limit\'\n",
    "\n",
    "" ;
		qc_time:delta_t_lower_limit = 60 ;
		qc_time:delta_t_upper_limit = 60 ;
		qc_time:prior_sample_flag = 1 ;
	float wspd(time) ;
		wspd:long_name = "Wind Speed" ;
		wspd:units = "m/s" ;
		wspd:valid_min = 0.f ;
		wspd:valid_max = 60.f ;
		wspd:resolution = 0.01f ;
		wspd:missing_value = -9999.f ;
		wspd:threshold = "1.00 m/s" ;
		wspd:uncertainty = "+/- 1% for 2.5 to 30 m/s\n",
    "- 0.12 to +0.02 m/s at 2.0 m/s\n",
    "- 0.22 to +0.00 m/s at 1.5 m/s\n",
    "- 0.31 to -0.20 m/s at 1.0 m/s\n",
    "- 0.51 to -0.49 m/s at 0.5 m/s\n",
    "Error included in uncertainty are calibration accuracy,\n",
    "data logger timebase accuracy, and bias by underestimation\n",
    "due to threshold.  The latter assumes normal distibution\n",
    "of winds about the mean with standard deviations ranging\n",
    "between 0.25 and 1.00 m/s." ;
	int qc_wspd(time) ;
		qc_wspd:long_name = "Quality check results on field: Wind Speed" ;
		qc_wspd:units = "unitless" ;
	float wspd_va(time) ;
		wspd_va:long_name = "Wind Speed (vector averaged)" ;
		wspd_va:units = "m/s" ;
		wspd_va:valid_min = 0.f ;
		wspd_va:valid_max = 60.f ;
		wspd_va:resolution = 0.01f ;
		wspd_va:missing_value = -9999.f ;
	int qc_wspd_va(time) ;
		qc_wspd_va:long_name = "Quality check results on field: Wind Speed (vector averaged)" ;
		qc_wspd_va:units = "unitless" ;
	float wdir(time) ;
		wdir:long_name = "Wind Direction" ;
		wdir:units = "deg" ;
		wdir:valid_min = 0.f ;
		wdir:valid_max = 360.f ;
		wdir:resolution = 0.1f ;
		wdir:missing_value = -9999.f ;
		wdir:threshold = "Wind speed </= 1.00 m/s" ;
		wdir:uncertainty = "+/- 5.0 deg for wind speed > 1.0 m/s\n",
    "+/- 180.0 deg for wind speed </= 1.0 m/s\n",
    "Errors included in uncertainty are sensor accuracy,\n",
    "alignment accuracy, and A/D conversion accuracy." ;
	int qc_wdir(time) ;
		qc_wdir:long_name = "Quality check results on field: Wind Direction" ;
		qc_wdir:units = "unitless" ;
	float sd_deg(time) ;
		sd_deg:long_name = "Standard Deviation of wind direction" ;
		sd_deg:units = "deg" ;
		sd_deg:valid_min = 0.f ;
		sd_deg:valid_max = 90.f ;
		sd_deg:resolution = 0.1f ;
		sd_deg:missing_value = -9999.f ;
	int qc_sd_deg(time) ;
		qc_sd_deg:long_name = "Quality check results on field: Standard Deviation of wind direction" ;
		qc_sd_deg:units = "unitless" ;
	float temp(time) ;
		temp:long_name = "Temperature" ;
		temp:units = "C" ;
		temp:valid_min = -40.f ;
		temp:valid_max = 50.f ;
		temp:resolution = 0.01f ;
		temp:missing_value = -9999.f ;
		temp:uncertainty = "+/- 0.45 C for wind speed >/= 6.00 m/s\n",
    "+/- 0.89 C for wind speed = 3.00 m/s\n",
    "+/- 1.46 C for wind speed = 2.00 m/s\n",
    "+/- 3.07 C for wind speed = 1.00 m/s\n",
    "Errors included in uncertainty are radiation error, sensor\n",
    "interchangeability, bridge resistor precision, and polynomial\n",
    "curve fitting.  Radiation error is the largest contributor to\n",
    "the latter uncertainties.  Future algorithm development may\n",
    "reduce these uncertainties." ;
	int qc_temp(time) ;
		qc_temp:long_name = "Quality check results on field: Temperature" ;
		qc_temp:units = "unitless" ;
	float rh(time) ;
		rh:long_name = "Relative Humidity" ;
		rh:units = "%" ;
		rh:valid_min = -2.f ;
		rh:valid_max = 104.f ;
		rh:resolution = 0.1f ;
		rh:missing_value = -9999.f ;
		rh:uncertainty = "+/- 2.06 % RH for 0 to 90 % RH\n",
    "+/- 3.04 % RH for 90 to 100 % RH\n",
    "Errors included in uncertainty are calibration uncertainty,\n",
    "repeatability, temperature dependence, long term (1 yr)\n",
    "stability, and A/D conversion accuracy.  Wind speed dependence\n",
    "and radiation dependence have not been considered and may\n",
    "increase the uncertainty." ;
	int qc_rh(time) ;
		qc_rh:long_name = "Quality check results on field: Relative Humidity" ;
		qc_rh:units = "unitless" ;
	float vap_pres(time) ;
		vap_pres:long_name = "Vapor Pressure" ;
		vap_pres:units = "kPa" ;
		vap_pres:valid_min = 0.f ;
		vap_pres:valid_max = 10.f ;
		vap_pres:resolution = 0.001f ;
		vap_pres:missing_value = -9999.f ;
	int qc_vap_pres(time) ;
		qc_vap_pres:long_name = "Quality check results on field: Vapor Pressure" ;
		qc_vap_pres:units = "unitless" ;
	float bar_pres(time) ;
		bar_pres:long_name = "Barometric Pressure" ;
		bar_pres:units = "kPa" ;
		bar_pres:valid_min = 80.f ;
		bar_pres:valid_max = 110.f ;
		bar_pres:resolution = 0.01f ;
		bar_pres:missing_value = -9999.f ;
		bar_pres:uncertainty = "+/- 0.035 kPa\n",
    "Errors included in uncertainty are linearity, hysteresis,\n",
    "repeatability, calibration uncertainty, temperature dependence,\n",
    "and long-term (1 yr) stability.  Wind speed dependence has not\n",
    "been considered and may increase the uncertainty." ;
	int qc_bar_pres(time) ;
		qc_bar_pres:long_name = "Quality check results on field: Barometric Pressure" ;
		qc_bar_pres:units = "unitless" ;
	float precip(time) ;
		precip:long_name = "Precipitation Total" ;
		precip:units = "mm" ;
		precip:valid_min = 0.f ;
		precip:valid_max = 10.f ;
		precip:resolution = 0.001f ;
		precip:missing_value = -9999.f ;
		precip:uncertainty = "Under normal conditions, uncertainty for\n",
    "rain is +/- 0.254 mm (one bucket).  Uncertainty increases to\n",
    "an unknown value during strong winds or very heavy rains (in\n",
    "excess of 75 mm per hour). The instrument is not considered\n",
    "reliable for snow amounts." ;
	int qc_precip(time) ;
		qc_precip:long_name = "Quality check results on field: Precipitation Total" ;
		qc_precip:units = "unitless" ;
	float lat ;
		lat:long_name = "north latitude" ;
		lat:units = "degrees" ;
		lat:valid_min = -90.f ;
		lat:valid_max = 90.f ;
	float lon ;
		lon:long_name = "east longitude" ;
		lon:units = "degrees" ;
		lon:valid_min = -180.f ;
		lon:valid_max = 180.f ;
	float alt ;
		alt:long_name = "altitude" ;
		alt:units = "meters above Mean Sea Level" ;

// global attributes:
		:ingest_software = " smos_ingest.c,v 7.6 2003/10/02 23:29:29 ermold process-ingest-smos_ingest-7.5-0 $" ;
		:proc_level = "b1" ;
		:input_source = "smos27:/data/collection/sgp/sgpsmosE27.00/1087254120.icm" ;
		:site_id = "sgp" ;
		:facility_id = "E27 : Earlsboro" ;
		:sample_int = "bar press - 1 minute\n",
    "all others 1 second" ;
		:averaging_int = "1 minute" ;
		:serial_number = "N/A" ;
		:comment = "The time assigned to each data point indicates the end of any\n",
    "period of averaging of the geophysical data.\n",
    "\n",
    "The snow depth sensors were removed from service in August 2002.\n",
    "\n",
    "Altitude is in meters above Mean Sea Level." ;
		:resolution_description = "The resolution field attributes refer to the number of significant\n",
    "digits relative to the decimal point that should be used in\n",
    "calculations.  Using fewer digits might result in greater uncertainty;\n",
    "using a larger number of digits should have no effect and thus is\n",
    "unnecessary.  However, analyses based on differences in values with\n",
    "a larger number of significant digits than indicated could lead to\n",
    "erroneous results or misleading scientific conclusions.\n",
    "\n",
    "resolution for lat= 0.001\n",
    "resolution for lon = 0.001\n",
    "resolution for alt = 1" ;
		:sensor_location = "Sensors heights (above base \"alt\"):\n",
    "  10m for winds\n",
    "  2m for temp, RH, and vap pres\n",
    "  1m for bar pres" ;
		:qc_method = "Standard Mentor QC" ;
		:Mentor_QC_Field_Information = "For each qc_<field> interpret the values as follows:\n",
    "\n",
    "Basic mentor QC checks (bit values):\n",
    "==========================================\n",
    "0x0 = value is within the specified range\n",
    "0x1 = value is equal to \'missing_value\'\n",
    "0x2 = value is less than the \'valid_min\'\n",
    "0x4 = value is greater than the \'valid_max\'\n",
    "0x8 = value failed the \'valid_delta\' check\n",
    "\n",
    "If the value is a \'missing_value\' no min, max, or delta checks are performed.\n",
    "\n",
    "The delta checks are done by comparing each data value to the one just\n",
    "prior to it in time. If a previous data value does not exist or is a\n",
    "\'missing_value\' the delta check will not be performed.\n",
    "\n",
    "Note that the delta computation for multi-dimensioned data compares the\n",
    "absolute value between points in the same spatial location to the previous\n",
    "point in time.\n",
    "\n",
    "If the associated non-QC field does not contain any mentor-specified minimum,\n",
    "maximum, or delta information a qc_field is not generated.\n",
    "" ;
		:zeb_platform = "sgp1smosE27.b1" ;
		:history = "created by user dsmgr on machine left at 15-Jun-2004,1:17:41, using $State: ds-zebra-zeblib-4.12-0 $" ;
}
netcdf sgp1smosE3.b1.20040615.000000 {
dimensions:
	time = UNLIMITED ; // (1440 currently)
variables:
	int base_time ;
		base_time:string = "14-Jun-2004,23:02:00 GMT" ;
		base_time:long_name = "Base time in Epoch" ;
		base_time:units = "seconds since 1970-1-1 0:00:00 0:00" ;
	double time_offset(time) ;
		time_offset:long_name = "Time offset from base_time" ;
		time_offset:units = "seconds since 2004-06-14 23:02:00 0:00" ;
	double time(time) ;
		time:long_name = "Time offset from midnight" ;
		time:units = "seconds since 2004-06-15 00:00:00 0:00" ;
	int qc_time(time) ;
		qc_time:long_name = "Results of quality checks on sample time" ;
		qc_time:units = "unitless" ;
		qc_time:description = "The qc_time values are calculated by comparing each sample\n",
    "time with the previous time (i.e. delta_t = t[n] - t[n-1]).\n",
    "If the \'qc_check_prior\' flag is set the first sample time\n",
    "from a new raw file will be compared against the time just\n",
    "previous to it in the stored data. If the \'qc_check_prior\'\n",
    "flag is not set the qc_time value for the first sample time\n",
    "will be set to 0\n",
    "\n",
    "The qc_time bit values are as follows:\n",
    "=========================================================\n",
    "0x0 = delta time is within the specified range\n",
    "0x1 = delta time is equal to 0, duplicate sample times\n",
    "0x2 = delta time is less than the \'delta_t_lower_limit\'\n",
    "0x4 = delta time is greater than the \'delta_t_upper_limit\'\n",
    "\n",
    "" ;
		qc_time:delta_t_lower_limit = 60 ;
		qc_time:delta_t_upper_limit = 60 ;
		qc_time:prior_sample_flag = 1 ;
	float wspd(time) ;
		wspd:long_name = "Wind Speed" ;
		wspd:units = "m/s" ;
		wspd:valid_min = 0.f ;
		wspd:valid_max = 60.f ;
		wspd:resolution = 0.01f ;
		wspd:missing_value = -9999.f ;
		wspd:threshold = "1.00 m/s" ;
		wspd:uncertainty = "+/- 1% for 2.5 to 30 m/s\n",
    "- 0.12 to +0.02 m/s at 2.0 m/s\n",
    "- 0.22 to +0.00 m/s at 1.5 m/s\n",
    "- 0.31 to -0.20 m/s at 1.0 m/s\n",
    "- 0.51 to -0.49 m/s at 0.5 m/s\n",
    "Error included in uncertainty are calibration accuracy,\n",
    "data logger timebase accuracy, and bias by underestimation\n",
    "due to threshold.  The latter assumes normal distibution\n",
    "of winds about the mean with standard deviations ranging\n",
    "between 0.25 and 1.00 m/s." ;
	int qc_wspd(time) ;
		qc_wspd:long_name = "Quality check results on field: Wind Speed" ;
		qc_wspd:units = "unitless" ;
	float wspd_va(time) ;
		wspd_va:long_name = "Wind Speed (vector averaged)" ;
		wspd_va:units = "m/s" ;
		wspd_va:valid_min = 0.f ;
		wspd_va:valid_max = 60.f ;
		wspd_va:resolution = 0.01f ;
		wspd_va:missing_value = -9999.f ;
	int qc_wspd_va(time) ;
		qc_wspd_va:long_name = "Quality check results on field: Wind Speed (vector averaged)" ;
		qc_wspd_va:units = "unitless" ;
	float wdir(time) ;
		wdir:long_name = "Wind Direction" ;
		wdir:units = "deg" ;
		wdir:valid_min = 0.f ;
		wdir:valid_max = 360.f ;
		wdir:resolution = 0.1f ;
		wdir:missing_value = -9999.f ;
		wdir:threshold = "Wind speed </= 1.00 m/s" ;
		wdir:uncertainty = "+/- 5.0 deg for wind speed > 1.0 m/s\n",
    "+/- 180.0 deg for wind speed </= 1.0 m/s\n",
    "Errors included in uncertainty are sensor accuracy,\n",
    "alignment accuracy, and A/D conversion accuracy." ;
	int qc_wdir(time) ;
		qc_wdir:long_name = "Quality check results on field: Wind Direction" ;
		qc_wdir:units = "unitless" ;
	float sd_deg(time) ;
		sd_deg:long_name = "Standard Deviation of wind direction" ;
		sd_deg:units = "deg" ;
		sd_deg:valid_min = 0.f ;
		sd_deg:valid_max = 90.f ;
		sd_deg:resolution = 0.1f ;
		sd_deg:missing_value = -9999.f ;
	int qc_sd_deg(time) ;
		qc_sd_deg:long_name = "Quality check results on field: Standard Deviation of wind direction" ;
		qc_sd_deg:units = "unitless" ;
	float temp(time) ;
		temp:long_name = "Temperature" ;
		temp:units = "C" ;
		temp:valid_min = -40.f ;
		temp:valid_max = 50.f ;
		temp:resolution = 0.01f ;
		temp:missing_value = -9999.f ;
		temp:uncertainty = "+/- 0.45 C for wind speed >/= 6.00 m/s\n",
    "+/- 0.89 C for wind speed = 3.00 m/s\n",
    "+/- 1.46 C for wind speed = 2.00 m/s\n",
    "+/- 3.07 C for wind speed = 1.00 m/s\n",
    "Errors included in uncertainty are radiation error, sensor\n",
    "interchangeability, bridge resistor precision, and polynomial\n",
    "curve fitting.  Radiation error is the largest contributor to\n",
    "the latter uncertainties.  Future algorithm development may\n",
    "reduce these uncertainties." ;
	int qc_temp(time) ;
		qc_temp:long_name = "Quality check results on field: Temperature" ;
		qc_temp:units = "unitless" ;
	float rh(time) ;
		rh:long_name = "Relative Humidity" ;
		rh:units = "%" ;
		rh:valid_min = -2.f ;
		rh:valid_max = 104.f ;
		rh:resolution = 0.1f ;
		rh:missing_value = -9999.f ;
		rh:uncertainty = "+/- 2.06 % RH for 0 to 90 % RH\n",
    "+/- 3.04 % RH for 90 to 100 % RH\n",
    "Errors included in uncertainty are calibration uncertainty,\n",
    "repeatability, temperature dependence, long term (1 yr)\n",
    "stability, and A/D conversion accuracy.  Wind speed dependence\n",
    "and radiation dependence have not been considered and may\n",
    "increase the uncertainty." ;
	int qc_rh(time) ;
		qc_rh:long_name = "Quality check results on field: Relative Humidity" ;
		qc_rh:units = "unitless" ;
	float vap_pres(time) ;
		vap_pres:long_name = "Vapor Pressure" ;
		vap_pres:units = "kPa" ;
		vap_pres:valid_min = 0.f ;
		vap_pres:valid_max = 10.f ;
		vap_pres:resolution = 0.001f ;
		vap_pres:missing_value = -9999.f ;
	int qc_vap_pres(time) ;
		qc_vap_pres:long_name = "Quality check results on field: Vapor Pressure" ;
		qc_vap_pres:units = "unitless" ;
	float bar_pres(time) ;
		bar_pres:long_name = "Barometric Pressure" ;
		bar_pres:units = "kPa" ;
		bar_pres:valid_min = 80.f ;
		bar_pres:valid_max = 110.f ;
		bar_pres:resolution = 0.01f ;
		bar_pres:missing_value = -9999.f ;
		bar_pres:uncertainty = "+/- 0.035 kPa\n",
    "Errors included in uncertainty are linearity, hysteresis,\n",
    "repeatability, calibration uncertainty, temperature dependence,\n",
    "and long-term (1 yr) stability.  Wind speed dependence has not\n",
    "been considered and may increase the uncertainty." ;
	int qc_bar_pres(time) ;
		qc_bar_pres:long_name = "Quality check results on field: Barometric Pressure" ;
		qc_bar_pres:units = "unitless" ;
	float precip(time) ;
		precip:long_name = "Precipitation Total" ;
		precip:units = "mm" ;
		precip:valid_min = 0.f ;
		precip:valid_max = 10.f ;
		precip:resolution = 0.001f ;
		precip:missing_value = -9999.f ;
		precip:uncertainty = "Under normal conditions, uncertainty for\n",
    "rain is +/- 0.254 mm (one bucket).  Uncertainty increases to\n",
    "an unknown value during strong winds or very heavy rains (in\n",
    "excess of 75 mm per hour). The instrument is not considered\n",
    "reliable for snow amounts." ;
	int qc_precip(time) ;
		qc_precip:long_name = "Quality check results on field: Precipitation Total" ;
		qc_precip:units = "unitless" ;
	float lat ;
		lat:long_name = "north latitude" ;
		lat:units = "degrees" ;
		lat:valid_min = -90.f ;
		lat:valid_max = 90.f ;
	float lon ;
		lon:long_name = "east longitude" ;
		lon:units = "degrees" ;
		lon:valid_min = -180.f ;
		lon:valid_max = 180.f ;
	float alt ;
		alt:long_name = "altitude" ;
		alt:units = "meters above Mean Sea Level" ;

// global attributes:
		:ingest_software = " smos_ingest.c,v 7.6 2003/10/02 23:29:29 ermold process-ingest-smos_ingest-7.5-0 $" ;
		:proc_level = "b1" ;
		:input_source = "smos3:/data/collection/sgp/sgpsmosE3.00/1087254120.icm" ;
		:site_id = "sgp" ;
		:facility_id = "E3 : Le_Roy" ;
		:sample_int = "bar press - 1 minute\n",
    "all others 1 second" ;
		:averaging_int = "1 minute" ;
		:serial_number = "SMOS13" ;
		:comment = "The time assigned to each data point indicates the end of any\n",
    "period of averaging of the geophysical data.\n",
    "\n",
    "The snow depth sensors were removed from service in August 2002.\n",
    "\n",
    "Altitude is in meters above Mean Sea Level." ;
		:resolution_description = "The resolution field attributes refer to the number of significant\n",
    "digits relative to the decimal point that should be used in\n",
    "calculations.  Using fewer digits might result in greater uncertainty;\n",
    "using a larger number of digits should have no effect and thus is\n",
    "unnecessary.  However, analyses based on differences in values with\n",
    "a larger number of significant digits than indicated could lead to\n",
    "erroneous results or misleading scientific conclusions.\n",
    "\n",
    "resolution for lat= 0.001\n",
    "resolution for lon = 0.001\n",
    "resolution for alt = 1" ;
		:sensor_location = "Sensors heights (above base \"alt\"):\n",
    "  10m for winds\n",
    "  2m for temp, RH, and vap pres\n",
    "  1m for bar pres" ;
		:qc_method = "Standard Mentor QC" ;
		:Mentor_QC_Field_Information = "For each qc_<field> interpret the values as follows:\n",
    "\n",
    "Basic mentor QC checks (bit values):\n",
    "==========================================\n",
    "0x0 = value is within the specified range\n",
    "0x1 = value is equal to \'missing_value\'\n",
    "0x2 = value is less than the \'valid_min\'\n",
    "0x4 = value is greater than the \'valid_max\'\n",
    "0x8 = value failed the \'valid_delta\' check\n",
    "\n",
    "If the value is a \'missing_value\' no min, max, or delta checks are performed.\n",
    "\n",
    "The delta checks are done by comparing each data value to the one just\n",
    "prior to it in time. If a previous data value does not exist or is a\n",
    "\'missing_value\' the delta check will not be performed.\n",
    "\n",
    "Note that the delta computation for multi-dimensioned data compares the\n",
    "absolute value between points in the same spatial location to the previous\n",
    "point in time.\n",
    "\n",
    "If the associated non-QC field does not contain any mentor-specified minimum,\n",
    "maximum, or delta information a qc_field is not generated.\n",
    "" ;
		:zeb_platform = "sgp1smosE3.b1" ;
		:history = "created by user dsmgr on machine left at 15-Jun-2004,1:07:45, using $State: ds-zebra-zeblib-4.12-0 $" ;
}
netcdf sgp1smosE4.b1.20040615.000000 {
dimensions:
	time = UNLIMITED ; // (1440 currently)
variables:
	int base_time ;
		base_time:string = "14-Jun-2004,23:02:00 GMT" ;
		base_time:long_name = "Base time in Epoch" ;
		base_time:units = "seconds since 1970-1-1 0:00:00 0:00" ;
	double time_offset(time) ;
		time_offset:long_name = "Time offset from base_time" ;
		time_offset:units = "seconds since 2004-06-14 23:02:00 0:00" ;
	double time(time) ;
		time:long_name = "Time offset from midnight" ;
		time:units = "seconds since 2004-06-15 00:00:00 0:00" ;
	int qc_time(time) ;
		qc_time:long_name = "Results of quality checks on sample time" ;
		qc_time:units = "unitless" ;
		qc_time:description = "The qc_time values are calculated by comparing each sample\n",
    "time with the previous time (i.e. delta_t = t[n] - t[n-1]).\n",
    "If the \'qc_check_prior\' flag is set the first sample time\n",
    "from a new raw file will be compared against the time just\n",
    "previous to it in the stored data. If the \'qc_check_prior\'\n",
    "flag is not set the qc_time value for the first sample time\n",
    "will be set to 0\n",
    "\n",
    "The qc_time bit values are as follows:\n",
    "=========================================================\n",
    "0x0 = delta time is within the specified range\n",
    "0x1 = delta time is equal to 0, duplicate sample times\n",
    "0x2 = delta time is less than the \'delta_t_lower_limit\'\n",
    "0x4 = delta time is greater than the \'delta_t_upper_limit\'\n",
    "\n",
    "" ;
		qc_time:delta_t_lower_limit = 60 ;
		qc_time:delta_t_upper_limit = 60 ;
		qc_time:prior_sample_flag = 1 ;
	float wspd(time) ;
		wspd:long_name = "Wind Speed" ;
		wspd:units = "m/s" ;
		wspd:valid_min = 0.f ;
		wspd:valid_max = 60.f ;
		wspd:resolution = 0.01f ;
		wspd:missing_value = -9999.f ;
		wspd:threshold = "1.00 m/s" ;
		wspd:uncertainty = "+/- 1% for 2.5 to 30 m/s\n",
    "- 0.12 to +0.02 m/s at 2.0 m/s\n",
    "- 0.22 to +0.00 m/s at 1.5 m/s\n",
    "- 0.31 to -0.20 m/s at 1.0 m/s\n",
    "- 0.51 to -0.49 m/s at 0.5 m/s\n",
    "Error included in uncertainty are calibration accuracy,\n",
    "data logger timebase accuracy, and bias by underestimation\n",
    "due to threshold.  The latter assumes normal distibution\n",
    "of winds about the mean with standard deviations ranging\n",
    "between 0.25 and 1.00 m/s." ;
	int qc_wspd(time) ;
		qc_wspd:long_name = "Quality check results on field: Wind Speed" ;
		qc_wspd:units = "unitless" ;
	float wspd_va(time) ;
		wspd_va:long_name = "Wind Speed (vector averaged)" ;
		wspd_va:units = "m/s" ;
		wspd_va:valid_min = 0.f ;
		wspd_va:valid_max = 60.f ;
		wspd_va:resolution = 0.01f ;
		wspd_va:missing_value = -9999.f ;
	int qc_wspd_va(time) ;
		qc_wspd_va:long_name = "Quality check results on field: Wind Speed (vector averaged)" ;
		qc_wspd_va:units = "unitless" ;
	float wdir(time) ;
		wdir:long_name = "Wind Direction" ;
		wdir:units = "deg" ;
		wdir:valid_min = 0.f ;
		wdir:valid_max = 360.f ;
		wdir:resolution = 0.1f ;
		wdir:missing_value = -9999.f ;
		wdir:threshold = "Wind speed </= 1.00 m/s" ;
		wdir:uncertainty = "+/- 5.0 deg for wind speed > 1.0 m/s\n",
    "+/- 180.0 deg for wind speed </= 1.0 m/s\n",
    "Errors included in uncertainty are sensor accuracy,\n",
    "alignment accuracy, and A/D conversion accuracy." ;
	int qc_wdir(time) ;
		qc_wdir:long_name = "Quality check results on field: Wind Direction" ;
		qc_wdir:units = "unitless" ;
	float sd_deg(time) ;
		sd_deg:long_name = "Standard Deviation of wind direction" ;
		sd_deg:units = "deg" ;
		sd_deg:valid_min = 0.f ;
		sd_deg:valid_max = 90.f ;
		sd_deg:resolution = 0.1f ;
		sd_deg:missing_value = -9999.f ;
	int qc_sd_deg(time) ;
		qc_sd_deg:long_name = "Quality check results on field: Standard Deviation of wind direction" ;
		qc_sd_deg:units = "unitless" ;
	float temp(time) ;
		temp:long_name = "Temperature" ;
		temp:units = "C" ;
		temp:valid_min = -40.f ;
		temp:valid_max = 50.f ;
		temp:resolution = 0.01f ;
		temp:missing_value = -9999.f ;
		temp:uncertainty = "+/- 0.45 C for wind speed >/= 6.00 m/s\n",
    "+/- 0.89 C for wind speed = 3.00 m/s\n",
    "+/- 1.46 C for wind speed = 2.00 m/s\n",
    "+/- 3.07 C for wind speed = 1.00 m/s\n",
    "Errors included in uncertainty are radiation error, sensor\n",
    "interchangeability, bridge resistor precision, and polynomial\n",
    "curve fitting.  Radiation error is the largest contributor to\n",
    "the latter uncertainties.  Future algorithm development may\n",
    "reduce these uncertainties." ;
	int qc_temp(time) ;
		qc_temp:long_name = "Quality check results on field: Temperature" ;
		qc_temp:units = "unitless" ;
	float rh(time) ;
		rh:long_name = "Relative Humidity" ;
		rh:units = "%" ;
		rh:valid_min = -2.f ;
		rh:valid_max = 104.f ;
		rh:resolution = 0.1f ;
		rh:missing_value = -9999.f ;
		rh:uncertainty = "+/- 2.06 % RH for 0 to 90 % RH\n",
    "+/- 3.04 % RH for 90 to 100 % RH\n",
    "Errors included in uncertainty are calibration uncertainty,\n",
    "repeatability, temperature dependence, long term (1 yr)\n",
    "stability, and A/D conversion accuracy.  Wind speed dependence\n",
    "and radiation dependence have not been considered and may\n",
    "increase the uncertainty." ;
	int qc_rh(time) ;
		qc_rh:long_name = "Quality check results on field: Relative Humidity" ;
		qc_rh:units = "unitless" ;
	float vap_pres(time) ;
		vap_pres:long_name = "Vapor Pressure" ;
		vap_pres:units = "kPa" ;
		vap_pres:valid_min = 0.f ;
		vap_pres:valid_max = 10.f ;
		vap_pres:resolution = 0.001f ;
		vap_pres:missing_value = -9999.f ;
	int qc_vap_pres(time) ;
		qc_vap_pres:long_name = "Quality check results on field: Vapor Pressure" ;
		qc_vap_pres:units = "unitless" ;
	float bar_pres(time) ;
		bar_pres:long_name = "Barometric Pressure" ;
		bar_pres:units = "kPa" ;
		bar_pres:valid_min = 80.f ;
		bar_pres:valid_max = 110.f ;
		bar_pres:resolution = 0.01f ;
		bar_pres:missing_value = -9999.f ;
		bar_pres:uncertainty = "+/- 0.035 kPa\n",
    "Errors included in uncertainty are linearity, hysteresis,\n",
    "repeatability, calibration uncertainty, temperature dependence,\n",
    "and long-term (1 yr) stability.  Wind speed dependence has not\n",
    "been considered and may increase the uncertainty." ;
	int qc_bar_pres(time) ;
		qc_bar_pres:long_name = "Quality check results on field: Barometric Pressure" ;
		qc_bar_pres:units = "unitless" ;
	float precip(time) ;
		precip:long_name = "Precipitation Total" ;
		precip:units = "mm" ;
		precip:valid_min = 0.f ;
		precip:valid_max = 10.f ;
		precip:resolution = 0.001f ;
		precip:missing_value = -9999.f ;
		precip:uncertainty = "Under normal conditions, uncertainty for\n",
    "rain is +/- 0.254 mm (one bucket).  Uncertainty increases to\n",
    "an unknown value during strong winds or very heavy rains (in\n",
    "excess of 75 mm per hour). The instrument is not considered\n",
    "reliable for snow amounts." ;
	int qc_precip(time) ;
		qc_precip:long_name = "Quality check results on field: Precipitation Total" ;
		qc_precip:units = "unitless" ;
	float lat ;
		lat:long_name = "north latitude" ;
		lat:units = "degrees" ;
		lat:valid_min = -90.f ;
		lat:valid_max = 90.f ;
	float lon ;
		lon:long_name = "east longitude" ;
		lon:units = "degrees" ;
		lon:valid_min = -180.f ;
		lon:valid_max = 180.f ;
	float alt ;
		alt:long_name = "altitude" ;
		alt:units = "meters above Mean Sea Level" ;

// global attributes:
		:ingest_software = " smos_ingest.c,v 7.6 2003/10/02 23:29:29 ermold process-ingest-smos_ingest-7.5-0 $" ;
		:proc_level = "b1" ;
		:input_source = "smos4:/data/collection/sgp/sgpsmosE4.00/1087254120.icm" ;
		:site_id = "sgp" ;
		:facility_id = "E4 : Plevna" ;
		:sample_int = "bar press - 1 minute\n",
    "all others 1 second" ;
		:averaging_int = "1 minute" ;
		:serial_number = "SMOS07" ;
		:comment = "The time assigned to each data point indicates the end of any\n",
    "period of averaging of the geophysical data.\n",
    "\n",
    "The snow depth sensors were removed from service in August 2002.\n",
    "\n",
    "Altitude is in meters above Mean Sea Level." ;
		:resolution_description = "The resolution field attributes refer to the number of significant\n",
    "digits relative to the decimal point that should be used in\n",
    "calculations.  Using fewer digits might result in greater uncertainty;\n",
    "using a larger number of digits should have no effect and thus is\n",
    "unnecessary.  However, analyses based on differences in values with\n",
    "a larger number of significant digits than indicated could lead to\n",
    "erroneous results or misleading scientific conclusions.\n",
    "\n",
    "resolution for lat= 0.001\n",
    "resolution for lon = 0.001\n",
    "resolution for alt = 1" ;
		:sensor_location = "Sensors heights (above base \"alt\"):\n",
    "  10m for winds\n",
    "  2m for temp, RH, and vap pres\n",
    "  1m for bar pres" ;
		:qc_method = "Standard Mentor QC" ;
		:Mentor_QC_Field_Information = "For each qc_<field> interpret the values as follows:\n",
    "\n",
    "Basic mentor QC checks (bit values):\n",
    "==========================================\n",
    "0x0 = value is within the specified range\n",
    "0x1 = value is equal to \'missing_value\'\n",
    "0x2 = value is less than the \'valid_min\'\n",
    "0x4 = value is greater than the \'valid_max\'\n",
    "0x8 = value failed the \'valid_delta\' check\n",
    "\n",
    "If the value is a \'missing_value\' no min, max, or delta checks are performed.\n",
    "\n",
    "The delta checks are done by comparing each data value to the one just\n",
    "prior to it in time. If a previous data value does not exist or is a\n",
    "\'missing_value\' the delta check will not be performed.\n",
    "\n",
    "Note that the delta computation for multi-dimensioned data compares the\n",
    "absolute value between points in the same spatial location to the previous\n",
    "point in time.\n",
    "\n",
    "If the associated non-QC field does not contain any mentor-specified minimum,\n",
    "maximum, or delta information a qc_field is not generated.\n",
    "" ;
		:zeb_platform = "sgp1smosE4.b1" ;
		:history = "created by user dsmgr on machine left at 15-Jun-2004,1:07:57, using $State: ds-zebra-zeblib-4.12-0 $" ;
}
netcdf sgp1smosE5.b1.20040615.000000 {
dimensions:
	time = UNLIMITED ; // (1440 currently)
variables:
	int base_time ;
		base_time:string = "14-Jun-2004,23:02:00 GMT" ;
		base_time:long_name = "Base time in Epoch" ;
		base_time:units = "seconds since 1970-1-1 0:00:00 0:00" ;
	double time_offset(time) ;
		time_offset:long_name = "Time offset from base_time" ;
		time_offset:units = "seconds since 2004-06-14 23:02:00 0:00" ;
	double time(time) ;
		time:long_name = "Time offset from midnight" ;
		time:units = "seconds since 2004-06-15 00:00:00 0:00" ;
	int qc_time(time) ;
		qc_time:long_name = "Results of quality checks on sample time" ;
		qc_time:units = "unitless" ;
		qc_time:description = "The qc_time values are calculated by comparing each sample\n",
    "time with the previous time (i.e. delta_t = t[n] - t[n-1]).\n",
    "If the \'qc_check_prior\' flag is set the first sample time\n",
    "from a new raw file will be compared against the time just\n",
    "previous to it in the stored data. If the \'qc_check_prior\'\n",
    "flag is not set the qc_time value for the first sample time\n",
    "will be set to 0\n",
    "\n",
    "The qc_time bit values are as follows:\n",
    "=========================================================\n",
    "0x0 = delta time is within the specified range\n",
    "0x1 = delta time is equal to 0, duplicate sample times\n",
    "0x2 = delta time is less than the \'delta_t_lower_limit\'\n",
    "0x4 = delta time is greater than the \'delta_t_upper_limit\'\n",
    "\n",
    "" ;
		qc_time:delta_t_lower_limit = 60 ;
		qc_time:delta_t_upper_limit = 60 ;
		qc_time:prior_sample_flag = 1 ;
	float wspd(time) ;
		wspd:long_name = "Wind Speed" ;
		wspd:units = "m/s" ;
		wspd:valid_min = 0.f ;
		wspd:valid_max = 60.f ;
		wspd:resolution = 0.01f ;
		wspd:missing_value = -9999.f ;
		wspd:threshold = "1.00 m/s" ;
		wspd:uncertainty = "+/- 1% for 2.5 to 30 m/s\n",
    "- 0.12 to +0.02 m/s at 2.0 m/s\n",
    "- 0.22 to +0.00 m/s at 1.5 m/s\n",
    "- 0.31 to -0.20 m/s at 1.0 m/s\n",
    "- 0.51 to -0.49 m/s at 0.5 m/s\n",
    "Error included in uncertainty are calibration accuracy,\n",
    "data logger timebase accuracy, and bias by underestimation\n",
    "due to threshold.  The latter assumes normal distibution\n",
    "of winds about the mean with standard deviations ranging\n",
    "between 0.25 and 1.00 m/s." ;
	int qc_wspd(time) ;
		qc_wspd:long_name = "Quality check results on field: Wind Speed" ;
		qc_wspd:units = "unitless" ;
	float wspd_va(time) ;
		wspd_va:long_name = "Wind Speed (vector averaged)" ;
		wspd_va:units = "m/s" ;
		wspd_va:valid_min = 0.f ;
		wspd_va:valid_max = 60.f ;
		wspd_va:resolution = 0.01f ;
		wspd_va:missing_value = -9999.f ;
	int qc_wspd_va(time) ;
		qc_wspd_va:long_name = "Quality check results on field: Wind Speed (vector averaged)" ;
		qc_wspd_va:units = "unitless" ;
	float wdir(time) ;
		wdir:long_name = "Wind Direction" ;
		wdir:units = "deg" ;
		wdir:valid_min = 0.f ;
		wdir:valid_max = 360.f ;
		wdir:resolution = 0.1f ;
		wdir:missing_value = -9999.f ;
		wdir:threshold = "Wind speed </= 1.00 m/s" ;
		wdir:uncertainty = "+/- 5.0 deg for wind speed > 1.0 m/s\n",
    "+/- 180.0 deg for wind speed </= 1.0 m/s\n",
    "Errors included in uncertainty are sensor accuracy,\n",
    "alignment accuracy, and A/D conversion accuracy." ;
	int qc_wdir(time) ;
		qc_wdir:long_name = "Quality check results on field: Wind Direction" ;
		qc_wdir:units = "unitless" ;
	float sd_deg(time) ;
		sd_deg:long_name = "Standard Deviation of wind direction" ;
		sd_deg:units = "deg" ;
		sd_deg:valid_min = 0.f ;
		sd_deg:valid_max = 90.f ;
		sd_deg:resolution = 0.1f ;
		sd_deg:missing_value = -9999.f ;
	int qc_sd_deg(time) ;
		qc_sd_deg:long_name = "Quality check results on field: Standard Deviation of wind direction" ;
		qc_sd_deg:units = "unitless" ;
	float temp(time) ;
		temp:long_name = "Temperature" ;
		temp:units = "C" ;
		temp:valid_min = -40.f ;
		temp:valid_max = 50.f ;
		temp:resolution = 0.01f ;
		temp:missing_value = -9999.f ;
		temp:uncertainty = "+/- 0.45 C for wind speed >/= 6.00 m/s\n",
    "+/- 0.89 C for wind speed = 3.00 m/s\n",
    "+/- 1.46 C for wind speed = 2.00 m/s\n",
    "+/- 3.07 C for wind speed = 1.00 m/s\n",
    "Errors included in uncertainty are radiation error, sensor\n",
    "interchangeability, bridge resistor precision, and polynomial\n",
    "curve fitting.  Radiation error is the largest contributor to\n",
    "the latter uncertainties.  Future algorithm development may\n",
    "reduce these uncertainties." ;
	int qc_temp(time) ;
		qc_temp:long_name = "Quality check results on field: Temperature" ;
		qc_temp:units = "unitless" ;
	float rh(time) ;
		rh:long_name = "Relative Humidity" ;
		rh:units = "%" ;
		rh:valid_min = -2.f ;
		rh:valid_max = 104.f ;
		rh:resolution = 0.1f ;
		rh:missing_value = -9999.f ;
		rh:uncertainty = "+/- 2.06 % RH for 0 to 90 % RH\n",
    "+/- 3.04 % RH for 90 to 100 % RH\n",
    "Errors included in uncertainty are calibration uncertainty,\n",
    "repeatability, temperature dependence, long term (1 yr)\n",
    "stability, and A/D conversion accuracy.  Wind speed dependence\n",
    "and radiation dependence have not been considered and may\n",
    "increase the uncertainty." ;
	int qc_rh(time) ;
		qc_rh:long_name = "Quality check results on field: Relative Humidity" ;
		qc_rh:units = "unitless" ;
	float vap_pres(time) ;
		vap_pres:long_name = "Vapor Pressure" ;
		vap_pres:units = "kPa" ;
		vap_pres:valid_min = 0.f ;
		vap_pres:valid_max = 10.f ;
		vap_pres:resolution = 0.001f ;
		vap_pres:missing_value = -9999.f ;
	int qc_vap_pres(time) ;
		qc_vap_pres:long_name = "Quality check results on field: Vapor Pressure" ;
		qc_vap_pres:units = "unitless" ;
	float bar_pres(time) ;
		bar_pres:long_name = "Barometric Pressure" ;
		bar_pres:units = "kPa" ;
		bar_pres:valid_min = 80.f ;
		bar_pres:valid_max = 110.f ;
		bar_pres:resolution = 0.01f ;
		bar_pres:missing_value = -9999.f ;
		bar_pres:uncertainty = "+/- 0.035 kPa\n",
    "Errors included in uncertainty are linearity, hysteresis,\n",
    "repeatability, calibration uncertainty, temperature dependence,\n",
    "and long-term (1 yr) stability.  Wind speed dependence has not\n",
    "been considered and may increase the uncertainty." ;
	int qc_bar_pres(time) ;
		qc_bar_pres:long_name = "Quality check results on field: Barometric Pressure" ;
		qc_bar_pres:units = "unitless" ;
	float precip(time) ;
		precip:long_name = "Precipitation Total" ;
		precip:units = "mm" ;
		precip:valid_min = 0.f ;
		precip:valid_max = 10.f ;
		precip:resolution = 0.001f ;
		precip:missing_value = -9999.f ;
		precip:uncertainty = "Under normal conditions, uncertainty for\n",
    "rain is +/- 0.254 mm (one bucket).  Uncertainty increases to\n",
    "an unknown value during strong winds or very heavy rains (in\n",
    "excess of 75 mm per hour). The instrument is not considered\n",
    "reliable for snow amounts." ;
	int qc_precip(time) ;
		qc_precip:long_name = "Quality check results on field: Precipitation Total" ;
		qc_precip:units = "unitless" ;
	float lat ;
		lat:long_name = "north latitude" ;
		lat:units = "degrees" ;
		lat:valid_min = -90.f ;
		lat:valid_max = 90.f ;
	float lon ;
		lon:long_name = "east longitude" ;
		lon:units = "degrees" ;
		lon:valid_min = -180.f ;
		lon:valid_max = 180.f ;
	float alt ;
		alt:long_name = "altitude" ;
		alt:units = "meters above Mean Sea Level" ;

// global attributes:
		:ingest_software = " smos_ingest.c,v 7.6 2003/10/02 23:29:29 ermold process-ingest-smos_ingest-7.5-0 $" ;
		:proc_level = "b1" ;
		:input_source = "smos5:/data/collection/sgp/sgpsmosE5.00/1087254120.icm" ;
		:site_id = "sgp" ;
		:facility_id = "E5 : Halstead" ;
		:sample_int = "bar press - 1 minute\n",
    "all others 1 second" ;
		:averaging_int = "1 minute" ;
		:serial_number = "SMOS14" ;
		:comment = "The time assigned to each data point indicates the end of any\n",
    "period of averaging of the geophysical data.\n",
    "\n",
    "The snow depth sensors were removed from service in August 2002.\n",
    "\n",
    "Altitude is in meters above Mean Sea Level." ;
		:resolution_description = "The resolution field attributes refer to the number of significant\n",
    "digits relative to the decimal point that should be used in\n",
    "calculations.  Using fewer digits might result in greater uncertainty;\n",
    "using a larger number of digits should have no effect and thus is\n",
    "unnecessary.  However, analyses based on differences in values with\n",
    "a larger number of significant digits than indicated could lead to\n",
    "erroneous results or misleading scientific conclusions.\n",
    "\n",
    "resolution for lat= 0.001\n",
    "resolution for lon = 0.001\n",
    "resolution for alt = 1" ;
		:sensor_location = "Sensors heights (above base \"alt\"):\n",
    "  10m for winds\n",
    "  2m for temp, RH, and vap pres\n",
    "  1m for bar pres" ;
		:qc_method = "Standard Mentor QC" ;
		:Mentor_QC_Field_Information = "For each qc_<field> interpret the values as follows:\n",
    "\n",
    "Basic mentor QC checks (bit values):\n",
    "==========================================\n",
    "0x0 = value is within the specified range\n",
    "0x1 = value is equal to \'missing_value\'\n",
    "0x2 = value is less than the \'valid_min\'\n",
    "0x4 = value is greater than the \'valid_max\'\n",
    "0x8 = value failed the \'valid_delta\' check\n",
    "\n",
    "If the value is a \'missing_value\' no min, max, or delta checks are performed.\n",
    "\n",
    "The delta checks are done by comparing each data value to the one just\n",
    "prior to it in time. If a previous data value does not exist or is a\n",
    "\'missing_value\' the delta check will not be performed.\n",
    "\n",
    "Note that the delta computation for multi-dimensioned data compares the\n",
    "absolute value between points in the same spatial location to the previous\n",
    "point in time.\n",
    "\n",
    "If the associated non-QC field does not contain any mentor-specified minimum,\n",
    "maximum, or delta information a qc_field is not generated.\n",
    "" ;
		:zeb_platform = "sgp1smosE5.b1" ;
		:history = "created by user dsmgr on machine left at 15-Jun-2004,1:08:39, using $State: ds-zebra-zeblib-4.12-0 $" ;
}
netcdf sgp1smosE6.b1.20040615.000000 {
dimensions:
	time = UNLIMITED ; // (1440 currently)
variables:
	int base_time ;
		base_time:string = "14-Jun-2004,23:02:00 GMT" ;
		base_time:long_name = "Base time in Epoch" ;
		base_time:units = "seconds since 1970-1-1 0:00:00 0:00" ;
	double time_offset(time) ;
		time_offset:long_name = "Time offset from base_time" ;
		time_offset:units = "seconds since 2004-06-14 23:02:00 0:00" ;
	double time(time) ;
		time:long_name = "Time offset from midnight" ;
		time:units = "seconds since 2004-06-15 00:00:00 0:00" ;
	int qc_time(time) ;
		qc_time:long_name = "Results of quality checks on sample time" ;
		qc_time:units = "unitless" ;
		qc_time:description = "The qc_time values are calculated by comparing each sample\n",
    "time with the previous time (i.e. delta_t = t[n] - t[n-1]).\n",
    "If the \'qc_check_prior\' flag is set the first sample time\n",
    "from a new raw file will be compared against the time just\n",
    "previous to it in the stored data. If the \'qc_check_prior\'\n",
    "flag is not set the qc_time value for the first sample time\n",
    "will be set to 0\n",
    "\n",
    "The qc_time bit values are as follows:\n",
    "=========================================================\n",
    "0x0 = delta time is within the specified range\n",
    "0x1 = delta time is equal to 0, duplicate sample times\n",
    "0x2 = delta time is less than the \'delta_t_lower_limit\'\n",
    "0x4 = delta time is greater than the \'delta_t_upper_limit\'\n",
    "\n",
    "" ;
		qc_time:delta_t_lower_limit = 60 ;
		qc_time:delta_t_upper_limit = 60 ;
		qc_time:prior_sample_flag = 1 ;
	float wspd(time) ;
		wspd:long_name = "Wind Speed" ;
		wspd:units = "m/s" ;
		wspd:valid_min = 0.f ;
		wspd:valid_max = 60.f ;
		wspd:resolution = 0.01f ;
		wspd:missing_value = -9999.f ;
		wspd:threshold = "1.00 m/s" ;
		wspd:uncertainty = "+/- 1% for 2.5 to 30 m/s\n",
    "- 0.12 to +0.02 m/s at 2.0 m/s\n",
    "- 0.22 to +0.00 m/s at 1.5 m/s\n",
    "- 0.31 to -0.20 m/s at 1.0 m/s\n",
    "- 0.51 to -0.49 m/s at 0.5 m/s\n",
    "Error included in uncertainty are calibration accuracy,\n",
    "data logger timebase accuracy, and bias by underestimation\n",
    "due to threshold.  The latter assumes normal distibution\n",
    "of winds about the mean with standard deviations ranging\n",
    "between 0.25 and 1.00 m/s." ;
	int qc_wspd(time) ;
		qc_wspd:long_name = "Quality check results on field: Wind Speed" ;
		qc_wspd:units = "unitless" ;
	float wspd_va(time) ;
		wspd_va:long_name = "Wind Speed (vector averaged)" ;
		wspd_va:units = "m/s" ;
		wspd_va:valid_min = 0.f ;
		wspd_va:valid_max = 60.f ;
		wspd_va:resolution = 0.01f ;
		wspd_va:missing_value = -9999.f ;
	int qc_wspd_va(time) ;
		qc_wspd_va:long_name = "Quality check results on field: Wind Speed (vector averaged)" ;
		qc_wspd_va:units = "unitless" ;
	float wdir(time) ;
		wdir:long_name = "Wind Direction" ;
		wdir:units = "deg" ;
		wdir:valid_min = 0.f ;
		wdir:valid_max = 360.f ;
		wdir:resolution = 0.1f ;
		wdir:missing_value = -9999.f ;
		wdir:threshold = "Wind speed </= 1.00 m/s" ;
		wdir:uncertainty = "+/- 5.0 deg for wind speed > 1.0 m/s\n",
    "+/- 180.0 deg for wind speed </= 1.0 m/s\n",
    "Errors included in uncertainty are sensor accuracy,\n",
    "alignment accuracy, and A/D conversion accuracy." ;
	int qc_wdir(time) ;
		qc_wdir:long_name = "Quality check results on field: Wind Direction" ;
		qc_wdir:units = "unitless" ;
	float sd_deg(time) ;
		sd_deg:long_name = "Standard Deviation of wind direction" ;
		sd_deg:units = "deg" ;
		sd_deg:valid_min = 0.f ;
		sd_deg:valid_max = 90.f ;
		sd_deg:resolution = 0.1f ;
		sd_deg:missing_value = -9999.f ;
	int qc_sd_deg(time) ;
		qc_sd_deg:long_name = "Quality check results on field: Standard Deviation of wind direction" ;
		qc_sd_deg:units = "unitless" ;
	float temp(time) ;
		temp:long_name = "Temperature" ;
		temp:units = "C" ;
		temp:valid_min = -40.f ;
		temp:valid_max = 50.f ;
		temp:resolution = 0.01f ;
		temp:missing_value = -9999.f ;
		temp:uncertainty = "+/- 0.45 C for wind speed >/= 6.00 m/s\n",
    "+/- 0.89 C for wind speed = 3.00 m/s\n",
    "+/- 1.46 C for wind speed = 2.00 m/s\n",
    "+/- 3.07 C for wind speed = 1.00 m/s\n",
    "Errors included in uncertainty are radiation error, sensor\n",
    "interchangeability, bridge resistor precision, and polynomial\n",
    "curve fitting.  Radiation error is the largest contributor to\n",
    "the latter uncertainties.  Future algorithm development may\n",
    "reduce these uncertainties." ;
	int qc_temp(time) ;
		qc_temp:long_name = "Quality check results on field: Temperature" ;
		qc_temp:units = "unitless" ;
	float rh(time) ;
		rh:long_name = "Relative Humidity" ;
		rh:units = "%" ;
		rh:valid_min = -2.f ;
		rh:valid_max = 104.f ;
		rh:resolution = 0.1f ;
		rh:missing_value = -9999.f ;
		rh:uncertainty = "+/- 2.06 % RH for 0 to 90 % RH\n",
    "+/- 3.04 % RH for 90 to 100 % RH\n",
    "Errors included in uncertainty are calibration uncertainty,\n",
    "repeatability, temperature dependence, long term (1 yr)\n",
    "stability, and A/D conversion accuracy.  Wind speed dependence\n",
    "and radiation dependence have not been considered and may\n",
    "increase the uncertainty." ;
	int qc_rh(time) ;
		qc_rh:long_name = "Quality check results on field: Relative Humidity" ;
		qc_rh:units = "unitless" ;
	float vap_pres(time) ;
		vap_pres:long_name = "Vapor Pressure" ;
		vap_pres:units = "kPa" ;
		vap_pres:valid_min = 0.f ;
		vap_pres:valid_max = 10.f ;
		vap_pres:resolution = 0.001f ;
		vap_pres:missing_value = -9999.f ;
	int qc_vap_pres(time) ;
		qc_vap_pres:long_name = "Quality check results on field: Vapor Pressure" ;
		qc_vap_pres:units = "unitless" ;
	float bar_pres(time) ;
		bar_pres:long_name = "Barometric Pressure" ;
		bar_pres:units = "kPa" ;
		bar_pres:valid_min = 80.f ;
		bar_pres:valid_max = 110.f ;
		bar_pres:resolution = 0.01f ;
		bar_pres:missing_value = -9999.f ;
		bar_pres:uncertainty = "+/- 0.035 kPa\n",
    "Errors included in uncertainty are linearity, hysteresis,\n",
    "repeatability, calibration uncertainty, temperature dependence,\n",
    "and long-term (1 yr) stability.  Wind speed dependence has not\n",
    "been considered and may increase the uncertainty." ;
	int qc_bar_pres(time) ;
		qc_bar_pres:long_name = "Quality check results on field: Barometric Pressure" ;
		qc_bar_pres:units = "unitless" ;
	float precip(time) ;
		precip:long_name = "Precipitation Total" ;
		precip:units = "mm" ;
		precip:valid_min = 0.f ;
		precip:valid_max = 10.f ;
		precip:resolution = 0.001f ;
		precip:missing_value = -9999.f ;
		precip:uncertainty = "Under normal conditions, uncertainty for\n",
    "rain is +/- 0.254 mm (one bucket).  Uncertainty increases to\n",
    "an unknown value during strong winds or very heavy rains (in\n",
    "excess of 75 mm per hour). The instrument is not considered\n",
    "reliable for snow amounts." ;
	int qc_precip(time) ;
		qc_precip:long_name = "Quality check results on field: Precipitation Total" ;
		qc_precip:units = "unitless" ;
	float lat ;
		lat:long_name = "north latitude" ;
		lat:units = "degrees" ;
		lat:valid_min = -90.f ;
		lat:valid_max = 90.f ;
	float lon ;
		lon:long_name = "east longitude" ;
		lon:units = "degrees" ;
		lon:valid_min = -180.f ;
		lon:valid_max = 180.f ;
	float alt ;
		alt:long_name = "altitude" ;
		alt:units = "meters above Mean Sea Level" ;

// global attributes:
		:ingest_software = " smos_ingest.c,v 7.6 2003/10/02 23:29:29 ermold process-ingest-smos_ingest-7.5-0 $" ;
		:proc_level = "b1" ;
		:input_source = "smos6:/data/collection/sgp/sgpsmosE6.00/1087254120.icm" ;
		:site_id = "sgp" ;
		:facility_id = "E6 : Towanda" ;
		:sample_int = "bar press - 1 minute\n",
    "all others 1 second" ;
		:averaging_int = "1 minute" ;
		:serial_number = "SMOS12" ;
		:comment = "The time assigned to each data point indicates the end of any\n",
    "period of averaging of the geophysical data.\n",
    "\n",
    "The snow depth sensors were removed from service in August 2002.\n",
    "\n",
    "Altitude is in meters above Mean Sea Level." ;
		:resolution_description = "The resolution field attributes refer to the number of significant\n",
    "digits relative to the decimal point that should be used in\n",
    "calculations.  Using fewer digits might result in greater uncertainty;\n",
    "using a larger number of digits should have no effect and thus is\n",
    "unnecessary.  However, analyses based on differences in values with\n",
    "a larger number of significant digits than indicated could lead to\n",
    "erroneous results or misleading scientific conclusions.\n",
    "\n",
    "resolution for lat= 0.001\n",
    "resolution for lon = 0.001\n",
    "resolution for alt = 1" ;
		:sensor_location = "Sensors heights (above base \"alt\"):\n",
    "  10m for winds\n",
    "  2m for temp, RH, and vap pres\n",
    "  1m for bar pres" ;
		:qc_method = "Standard Mentor QC" ;
		:Mentor_QC_Field_Information = "For each qc_<field> interpret the values as follows:\n",
    "\n",
    "Basic mentor QC checks (bit values):\n",
    "==========================================\n",
    "0x0 = value is within the specified range\n",
    "0x1 = value is equal to \'missing_value\'\n",
    "0x2 = value is less than the \'valid_min\'\n",
    "0x4 = value is greater than the \'valid_max\'\n",
    "0x8 = value failed the \'valid_delta\' check\n",
    "\n",
    "If the value is a \'missing_value\' no min, max, or delta checks are performed.\n",
    "\n",
    "The delta checks are done by comparing each data value to the one just\n",
    "prior to it in time. If a previous data value does not exist or is a\n",
    "\'missing_value\' the delta check will not be performed.\n",
    "\n",
    "Note that the delta computation for multi-dimensioned data compares the\n",
    "absolute value between points in the same spatial location to the previous\n",
    "point in time.\n",
    "\n",
    "If the associated non-QC field does not contain any mentor-specified minimum,\n",
    "maximum, or delta information a qc_field is not generated.\n",
    "" ;
		:zeb_platform = "sgp1smosE6.b1" ;
		:history = "created by user dsmgr on machine left at 15-Jun-2004,1:08:41, using $State: ds-zebra-zeblib-4.12-0 $" ;
}
netcdf sgp1smosE7.b1.20040615.000000 {
dimensions:
	time = UNLIMITED ; // (1440 currently)
variables:
	int base_time ;
		base_time:string = "14-Jun-2004,23:02:00 GMT" ;
		base_time:long_name = "Base time in Epoch" ;
		base_time:units = "seconds since 1970-1-1 0:00:00 0:00" ;
	double time_offset(time) ;
		time_offset:long_name = "Time offset from base_time" ;
		time_offset:units = "seconds since 2004-06-14 23:02:00 0:00" ;
	double time(time) ;
		time:long_name = "Time offset from midnight" ;
		time:units = "seconds since 2004-06-15 00:00:00 0:00" ;
	int qc_time(time) ;
		qc_time:long_name = "Results of quality checks on sample time" ;
		qc_time:units = "unitless" ;
		qc_time:description = "The qc_time values are calculated by comparing each sample\n",
    "time with the previous time (i.e. delta_t = t[n] - t[n-1]).\n",
    "If the \'qc_check_prior\' flag is set the first sample time\n",
    "from a new raw file will be compared against the time just\n",
    "previous to it in the stored data. If the \'qc_check_prior\'\n",
    "flag is not set the qc_time value for the first sample time\n",
    "will be set to 0\n",
    "\n",
    "The qc_time bit values are as follows:\n",
    "=========================================================\n",
    "0x0 = delta time is within the specified range\n",
    "0x1 = delta time is equal to 0, duplicate sample times\n",
    "0x2 = delta time is less than the \'delta_t_lower_limit\'\n",
    "0x4 = delta time is greater than the \'delta_t_upper_limit\'\n",
    "\n",
    "" ;
		qc_time:delta_t_lower_limit = 60 ;
		qc_time:delta_t_upper_limit = 60 ;
		qc_time:prior_sample_flag = 1 ;
	float wspd(time) ;
		wspd:long_name = "Wind Speed" ;
		wspd:units = "m/s" ;
		wspd:valid_min = 0.f ;
		wspd:valid_max = 60.f ;
		wspd:resolution = 0.01f ;
		wspd:missing_value = -9999.f ;
		wspd:threshold = "1.00 m/s" ;
		wspd:uncertainty = "+/- 1% for 2.5 to 30 m/s\n",
    "- 0.12 to +0.02 m/s at 2.0 m/s\n",
    "- 0.22 to +0.00 m/s at 1.5 m/s\n",
    "- 0.31 to -0.20 m/s at 1.0 m/s\n",
    "- 0.51 to -0.49 m/s at 0.5 m/s\n",
    "Error included in uncertainty are calibration accuracy,\n",
    "data logger timebase accuracy, and bias by underestimation\n",
    "due to threshold.  The latter assumes normal distibution\n",
    "of winds about the mean with standard deviations ranging\n",
    "between 0.25 and 1.00 m/s." ;
	int qc_wspd(time) ;
		qc_wspd:long_name = "Quality check results on field: Wind Speed" ;
		qc_wspd:units = "unitless" ;
	float wspd_va(time) ;
		wspd_va:long_name = "Wind Speed (vector averaged)" ;
		wspd_va:units = "m/s" ;
		wspd_va:valid_min = 0.f ;
		wspd_va:valid_max = 60.f ;
		wspd_va:resolution = 0.01f ;
		wspd_va:missing_value = -9999.f ;
	int qc_wspd_va(time) ;
		qc_wspd_va:long_name = "Quality check results on field: Wind Speed (vector averaged)" ;
		qc_wspd_va:units = "unitless" ;
	float wdir(time) ;
		wdir:long_name = "Wind Direction" ;
		wdir:units = "deg" ;
		wdir:valid_min = 0.f ;
		wdir:valid_max = 360.f ;
		wdir:resolution = 0.1f ;
		wdir:missing_value = -9999.f ;
		wdir:threshold = "Wind speed </= 1.00 m/s" ;
		wdir:uncertainty = "+/- 5.0 deg for wind speed > 1.0 m/s\n",
    "+/- 180.0 deg for wind speed </= 1.0 m/s\n",
    "Errors included in uncertainty are sensor accuracy,\n",
    "alignment accuracy, and A/D conversion accuracy." ;
	int qc_wdir(time) ;
		qc_wdir:long_name = "Quality check results on field: Wind Direction" ;
		qc_wdir:units = "unitless" ;
	float sd_deg(time) ;
		sd_deg:long_name = "Standard Deviation of wind direction" ;
		sd_deg:units = "deg" ;
		sd_deg:valid_min = 0.f ;
		sd_deg:valid_max = 90.f ;
		sd_deg:resolution = 0.1f ;
		sd_deg:missing_value = -9999.f ;
	int qc_sd_deg(time) ;
		qc_sd_deg:long_name = "Quality check results on field: Standard Deviation of wind direction" ;
		qc_sd_deg:units = "unitless" ;
	float temp(time) ;
		temp:long_name = "Temperature" ;
		temp:units = "C" ;
		temp:valid_min = -40.f ;
		temp:valid_max = 50.f ;
		temp:resolution = 0.01f ;
		temp:missing_value = -9999.f ;
		temp:uncertainty = "+/- 0.45 C for wind speed >/= 6.00 m/s\n",
    "+/- 0.89 C for wind speed = 3.00 m/s\n",
    "+/- 1.46 C for wind speed = 2.00 m/s\n",
    "+/- 3.07 C for wind speed = 1.00 m/s\n",
    "Errors included in uncertainty are radiation error, sensor\n",
    "interchangeability, bridge resistor precision, and polynomial\n",
    "curve fitting.  Radiation error is the largest contributor to\n",
    "the latter uncertainties.  Future algorithm development may\n",
    "reduce these uncertainties." ;
	int qc_temp(time) ;
		qc_temp:long_name = "Quality check results on field: Temperature" ;
		qc_temp:units = "unitless" ;
	float rh(time) ;
		rh:long_name = "Relative Humidity" ;
		rh:units = "%" ;
		rh:valid_min = -2.f ;
		rh:valid_max = 104.f ;
		rh:resolution = 0.1f ;
		rh:missing_value = -9999.f ;
		rh:uncertainty = "+/- 2.06 % RH for 0 to 90 % RH\n",
    "+/- 3.04 % RH for 90 to 100 % RH\n",
    "Errors included in uncertainty are calibration uncertainty,\n",
    "repeatability, temperature dependence, long term (1 yr)\n",
    "stability, and A/D conversion accuracy.  Wind speed dependence\n",
    "and radiation dependence have not been considered and may\n",
    "increase the uncertainty." ;
	int qc_rh(time) ;
		qc_rh:long_name = "Quality check results on field: Relative Humidity" ;
		qc_rh:units = "unitless" ;
	float vap_pres(time) ;
		vap_pres:long_name = "Vapor Pressure" ;
		vap_pres:units = "kPa" ;
		vap_pres:valid_min = 0.f ;
		vap_pres:valid_max = 10.f ;
		vap_pres:resolution = 0.001f ;
		vap_pres:missing_value = -9999.f ;
	int qc_vap_pres(time) ;
		qc_vap_pres:long_name = "Quality check results on field: Vapor Pressure" ;
		qc_vap_pres:units = "unitless" ;
	float bar_pres(time) ;
		bar_pres:long_name = "Barometric Pressure" ;
		bar_pres:units = "kPa" ;
		bar_pres:valid_min = 80.f ;
		bar_pres:valid_max = 110.f ;
		bar_pres:resolution = 0.01f ;
		bar_pres:missing_value = -9999.f ;
		bar_pres:uncertainty = "+/- 0.035 kPa\n",
    "Errors included in uncertainty are linearity, hysteresis,\n",
    "repeatability, calibration uncertainty, temperature dependence,\n",
    "and long-term (1 yr) stability.  Wind speed dependence has not\n",
    "been considered and may increase the uncertainty." ;
	int qc_bar_pres(time) ;
		qc_bar_pres:long_name = "Quality check results on field: Barometric Pressure" ;
		qc_bar_pres:units = "unitless" ;
	float precip(time) ;
		precip:long_name = "Precipitation Total" ;
		precip:units = "mm" ;
		precip:valid_min = 0.f ;
		precip:valid_max = 10.f ;
		precip:resolution = 0.001f ;
		precip:missing_value = -9999.f ;
		precip:uncertainty = "Under normal conditions, uncertainty for\n",
    "rain is +/- 0.254 mm (one bucket).  Uncertainty increases to\n",
    "an unknown value during strong winds or very heavy rains (in\n",
    "excess of 75 mm per hour). The instrument is not considered\n",
    "reliable for snow amounts." ;
	int qc_precip(time) ;
		qc_precip:long_name = "Quality check results on field: Precipitation Total" ;
		qc_precip:units = "unitless" ;
	float lat ;
		lat:long_name = "north latitude" ;
		lat:units = "degrees" ;
		lat:valid_min = -90.f ;
		lat:valid_max = 90.f ;
	float lon ;
		lon:long_name = "east longitude" ;
		lon:units = "degrees" ;
		lon:valid_min = -180.f ;
		lon:valid_max = 180.f ;
	float alt ;
		alt:long_name = "altitude" ;
		alt:units = "meters above Mean Sea Level" ;

// global attributes:
		:ingest_software = " smos_ingest.c,v 7.6 2003/10/02 23:29:29 ermold process-ingest-smos_ingest-7.5-0 $" ;
		:proc_level = "b1" ;
		:input_source = "smos7:/data/collection/sgp/sgpsmosE7.00/1087254120.icm" ;
		:site_id = "sgp" ;
		:facility_id = "E7 : Elk_Falls" ;
		:sample_int = "bar press - 1 minute\n",
    "all others 1 second" ;
		:averaging_int = "1 minute" ;
		:serial_number = "SMOS06" ;
		:comment = "The time assigned to each data point indicates the end of any\n",
    "period of averaging of the geophysical data.\n",
    "\n",
    "The snow depth sensors were removed from service in August 2002.\n",
    "\n",
    "Altitude is in meters above Mean Sea Level." ;
		:resolution_description = "The resolution field attributes refer to the number of significant\n",
    "digits relative to the decimal point that should be used in\n",
    "calculations.  Using fewer digits might result in greater uncertainty;\n",
    "using a larger number of digits should have no effect and thus is\n",
    "unnecessary.  However, analyses based on differences in values with\n",
    "a larger number of significant digits than indicated could lead to\n",
    "erroneous results or misleading scientific conclusions.\n",
    "\n",
    "resolution for lat= 0.001\n",
    "resolution for lon = 0.001\n",
    "resolution for alt = 1" ;
		:sensor_location = "Sensors heights (above base \"alt\"):\n",
    "  10m for winds\n",
    "  2m for temp, RH, and vap pres\n",
    "  1m for bar pres" ;
		:qc_method = "Standard Mentor QC" ;
		:Mentor_QC_Field_Information = "For each qc_<field> interpret the values as follows:\n",
    "\n",
    "Basic mentor QC checks (bit values):\n",
    "==========================================\n",
    "0x0 = value is within the specified range\n",
    "0x1 = value is equal to \'missing_value\'\n",
    "0x2 = value is less than the \'valid_min\'\n",
    "0x4 = value is greater than the \'valid_max\'\n",
    "0x8 = value failed the \'valid_delta\' check\n",
    "\n",
    "If the value is a \'missing_value\' no min, max, or delta checks are performed.\n",
    "\n",
    "The delta checks are done by comparing each data value to the one just\n",
    "prior to it in time. If a previous data value does not exist or is a\n",
    "\'missing_value\' the delta check will not be performed.\n",
    "\n",
    "Note that the delta computation for multi-dimensioned data compares the\n",
    "absolute value between points in the same spatial location to the previous\n",
    "point in time.\n",
    "\n",
    "If the associated non-QC field does not contain any mentor-specified minimum,\n",
    "maximum, or delta information a qc_field is not generated.\n",
    "" ;
		:zeb_platform = "sgp1smosE7.b1" ;
		:history = "created by user dsmgr on machine left at 15-Jun-2004,1:09:30, using $State: ds-zebra-zeblib-4.12-0 $" ;
}
netcdf sgp1smosE8.b1.20040615.000000 {
dimensions:
	time = UNLIMITED ; // (1440 currently)
variables:
	int base_time ;
		base_time:string = "14-Jun-2004,23:02:00 GMT" ;
		base_time:long_name = "Base time in Epoch" ;
		base_time:units = "seconds since 1970-1-1 0:00:00 0:00" ;
	double time_offset(time) ;
		time_offset:long_name = "Time offset from base_time" ;
		time_offset:units = "seconds since 2004-06-14 23:02:00 0:00" ;
	double time(time) ;
		time:long_name = "Time offset from midnight" ;
		time:units = "seconds since 2004-06-15 00:00:00 0:00" ;
	int qc_time(time) ;
		qc_time:long_name = "Results of quality checks on sample time" ;
		qc_time:units = "unitless" ;
		qc_time:description = "The qc_time values are calculated by comparing each sample\n",
    "time with the previous time (i.e. delta_t = t[n] - t[n-1]).\n",
    "If the \'qc_check_prior\' flag is set the first sample time\n",
    "from a new raw file will be compared against the time just\n",
    "previous to it in the stored data. If the \'qc_check_prior\'\n",
    "flag is not set the qc_time value for the first sample time\n",
    "will be set to 0\n",
    "\n",
    "The qc_time bit values are as follows:\n",
    "=========================================================\n",
    "0x0 = delta time is within the specified range\n",
    "0x1 = delta time is equal to 0, duplicate sample times\n",
    "0x2 = delta time is less than the \'delta_t_lower_limit\'\n",
    "0x4 = delta time is greater than the \'delta_t_upper_limit\'\n",
    "\n",
    "" ;
		qc_time:delta_t_lower_limit = 60 ;
		qc_time:delta_t_upper_limit = 60 ;
		qc_time:prior_sample_flag = 1 ;
	float wspd(time) ;
		wspd:long_name = "Wind Speed" ;
		wspd:units = "m/s" ;
		wspd:valid_min = 0.f ;
		wspd:valid_max = 60.f ;
		wspd:resolution = 0.01f ;
		wspd:missing_value = -9999.f ;
		wspd:threshold = "1.00 m/s" ;
		wspd:uncertainty = "+/- 1% for 2.5 to 30 m/s\n",
    "- 0.12 to +0.02 m/s at 2.0 m/s\n",
    "- 0.22 to +0.00 m/s at 1.5 m/s\n",
    "- 0.31 to -0.20 m/s at 1.0 m/s\n",
    "- 0.51 to -0.49 m/s at 0.5 m/s\n",
    "Error included in uncertainty are calibration accuracy,\n",
    "data logger timebase accuracy, and bias by underestimation\n",
    "due to threshold.  The latter assumes normal distibution\n",
    "of winds about the mean with standard deviations ranging\n",
    "between 0.25 and 1.00 m/s." ;
	int qc_wspd(time) ;
		qc_wspd:long_name = "Quality check results on field: Wind Speed" ;
		qc_wspd:units = "unitless" ;
	float wspd_va(time) ;
		wspd_va:long_name = "Wind Speed (vector averaged)" ;
		wspd_va:units = "m/s" ;
		wspd_va:valid_min = 0.f ;
		wspd_va:valid_max = 60.f ;
		wspd_va:resolution = 0.01f ;
		wspd_va:missing_value = -9999.f ;
	int qc_wspd_va(time) ;
		qc_wspd_va:long_name = "Quality check results on field: Wind Speed (vector averaged)" ;
		qc_wspd_va:units = "unitless" ;
	float wdir(time) ;
		wdir:long_name = "Wind Direction" ;
		wdir:units = "deg" ;
		wdir:valid_min = 0.f ;
		wdir:valid_max = 360.f ;
		wdir:resolution = 0.1f ;
		wdir:missing_value = -9999.f ;
		wdir:threshold = "Wind speed </= 1.00 m/s" ;
		wdir:uncertainty = "+/- 5.0 deg for wind speed > 1.0 m/s\n",
    "+/- 180.0 deg for wind speed </= 1.0 m/s\n",
    "Errors included in uncertainty are sensor accuracy,\n",
    "alignment accuracy, and A/D conversion accuracy." ;
	int qc_wdir(time) ;
		qc_wdir:long_name = "Quality check results on field: Wind Direction" ;
		qc_wdir:units = "unitless" ;
	float sd_deg(time) ;
		sd_deg:long_name = "Standard Deviation of wind direction" ;
		sd_deg:units = "deg" ;
		sd_deg:valid_min = 0.f ;
		sd_deg:valid_max = 90.f ;
		sd_deg:resolution = 0.1f ;
		sd_deg:missing_value = -9999.f ;
	int qc_sd_deg(time) ;
		qc_sd_deg:long_name = "Quality check results on field: Standard Deviation of wind direction" ;
		qc_sd_deg:units = "unitless" ;
	float temp(time) ;
		temp:long_name = "Temperature" ;
		temp:units = "C" ;
		temp:valid_min = -40.f ;
		temp:valid_max = 50.f ;
		temp:resolution = 0.01f ;
		temp:missing_value = -9999.f ;
		temp:uncertainty = "+/- 0.45 C for wind speed >/= 6.00 m/s\n",
    "+/- 0.89 C for wind speed = 3.00 m/s\n",
    "+/- 1.46 C for wind speed = 2.00 m/s\n",
    "+/- 3.07 C for wind speed = 1.00 m/s\n",
    "Errors included in uncertainty are radiation error, sensor\n",
    "interchangeability, bridge resistor precision, and polynomial\n",
    "curve fitting.  Radiation error is the largest contributor to\n",
    "the latter uncertainties.  Future algorithm development may\n",
    "reduce these uncertainties." ;
	int qc_temp(time) ;
		qc_temp:long_name = "Quality check results on field: Temperature" ;
		qc_temp:units = "unitless" ;
	float rh(time) ;
		rh:long_name = "Relative Humidity" ;
		rh:units = "%" ;
		rh:valid_min = -2.f ;
		rh:valid_max = 104.f ;
		rh:resolution = 0.1f ;
		rh:missing_value = -9999.f ;
		rh:uncertainty = "+/- 2.06 % RH for 0 to 90 % RH\n",
    "+/- 3.04 % RH for 90 to 100 % RH\n",
    "Errors included in uncertainty are calibration uncertainty,\n",
    "repeatability, temperature dependence, long term (1 yr)\n",
    "stability, and A/D conversion accuracy.  Wind speed dependence\n",
    "and radiation dependence have not been considered and may\n",
    "increase the uncertainty." ;
	int qc_rh(time) ;
		qc_rh:long_name = "Quality check results on field: Relative Humidity" ;
		qc_rh:units = "unitless" ;
	float vap_pres(time) ;
		vap_pres:long_name = "Vapor Pressure" ;
		vap_pres:units = "kPa" ;
		vap_pres:valid_min = 0.f ;
		vap_pres:valid_max = 10.f ;
		vap_pres:resolution = 0.001f ;
		vap_pres:missing_value = -9999.f ;
	int qc_vap_pres(time) ;
		qc_vap_pres:long_name = "Quality check results on field: Vapor Pressure" ;
		qc_vap_pres:units = "unitless" ;
	float bar_pres(time) ;
		bar_pres:long_name = "Barometric Pressure" ;
		bar_pres:units = "kPa" ;
		bar_pres:valid_min = 80.f ;
		bar_pres:valid_max = 110.f ;
		bar_pres:resolution = 0.01f ;
		bar_pres:missing_value = -9999.f ;
		bar_pres:uncertainty = "+/- 0.035 kPa\n",
    "Errors included in uncertainty are linearity, hysteresis,\n",
    "repeatability, calibration uncertainty, temperature dependence,\n",
    "and long-term (1 yr) stability.  Wind speed dependence has not\n",
    "been considered and may increase the uncertainty." ;
	int qc_bar_pres(time) ;
		qc_bar_pres:long_name = "Quality check results on field: Barometric Pressure" ;
		qc_bar_pres:units = "unitless" ;
	float precip(time) ;
		precip:long_name = "Precipitation Total" ;
		precip:units = "mm" ;
		precip:valid_min = 0.f ;
		precip:valid_max = 10.f ;
		precip:resolution = 0.001f ;
		precip:missing_value = -9999.f ;
		precip:uncertainty = "Under normal conditions, uncertainty for\n",
    "rain is +/- 0.254 mm (one bucket).  Uncertainty increases to\n",
    "an unknown value during strong winds or very heavy rains (in\n",
    "excess of 75 mm per hour). The instrument is not considered\n",
    "reliable for snow amounts." ;
	int qc_precip(time) ;
		qc_precip:long_name = "Quality check results on field: Precipitation Total" ;
		qc_precip:units = "unitless" ;
	float lat ;
		lat:long_name = "north latitude" ;
		lat:units = "degrees" ;
		lat:valid_min = -90.f ;
		lat:valid_max = 90.f ;
	float lon ;
		lon:long_name = "east longitude" ;
		lon:units = "degrees" ;
		lon:valid_min = -180.f ;
		lon:valid_max = 180.f ;
	float alt ;
		alt:long_name = "altitude" ;
		alt:units = "meters above Mean Sea Level" ;

// global attributes:
		:ingest_software = " smos_ingest.c,v 7.6 2003/10/02 23:29:29 ermold process-ingest-smos_ingest-7.5-0 $" ;
		:proc_level = "b1" ;
		:input_source = "smos8:/data/collection/sgp/sgpsmosE8.00/1087254120.icm" ;
		:site_id = "sgp" ;
		:facility_id = "E8 : Coldwater" ;
		:sample_int = "bar press - 1 minute\n",
    "all others 1 second" ;
		:averaging_int = "1 minute" ;
		:serial_number = "SMOS2" ;
		:comment = "The time assigned to each data point indicates the end of any\n",
    "period of averaging of the geophysical data.\n",
    "\n",
    "The snow depth sensors were removed from service in August 2002.\n",
    "\n",
    "Altitude is in meters above Mean Sea Level." ;
		:resolution_description = "The resolution field attributes refer to the number of significant\n",
    "digits relative to the decimal point that should be used in\n",
    "calculations.  Using fewer digits might result in greater uncertainty;\n",
    "using a larger number of digits should have no effect and thus is\n",
    "unnecessary.  However, analyses based on differences in values with\n",
    "a larger number of significant digits than indicated could lead to\n",
    "erroneous results or misleading scientific conclusions.\n",
    "\n",
    "resolution for lat= 0.001\n",
    "resolution for lon = 0.001\n",
    "resolution for alt = 1" ;
		:sensor_location = "Sensors heights (above base \"alt\"):\n",
    "  10m for winds\n",
    "  2m for temp, RH, and vap pres\n",
    "  1m for bar pres" ;
		:qc_method = "Standard Mentor QC" ;
		:Mentor_QC_Field_Information = "For each qc_<field> interpret the values as follows:\n",
    "\n",
    "Basic mentor QC checks (bit values):\n",
    "==========================================\n",
    "0x0 = value is within the specified range\n",
    "0x1 = value is equal to \'missing_value\'\n",
    "0x2 = value is less than the \'valid_min\'\n",
    "0x4 = value is greater than the \'valid_max\'\n",
    "0x8 = value failed the \'valid_delta\' check\n",
    "\n",
    "If the value is a \'missing_value\' no min, max, or delta checks are performed.\n",
    "\n",
    "The delta checks are done by comparing each data value to the one just\n",
    "prior to it in time. If a previous data value does not exist or is a\n",
    "\'missing_value\' the delta check will not be performed.\n",
    "\n",
    "Note that the delta computation for multi-dimensioned data compares the\n",
    "absolute value between points in the same spatial location to the previous\n",
    "point in time.\n",
    "\n",
    "If the associated non-QC field does not contain any mentor-specified minimum,\n",
    "maximum, or delta information a qc_field is not generated.\n",
    "" ;
		:zeb_platform = "sgp1smosE8.b1" ;
		:history = "created by user dsmgr on machine left at 15-Jun-2004,1:09:38, using $State: ds-zebra-zeblib-4.12-0 $" ;
}
netcdf sgp1smosE9.b1.20040615.000000 {
dimensions:
	time = UNLIMITED ; // (1440 currently)
variables:
	int base_time ;
		base_time:string = "14-Jun-2004,23:02:00 GMT" ;
		base_time:long_name = "Base time in Epoch" ;
		base_time:units = "seconds since 1970-1-1 0:00:00 0:00" ;
	double time_offset(time) ;
		time_offset:long_name = "Time offset from base_time" ;
		time_offset:units = "seconds since 2004-06-14 23:02:00 0:00" ;
	double time(time) ;
		time:long_name = "Time offset from midnight" ;
		time:units = "seconds since 2004-06-15 00:00:00 0:00" ;
	int qc_time(time) ;
		qc_time:long_name = "Results of quality checks on sample time" ;
		qc_time:units = "unitless" ;
		qc_time:description = "The qc_time values are calculated by comparing each sample\n",
    "time with the previous time (i.e. delta_t = t[n] - t[n-1]).\n",
    "If the \'qc_check_prior\' flag is set the first sample time\n",
    "from a new raw file will be compared against the time just\n",
    "previous to it in the stored data. If the \'qc_check_prior\'\n",
    "flag is not set the qc_time value for the first sample time\n",
    "will be set to 0\n",
    "\n",
    "The qc_time bit values are as follows:\n",
    "=========================================================\n",
    "0x0 = delta time is within the specified range\n",
    "0x1 = delta time is equal to 0, duplicate sample times\n",
    "0x2 = delta time is less than the \'delta_t_lower_limit\'\n",
    "0x4 = delta time is greater than the \'delta_t_upper_limit\'\n",
    "\n",
    "" ;
		qc_time:delta_t_lower_limit = 60 ;
		qc_time:delta_t_upper_limit = 60 ;
		qc_time:prior_sample_flag = 1 ;
	float wspd(time) ;
		wspd:long_name = "Wind Speed" ;
		wspd:units = "m/s" ;
		wspd:valid_min = 0.f ;
		wspd:valid_max = 60.f ;
		wspd:resolution = 0.01f ;
		wspd:missing_value = -9999.f ;
		wspd:threshold = "1.00 m/s" ;
		wspd:uncertainty = "+/- 1% for 2.5 to 30 m/s\n",
    "- 0.12 to +0.02 m/s at 2.0 m/s\n",
    "- 0.22 to +0.00 m/s at 1.5 m/s\n",
    "- 0.31 to -0.20 m/s at 1.0 m/s\n",
    "- 0.51 to -0.49 m/s at 0.5 m/s\n",
    "Error included in uncertainty are calibration accuracy,\n",
    "data logger timebase accuracy, and bias by underestimation\n",
    "due to threshold.  The latter assumes normal distibution\n",
    "of winds about the mean with standard deviations ranging\n",
    "between 0.25 and 1.00 m/s." ;
	int qc_wspd(time) ;
		qc_wspd:long_name = "Quality check results on field: Wind Speed" ;
		qc_wspd:units = "unitless" ;
	float wspd_va(time) ;
		wspd_va:long_name = "Wind Speed (vector averaged)" ;
		wspd_va:units = "m/s" ;
		wspd_va:valid_min = 0.f ;
		wspd_va:valid_max = 60.f ;
		wspd_va:resolution = 0.01f ;
		wspd_va:missing_value = -9999.f ;
	int qc_wspd_va(time) ;
		qc_wspd_va:long_name = "Quality check results on field: Wind Speed (vector averaged)" ;
		qc_wspd_va:units = "unitless" ;
	float wdir(time) ;
		wdir:long_name = "Wind Direction" ;
		wdir:units = "deg" ;
		wdir:valid_min = 0.f ;
		wdir:valid_max = 360.f ;
		wdir:resolution = 0.1f ;
		wdir:missing_value = -9999.f ;
		wdir:threshold = "Wind speed </= 1.00 m/s" ;
		wdir:uncertainty = "+/- 5.0 deg for wind speed > 1.0 m/s\n",
    "+/- 180.0 deg for wind speed </= 1.0 m/s\n",
    "Errors included in uncertainty are sensor accuracy,\n",
    "alignment accuracy, and A/D conversion accuracy." ;
	int qc_wdir(time) ;
		qc_wdir:long_name = "Quality check results on field: Wind Direction" ;
		qc_wdir:units = "unitless" ;
	float sd_deg(time) ;
		sd_deg:long_name = "Standard Deviation of wind direction" ;
		sd_deg:units = "deg" ;
		sd_deg:valid_min = 0.f ;
		sd_deg:valid_max = 90.f ;
		sd_deg:resolution = 0.1f ;
		sd_deg:missing_value = -9999.f ;
	int qc_sd_deg(time) ;
		qc_sd_deg:long_name = "Quality check results on field: Standard Deviation of wind direction" ;
		qc_sd_deg:units = "unitless" ;
	float temp(time) ;
		temp:long_name = "Temperature" ;
		temp:units = "C" ;
		temp:valid_min = -40.f ;
		temp:valid_max = 50.f ;
		temp:resolution = 0.01f ;
		temp:missing_value = -9999.f ;
		temp:uncertainty = "+/- 0.45 C for wind speed >/= 6.00 m/s\n",
    "+/- 0.89 C for wind speed = 3.00 m/s\n",
    "+/- 1.46 C for wind speed = 2.00 m/s\n",
    "+/- 3.07 C for wind speed = 1.00 m/s\n",
    "Errors included in uncertainty are radiation error, sensor\n",
    "interchangeability, bridge resistor precision, and polynomial\n",
    "curve fitting.  Radiation error is the largest contributor to\n",
    "the latter uncertainties.  Future algorithm development may\n",
    "reduce these uncertainties." ;
	int qc_temp(time) ;
		qc_temp:long_name = "Quality check results on field: Temperature" ;
		qc_temp:units = "unitless" ;
	float rh(time) ;
		rh:long_name = "Relative Humidity" ;
		rh:units = "%" ;
		rh:valid_min = -2.f ;
		rh:valid_max = 104.f ;
		rh:resolution = 0.1f ;
		rh:missing_value = -9999.f ;
		rh:uncertainty = "+/- 2.06 % RH for 0 to 90 % RH\n",
    "+/- 3.04 % RH for 90 to 100 % RH\n",
    "Errors included in uncertainty are calibration uncertainty,\n",
    "repeatability, temperature dependence, long term (1 yr)\n",
    "stability, and A/D conversion accuracy.  Wind speed dependence\n",
    "and radiation dependence have not been considered and may\n",
    "increase the uncertainty." ;
	int qc_rh(time) ;
		qc_rh:long_name = "Quality check results on field: Relative Humidity" ;
		qc_rh:units = "unitless" ;
	float vap_pres(time) ;
		vap_pres:long_name = "Vapor Pressure" ;
		vap_pres:units = "kPa" ;
		vap_pres:valid_min = 0.f ;
		vap_pres:valid_max = 10.f ;
		vap_pres:resolution = 0.001f ;
		vap_pres:missing_value = -9999.f ;
	int qc_vap_pres(time) ;
		qc_vap_pres:long_name = "Quality check results on field: Vapor Pressure" ;
		qc_vap_pres:units = "unitless" ;
	float bar_pres(time) ;
		bar_pres:long_name = "Barometric Pressure" ;
		bar_pres:units = "kPa" ;
		bar_pres:valid_min = 80.f ;
		bar_pres:valid_max = 110.f ;
		bar_pres:resolution = 0.01f ;
		bar_pres:missing_value = -9999.f ;
		bar_pres:uncertainty = "+/- 0.035 kPa\n",
    "Errors included in uncertainty are linearity, hysteresis,\n",
    "repeatability, calibration uncertainty, temperature dependence,\n",
    "and long-term (1 yr) stability.  Wind speed dependence has not\n",
    "been considered and may increase the uncertainty." ;
	int qc_bar_pres(time) ;
		qc_bar_pres:long_name = "Quality check results on field: Barometric Pressure" ;
		qc_bar_pres:units = "unitless" ;
	float precip(time) ;
		precip:long_name = "Precipitation Total" ;
		precip:units = "mm" ;
		precip:valid_min = 0.f ;
		precip:valid_max = 10.f ;
		precip:resolution = 0.001f ;
		precip:missing_value = -9999.f ;
		precip:uncertainty = "Under normal conditions, uncertainty for\n",
    "rain is +/- 0.254 mm (one bucket).  Uncertainty increases to\n",
    "an unknown value during strong winds or very heavy rains (in\n",
    "excess of 75 mm per hour). The instrument is not considered\n",
    "reliable for snow amounts." ;
	int qc_precip(time) ;
		qc_precip:long_name = "Quality check results on field: Precipitation Total" ;
		qc_precip:units = "unitless" ;
	float lat ;
		lat:long_name = "north latitude" ;
		lat:units = "degrees" ;
		lat:valid_min = -90.f ;
		lat:valid_max = 90.f ;
	float lon ;
		lon:long_name = "east longitude" ;
		lon:units = "degrees" ;
		lon:valid_min = -180.f ;
		lon:valid_max = 180.f ;
	float alt ;
		alt:long_name = "altitude" ;
		alt:units = "meters above Mean Sea Level" ;

// global attributes:
		:ingest_software = " smos_ingest.c,v 7.6 2003/10/02 23:29:29 ermold process-ingest-smos_ingest-7.5-0 $" ;
		:proc_level = "b1" ;
		:input_source = "smos9:/data/collection/sgp/sgpsmosE9.00/1087254120.icm" ;
		:site_id = "sgp" ;
		:facility_id = "E9 : Ashton" ;
		:sample_int = "bar press - 1 minute\n",
    "all others 1 second" ;
		:averaging_int = "1 minute" ;
		:serial_number = "SMOS1" ;
		:comment = "The time assigned to each data point indicates the end of any\n",
    "period of averaging of the geophysical data.\n",
    "\n",
    "The snow depth sensors were removed from service in August 2002.\n",
    "\n",
    "Altitude is in meters above Mean Sea Level." ;
		:resolution_description = "The resolution field attributes refer to the number of significant\n",
    "digits relative to the decimal point that should be used in\n",
    "calculations.  Using fewer digits might result in greater uncertainty;\n",
    "using a larger number of digits should have no effect and thus is\n",
    "unnecessary.  However, analyses based on differences in values with\n",
    "a larger number of significant digits than indicated could lead to\n",
    "erroneous results or misleading scientific conclusions.\n",
    "\n",
    "resolution for lat= 0.001\n",
    "resolution for lon = 0.001\n",
    "resolution for alt = 1" ;
		:sensor_location = "Sensors heights (above base \"alt\"):\n",
    "  10m for winds\n",
    "  2m for temp, RH, and vap pres\n",
    "  1m for bar pres" ;
		:qc_method = "Standard Mentor QC" ;
		:Mentor_QC_Field_Information = "For each qc_<field> interpret the values as follows:\n",
    "\n",
    "Basic mentor QC checks (bit values):\n",
    "==========================================\n",
    "0x0 = value is within the specified range\n",
    "0x1 = value is equal to \'missing_value\'\n",
    "0x2 = value is less than the \'valid_min\'\n",
    "0x4 = value is greater than the \'valid_max\'\n",
    "0x8 = value failed the \'valid_delta\' check\n",
    "\n",
    "If the value is a \'missing_value\' no min, max, or delta checks are performed.\n",
    "\n",
    "The delta checks are done by comparing each data value to the one just\n",
    "prior to it in time. If a previous data value does not exist or is a\n",
    "\'missing_value\' the delta check will not be performed.\n",
    "\n",
    "Note that the delta computation for multi-dimensioned data compares the\n",
    "absolute value between points in the same spatial location to the previous\n",
    "point in time.\n",
    "\n",
    "If the associated non-QC field does not contain any mentor-specified minimum,\n",
    "maximum, or delta information a qc_field is not generated.\n",
    "" ;
		:zeb_platform = "sgp1smosE9.b1" ;
		:history = "created by user dsmgr on machine left at 15-Jun-2004,1:10:38, using $State: ds-zebra-zeblib-4.12-0 $" ;
}
