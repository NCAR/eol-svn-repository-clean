netcdf nsamettwr4hC1.b1.20051228.000000 {
dimensions:
	time = UNLIMITED ; // (1440 currently)
variables:
	int base_time ;
		base_time:string = "28-Dec-2005,0:00:00 GMT" ;
		base_time:long_name = "Base time in Epoch" ;
		base_time:units = "seconds since 1970-1-1 0:00:00 0:00" ;
	double time_offset(time) ;
		time_offset:long_name = "Time offset from base_time" ;
		time_offset:units = "seconds since 2005-12-28 00:00:00 0:00" ;
	double time(time) ;
		time:long_name = "Time offset from midnight" ;
		time:units = "seconds since 2005-12-28 00:00:00 0:00" ;
	int qc_time(time) ;
		qc_time:long_name = "Results of quality checks on sample time" ;
		qc_time:units = "unitless" ;
		qc_time:description = "The qc_time values are calculated by comparing each sample\n",
			"time with the previous time (i.e. delta_t = t[n] - t[n-1]).\n",
			"If the \'qc_check_prior\' flag is set the first sample time\n",
			"from a new raw file will be compared against the time just\n",
			"previous to it in the stored data. If the \'qc_check_prior\'\n",
			"flag is not set the qc_time value for the first sample time\n",
			"will be set to 0\n",
			"\n",
			"The qc_time bit values are as follows:\n",
			"=========================================================\n",
			"0x0 = delta time is within the specified range\n",
			"0x1 = delta time is equal to 0, duplicate sample times\n",
			"0x2 = delta time is less than the \'delta_t_lower_limit\'\n",
			"0x4 = delta time is greater than the \'delta_t_upper_limit\'\n",
			"\n",
			"" ;
		qc_time:delta_t_lower_limit = 60 ;
		qc_time:delta_t_upper_limit = 60 ;
		qc_time:prior_sample_flag = 1 ;
	float WS2M_S_WVT(time) ;
		WS2M_S_WVT:long_name = "2m Arithmetic Mean Wind Speed" ;
		WS2M_S_WVT:units = "m/s" ;
		WS2M_S_WVT:valid_min = 0.f ;
		WS2M_S_WVT:valid_max = 100.f ;
		WS2M_S_WVT:valid_delta = 20.f ;
		WS2M_S_WVT:resolution = 0.001f ;
		WS2M_S_WVT:missing_value = -9999.f ;
		WS2M_S_WVT:threshold = "0.5" ;
		WS2M_S_WVT:uncertainty = "+/- 0.17" ;
	int qc_WS2M_S_WVT(time) ;
		qc_WS2M_S_WVT:long_name = "Quality check results on field: 2m Arithmetic Mean Wind Speed" ;
		qc_WS2M_S_WVT:units = "unitless" ;
	float WS2M_U_WVT(time) ;
		WS2M_U_WVT:long_name = "2m Vector Averaged Wind Speed" ;
		WS2M_U_WVT:units = "m/s" ;
		WS2M_U_WVT:valid_min = 0.f ;
		WS2M_U_WVT:valid_max = 100.f ;
		WS2M_U_WVT:valid_delta = 20.f ;
		WS2M_U_WVT:missing_value = -9999.f ;
	int qc_WS2M_U_WVT(time) ;
		qc_WS2M_U_WVT:long_name = "Quality check results on field: 2m Vector Averaged Wind Speed" ;
		qc_WS2M_U_WVT:units = "unitless" ;
	float WD2M_DU_WVT(time) ;
		WD2M_DU_WVT:long_name = "2m Vector Averaged Wind Direction" ;
		WD2M_DU_WVT:units = "deg" ;
		WD2M_DU_WVT:valid_min = 0.f ;
		WD2M_DU_WVT:valid_max = 360.f ;
		WD2M_DU_WVT:resolution = 0.001f ;
		WD2M_DU_WVT:missing_value = -9999.f ;
		WD2M_DU_WVT:threshold = "0.4" ;
		WD2M_DU_WVT:uncertainty = "+/- 5" ;
	int qc_WD2M_DU_WVT(time) ;
		qc_WD2M_DU_WVT:long_name = "Quality check results on field: 2m Vector Averaged Wind Direction" ;
		qc_WD2M_DU_WVT:units = "unitless" ;
	float WD2M_SDU_WVT(time) ;
		WD2M_SDU_WVT:long_name = "Standard Deviation of 2m Vector Averaged Wind Direction" ;
		WD2M_SDU_WVT:units = "deg" ;
		WD2M_SDU_WVT:missing_value = -9999.f ;
	float WS10M_S_WVT(time) ;
		WS10M_S_WVT:long_name = "10m Arithmetic Mean Wind Speed" ;
		WS10M_S_WVT:units = "m/s" ;
		WS10M_S_WVT:valid_min = 0.f ;
		WS10M_S_WVT:valid_max = 100.f ;
		WS10M_S_WVT:valid_delta = 20.f ;
		WS10M_S_WVT:resolution = 0.001f ;
		WS10M_S_WVT:missing_value = -9999.f ;
		WS10M_S_WVT:threshold = "0.5" ;
		WS10M_S_WVT:uncertainty = "+/- 0.17" ;
	int qc_WS10M_S_WVT(time) ;
		qc_WS10M_S_WVT:long_name = "Quality check results on field: 10m Arithmetic Mean Wind Speed" ;
		qc_WS10M_S_WVT:units = "unitless" ;
	float WS10M_U_WVT(time) ;
		WS10M_U_WVT:long_name = "10m Vector Averaged Wind Speed" ;
		WS10M_U_WVT:units = "m/s" ;
		WS10M_U_WVT:valid_min = 0.f ;
		WS10M_U_WVT:valid_max = 100.f ;
		WS10M_U_WVT:valid_delta = 20.f ;
		WS10M_U_WVT:missing_value = -9999.f ;
	int qc_WS10M_U_WVT(time) ;
		qc_WS10M_U_WVT:long_name = "Quality check results on field: 10m Vector Averaged Wind Speed" ;
		qc_WS10M_U_WVT:units = "unitless" ;
	float WD10M_DU_WVT(time) ;
		WD10M_DU_WVT:long_name = "10m Vector Averaged Wind Direction" ;
		WD10M_DU_WVT:units = "deg" ;
		WD10M_DU_WVT:valid_min = 0.f ;
		WD10M_DU_WVT:valid_max = 360.f ;
		WD10M_DU_WVT:resolution = 0.001f ;
		WD10M_DU_WVT:missing_value = -9999.f ;
		WD10M_DU_WVT:threshold = "0.4" ;
		WD10M_DU_WVT:uncertainty = "+/- 5" ;
	int qc_WD10M_DU_WVT(time) ;
		qc_WD10M_DU_WVT:long_name = "Quality check results on field: 10m Vector Averaged Wind Direction" ;
		qc_WD10M_DU_WVT:units = "unitless" ;
	float WD10M_SDU_WVT(time) ;
		WD10M_SDU_WVT:long_name = "Standard Deviation of 10m Vector Averaged Wind Direction" ;
		WD10M_SDU_WVT:units = "deg" ;
		WD10M_SDU_WVT:missing_value = -9999.f ;
	float WS20M_S_WVT(time) ;
		WS20M_S_WVT:long_name = "20m Arithmetic Mean Wind Speed" ;
		WS20M_S_WVT:units = "m/s" ;
		WS20M_S_WVT:valid_min = 0.f ;
		WS20M_S_WVT:valid_max = 100.f ;
		WS20M_S_WVT:valid_delta = 20.f ;
		WS20M_S_WVT:resolution = 0.001f ;
		WS20M_S_WVT:missing_value = -9999.f ;
		WS20M_S_WVT:threshold = "0.5" ;
		WS20M_S_WVT:uncertainty = "+/- 0.17" ;
	int qc_WS20M_S_WVT(time) ;
		qc_WS20M_S_WVT:long_name = "Quality check results on field: 20m Arithmetic Mean Wind Speed" ;
		qc_WS20M_S_WVT:units = "unitless" ;
	float WS20M_U_WVT(time) ;
		WS20M_U_WVT:long_name = "20m Vector Averaged Wind Speed" ;
		WS20M_U_WVT:units = "m/s" ;
		WS20M_U_WVT:valid_min = 0.f ;
		WS20M_U_WVT:valid_max = 100.f ;
		WS20M_U_WVT:valid_delta = 20.f ;
		WS20M_U_WVT:missing_value = -9999.f ;
	int qc_WS20M_U_WVT(time) ;
		qc_WS20M_U_WVT:long_name = "Quality check results on field: 20m Vector Averaged Wind Speed" ;
		qc_WS20M_U_WVT:units = "unitless" ;
	float WD20M_DU_WVT(time) ;
		WD20M_DU_WVT:long_name = "20m Vector Averaged Wind Direction" ;
		WD20M_DU_WVT:units = "deg" ;
		WD20M_DU_WVT:valid_min = 0.f ;
		WD20M_DU_WVT:valid_max = 360.f ;
		WD20M_DU_WVT:resolution = 0.001f ;
		WD20M_DU_WVT:missing_value = -9999.f ;
		WD20M_DU_WVT:threshold = "0.4" ;
		WD20M_DU_WVT:uncertainty = "+/- 5" ;
	int qc_WD20M_DU_WVT(time) ;
		qc_WD20M_DU_WVT:long_name = "Quality check results on field: 20m Vector Averaged Wind Direction" ;
		qc_WD20M_DU_WVT:units = "unitless" ;
	float WD20M_SDU_WVT(time) ;
		WD20M_SDU_WVT:long_name = "Standard Deviation of 20m Vector Averaged Wind Direction" ;
		WD20M_SDU_WVT:units = "deg" ;
		WD20M_SDU_WVT:missing_value = -9999.f ;
	float WS40M_S_WVT(time) ;
		WS40M_S_WVT:long_name = "40m Arithmetic Mean Wind Speed" ;
		WS40M_S_WVT:units = "m/s" ;
		WS40M_S_WVT:valid_min = 0.f ;
		WS40M_S_WVT:valid_max = 100.f ;
		WS40M_S_WVT:valid_delta = 20.f ;
		WS40M_S_WVT:resolution = 0.001f ;
		WS40M_S_WVT:missing_value = -9999.f ;
		WS40M_S_WVT:threshold = "0.5" ;
		WS40M_S_WVT:uncertainty = "+/- 0.17" ;
	int qc_WS40M_S_WVT(time) ;
		qc_WS40M_S_WVT:long_name = "Quality check results on field: 40m Arithmetic Mean Wind Speed" ;
		qc_WS40M_S_WVT:units = "unitless" ;
	float WS40M_U_WVT(time) ;
		WS40M_U_WVT:long_name = "40m Vector Averaged Wind Speed" ;
		WS40M_U_WVT:units = "m/s" ;
		WS40M_U_WVT:valid_min = 0.f ;
		WS40M_U_WVT:valid_max = 100.f ;
		WS40M_U_WVT:valid_delta = 20.f ;
		WS40M_U_WVT:missing_value = -9999.f ;
	int qc_WS40M_U_WVT(time) ;
		qc_WS40M_U_WVT:long_name = "Quality check results on field: 40m Vector Averaged Wind Speed" ;
		qc_WS40M_U_WVT:units = "unitless" ;
	float WD40M_DU_WVT(time) ;
		WD40M_DU_WVT:long_name = "40m Vector Averaged Wind Direction" ;
		WD40M_DU_WVT:units = "deg" ;
		WD40M_DU_WVT:valid_min = 0.f ;
		WD40M_DU_WVT:valid_max = 360.f ;
		WD40M_DU_WVT:resolution = 0.001f ;
		WD40M_DU_WVT:missing_value = -9999.f ;
		WD40M_DU_WVT:threshold = "0.4" ;
		WD40M_DU_WVT:uncertainty = "+/- 5" ;
	int qc_WD40M_DU_WVT(time) ;
		qc_WD40M_DU_WVT:long_name = "Quality check results on field: 40m Vector Averaged Wind Direction" ;
		qc_WD40M_DU_WVT:units = "unitless" ;
	float WD40M_SDU_WVT(time) ;
		WD40M_SDU_WVT:long_name = "Standard Deviation of 40m Vector Averaged Wind Direction" ;
		WD40M_SDU_WVT:units = "deg" ;
		WD40M_SDU_WVT:missing_value = -9999.f ;
	float SonicWS_S_WVT(time) ;
		SonicWS_S_WVT:long_name = "Sonic Arithmetic Mean Wind Speed" ;
		SonicWS_S_WVT:units = "m/s" ;
		SonicWS_S_WVT:valid_min = 0.f ;
		SonicWS_S_WVT:valid_max = 100.f ;
		SonicWS_S_WVT:valid_delta = 20.f ;
		SonicWS_S_WVT:resolution = 0.001f ;
		SonicWS_S_WVT:missing_value = -9999.f ;
		SonicWS_S_WVT:threshold = "0.0" ;
		SonicWS_S_WVT:uncertainty = "+/- 0.02" ;
	int qc_SonicWS_S_WVT(time) ;
		qc_SonicWS_S_WVT:long_name = "Quality check results on field: Sonic Arithmetic Mean Wind Speed" ;
		qc_SonicWS_S_WVT:units = "unitless" ;
	float SonicWS_U_WVT(time) ;
		SonicWS_U_WVT:long_name = "Sonic Vector Averaged Wind Speed" ;
		SonicWS_U_WVT:units = "m/s" ;
		SonicWS_U_WVT:valid_min = 0.f ;
		SonicWS_U_WVT:valid_max = 100.f ;
		SonicWS_U_WVT:valid_delta = 20.f ;
		SonicWS_U_WVT:missing_value = -9999.f ;
	int qc_SonicWS_U_WVT(time) ;
		qc_SonicWS_U_WVT:long_name = "Quality check results on field: Sonic Vector Averaged Wind Speed" ;
		qc_SonicWS_U_WVT:units = "unitless" ;
	float SonicWD_DU_WVT(time) ;
		SonicWD_DU_WVT:long_name = "Sonic Vector Averaged Wind Direction" ;
		SonicWD_DU_WVT:units = "deg" ;
		SonicWD_DU_WVT:valid_min = 0.f ;
		SonicWD_DU_WVT:valid_max = 360.f ;
		SonicWD_DU_WVT:resolution = 0.001f ;
		SonicWD_DU_WVT:missing_value = -9999.f ;
		SonicWD_DU_WVT:threshold = "0.1" ;
		SonicWD_DU_WVT:uncertainty = "+/- 1" ;
	int qc_SonicWD_DU_WVT(time) ;
		qc_SonicWD_DU_WVT:long_name = "Quality check results on field: Sonic Vector Averaged Wind Direction" ;
		qc_SonicWD_DU_WVT:units = "unitless" ;
	float SonicWD_SDU_WVT(time) ;
		SonicWD_SDU_WVT:long_name = "Standard Deviation of Sonic Vector Averaged Wind Direction" ;
		SonicWD_SDU_WVT:units = "deg" ;
		SonicWD_SDU_WVT:missing_value = -9999.f ;
	float T2M_AVG(time) ;
		T2M_AVG:long_name = "2m Average Temperature" ;
		T2M_AVG:units = "C" ;
		T2M_AVG:valid_min = -60.f ;
		T2M_AVG:valid_max = 30.f ;
		T2M_AVG:valid_delta = 10.f ;
		T2M_AVG:resolution = 0.001f ;
		T2M_AVG:missing_value = -9999.f ;
		T2M_AVG:uncertainty = "+/- 0.57" ;
	int qc_T2M_AVG(time) ;
		qc_T2M_AVG:long_name = "Quality check results on field: 2m Average Temperature" ;
		qc_T2M_AVG:units = "unitless" ;
	float RH2M_AVG(time) ;
		RH2M_AVG:long_name = "2m Average Relative Humidity" ;
		RH2M_AVG:units = "%" ;
		RH2M_AVG:valid_min = -2.f ;
		RH2M_AVG:valid_max = 104.f ;
		RH2M_AVG:valid_delta = 30.f ;
		RH2M_AVG:resolution = 0.01f ;
		RH2M_AVG:missing_value = -9999.f ;
		RH2M_AVG:uncertainty = "+/- 2 %RH 0 to 90 %RH, +/- 3 %RH 90 to 100" ;
	int qc_RH2M_AVG(time) ;
		qc_RH2M_AVG:long_name = "Quality check results on field: 2m Average Relative Humidity" ;
		qc_RH2M_AVG:units = "unitless" ;
	float DP2M_AVG(time) ;
		DP2M_AVG:long_name = "2m Average Calculated Dew Point" ;
		DP2M_AVG:units = "C" ;
		DP2M_AVG:valid_min = -60.f ;
		DP2M_AVG:valid_max = 30.f ;
		DP2M_AVG:valid_delta = 10.f ;
		DP2M_AVG:missing_value = -9999.f ;
	int qc_DP2M_AVG(time) ;
		qc_DP2M_AVG:long_name = "Quality check results on field: 2m Average Calculated Dew Point" ;
		qc_DP2M_AVG:units = "unitless" ;
	float VP2M_AVG(time) ;
		VP2M_AVG:long_name = "2m Average Calculated Vapor Pressure" ;
		VP2M_AVG:units = "kPa" ;
		VP2M_AVG:valid_min = 0.001f ;
		VP2M_AVG:valid_max = 4.3f ;
		VP2M_AVG:valid_delta = 1.f ;
		VP2M_AVG:missing_value = -9999.f ;
	int qc_VP2M_AVG(time) ;
		qc_VP2M_AVG:long_name = "Quality check results on field: 2m Average Calculated Vapor Pressure" ;
		qc_VP2M_AVG:units = "unitless" ;
	float Volt2M_AVG(time) ;
		Volt2M_AVG:long_name = "2m Average QLI Input Voltage" ;
		Volt2M_AVG:units = "V" ;
		Volt2M_AVG:missing_value = -9999.f ;
	float RefT2M_AVG(time) ;
		RefT2M_AVG:long_name = "2m Average QLI Reference Temperature" ;
		RefT2M_AVG:units = "C" ;
		RefT2M_AVG:missing_value = -9999.f ;
	float T10M_AVG(time) ;
		T10M_AVG:long_name = "10m Average Temperature" ;
		T10M_AVG:units = "C" ;
		T10M_AVG:valid_min = -60.f ;
		T10M_AVG:valid_max = 30.f ;
		T10M_AVG:valid_delta = 10.f ;
		T10M_AVG:resolution = 0.001f ;
		T10M_AVG:missing_value = -9999.f ;
		T10M_AVG:uncertainty = "+/- 0.57" ;
	int qc_T10M_AVG(time) ;
		qc_T10M_AVG:long_name = "Quality check results on field: 10m Average Temperature" ;
		qc_T10M_AVG:units = "unitless" ;
	float RH10M_AVG(time) ;
		RH10M_AVG:long_name = "10m Average Relative Humidity" ;
		RH10M_AVG:units = "%" ;
		RH10M_AVG:valid_min = -2.f ;
		RH10M_AVG:valid_max = 104.f ;
		RH10M_AVG:valid_delta = 30.f ;
		RH10M_AVG:resolution = 0.01f ;
		RH10M_AVG:missing_value = -9999.f ;
		RH10M_AVG:uncertainty = "+/- 2 %RH 0 to 90 %RH, +/- 3 %RH 90 to 100" ;
	int qc_RH10M_AVG(time) ;
		qc_RH10M_AVG:long_name = "Quality check results on field: 10m Average Relative Humidity" ;
		qc_RH10M_AVG:units = "unitless" ;
	float DP10M_AVG(time) ;
		DP10M_AVG:long_name = "10m Average Calculated Dew Point" ;
		DP10M_AVG:units = "C" ;
		DP10M_AVG:valid_min = -60.f ;
		DP10M_AVG:valid_max = 30.f ;
		DP10M_AVG:valid_delta = 10.f ;
		DP10M_AVG:missing_value = -9999.f ;
	int qc_DP10M_AVG(time) ;
		qc_DP10M_AVG:long_name = "Quality check results on field: 10m Average Calculated Dew Point" ;
		qc_DP10M_AVG:units = "unitless" ;
	float VP10M_AVG(time) ;
		VP10M_AVG:long_name = "10m Average Calculated Vapor Pressure" ;
		VP10M_AVG:units = "kPa" ;
		VP10M_AVG:valid_min = 0.001f ;
		VP10M_AVG:valid_max = 4.3f ;
		VP10M_AVG:valid_delta = 1.f ;
		VP10M_AVG:missing_value = -9999.f ;
	int qc_VP10M_AVG(time) ;
		qc_VP10M_AVG:long_name = "Quality check results on field: 10m Average Calculated Vapor Pressure" ;
		qc_VP10M_AVG:units = "unitless" ;
	float Volt10M_AVG(time) ;
		Volt10M_AVG:long_name = "10m Average QLI Input Voltage" ;
		Volt10M_AVG:units = "V" ;
		Volt10M_AVG:missing_value = -9999.f ;
	float RefT10m_AVG(time) ;
		RefT10m_AVG:long_name = "10m Average QLI Reference Temperature" ;
		RefT10m_AVG:units = "C" ;
		RefT10m_AVG:missing_value = -9999.f ;
	float T20M_AVG(time) ;
		T20M_AVG:long_name = "20m Average Temperature" ;
		T20M_AVG:units = "C" ;
		T20M_AVG:valid_min = -60.f ;
		T20M_AVG:valid_max = 30.f ;
		T20M_AVG:valid_delta = 10.f ;
		T20M_AVG:resolution = 0.001f ;
		T20M_AVG:missing_value = -9999.f ;
		T20M_AVG:uncertainty = "+/- 0.57" ;
	int qc_T20M_AVG(time) ;
		qc_T20M_AVG:long_name = "Quality check results on field: 20m Average Temperature" ;
		qc_T20M_AVG:units = "unitless" ;
	float RH20M_AVG(time) ;
		RH20M_AVG:long_name = "20m Average Relative Humidity" ;
		RH20M_AVG:units = "%" ;
		RH20M_AVG:valid_min = -2.f ;
		RH20M_AVG:valid_max = 104.f ;
		RH20M_AVG:valid_delta = 30.f ;
		RH20M_AVG:resolution = 0.01f ;
		RH20M_AVG:missing_value = -9999.f ;
		RH20M_AVG:uncertainty = "+/- 2 %RH 0 to 90 %RH, +/- 3 %RH 90 to 100" ;
	int qc_RH20M_AVG(time) ;
		qc_RH20M_AVG:long_name = "Quality check results on field: 20m Average Relative Humidity" ;
		qc_RH20M_AVG:units = "unitless" ;
	float DP20M_AVG(time) ;
		DP20M_AVG:long_name = "20m Average Calculated Dew Point" ;
		DP20M_AVG:units = "C" ;
		DP20M_AVG:valid_min = -60.f ;
		DP20M_AVG:valid_max = 30.f ;
		DP20M_AVG:valid_delta = 10.f ;
		DP20M_AVG:missing_value = -9999.f ;
	int qc_DP20M_AVG(time) ;
		qc_DP20M_AVG:long_name = "Quality check results on field: 20m Average Calculated Dew Point" ;
		qc_DP20M_AVG:units = "unitless" ;
	float VP20M_AVG(time) ;
		VP20M_AVG:long_name = "20m Average Calculated Vapor Pressure" ;
		VP20M_AVG:units = "kPa" ;
		VP20M_AVG:valid_min = 0.001f ;
		VP20M_AVG:valid_max = 4.3f ;
		VP20M_AVG:valid_delta = 1.f ;
		VP20M_AVG:missing_value = -9999.f ;
	int qc_VP20M_AVG(time) ;
		qc_VP20M_AVG:long_name = "Quality check results on field: 20m Average Calculated Vapor Pressure" ;
		qc_VP20M_AVG:units = "unitless" ;
	float Volt20M_AVG(time) ;
		Volt20M_AVG:long_name = "20m Average QLI Input Voltage" ;
		Volt20M_AVG:units = "V" ;
		Volt20M_AVG:missing_value = -9999.f ;
	float RefT20M_AVG(time) ;
		RefT20M_AVG:long_name = "20m Average QLI Reference Temperature" ;
		RefT20M_AVG:units = "C" ;
		RefT20M_AVG:missing_value = -9999.f ;
	float T40M_AVG(time) ;
		T40M_AVG:long_name = "40m Average Temperature" ;
		T40M_AVG:units = "C" ;
		T40M_AVG:valid_min = -60.f ;
		T40M_AVG:valid_max = 30.f ;
		T40M_AVG:valid_delta = 10.f ;
		T40M_AVG:resolution = 0.001f ;
		T40M_AVG:missing_value = -9999.f ;
		T40M_AVG:uncertainty = "+/- 0.57" ;
	int qc_T40M_AVG(time) ;
		qc_T40M_AVG:long_name = "Quality check results on field: 40m Average Temperature" ;
		qc_T40M_AVG:units = "unitless" ;
	float RH40M_AVG(time) ;
		RH40M_AVG:long_name = "40m Average Relative Humidity" ;
		RH40M_AVG:units = "%" ;
		RH40M_AVG:valid_min = -2.f ;
		RH40M_AVG:valid_max = 104.f ;
		RH40M_AVG:valid_delta = 30.f ;
		RH40M_AVG:resolution = 0.01f ;
		RH40M_AVG:missing_value = -9999.f ;
		RH40M_AVG:uncertainty = "+/- 2 %RH 0 to 90 %RH, +/- 3 %RH 90 to 100" ;
	int qc_RH40M_AVG(time) ;
		qc_RH40M_AVG:long_name = "Quality check results on field: 40m Average Relative Humidity" ;
		qc_RH40M_AVG:units = "unitless" ;
	float DP40M_AVG(time) ;
		DP40M_AVG:long_name = "40m Average Calculated Dew Point" ;
		DP40M_AVG:units = "C" ;
		DP40M_AVG:valid_min = -60.f ;
		DP40M_AVG:valid_max = 30.f ;
		DP40M_AVG:valid_delta = 10.f ;
		DP40M_AVG:missing_value = -9999.f ;
	int qc_DP40M_AVG(time) ;
		qc_DP40M_AVG:long_name = "Quality check results on field: 40m Average Calculated Dew Point" ;
		qc_DP40M_AVG:units = "unitless" ;
	float VP40M_AVG(time) ;
		VP40M_AVG:long_name = "40m Average Calculated Vapor Pressure" ;
		VP40M_AVG:units = "kPa" ;
		VP40M_AVG:valid_min = 0.001f ;
		VP40M_AVG:valid_max = 4.3f ;
		VP40M_AVG:valid_delta = 1.f ;
		VP40M_AVG:missing_value = -9999.f ;
	int qc_VP40M_AVG(time) ;
		qc_VP40M_AVG:long_name = "Quality check results on field: 40m Average Calculated Vapor Pressure" ;
		qc_VP40M_AVG:units = "unitless" ;
	float Volt40M_AVG(time) ;
		Volt40M_AVG:long_name = "40m Average QLI Reference Voltage" ;
		Volt40M_AVG:units = "V" ;
		Volt40M_AVG:missing_value = -9999.f ;
	float RefT40M_AVG(time) ;
		RefT40M_AVG:long_name = "40m Average QLI Reference Temperature" ;
		RefT40M_AVG:units = "C" ;
		RefT40M_AVG:missing_value = -9999.f ;
	float AtmPress(time) ;
		AtmPress:long_name = "Atmospheric Pressure" ;
		AtmPress:units = "hPa" ;
		AtmPress:valid_min = 800.f ;
		AtmPress:valid_max = 1100.f ;
		AtmPress:valid_delta = 10.f ;
		AtmPress:resolution = 0.01f ;
		AtmPress:missing_value = -9999.f ;
		AtmPress:uncertainty = "+/- 0.35" ;
	int qc_AtmPress(time) ;
		qc_AtmPress:long_name = "Quality check results on field: Atmospheric Pressure" ;
		qc_AtmPress:units = "unitless" ;
	int PWSAlarm(time) ;
		PWSAlarm:long_name = "Present Weather Sensor Alarm" ;
		PWSAlarm:units = "unitless" ;
		PWSAlarm:missing_value = -9999 ;
	int AvgVis1mi(time) ;
		AvgVis1mi:long_name = "1 minute Average Visibility" ;
		AvgVis1mi:units = "m" ;
		AvgVis1mi:valid_min = 0 ;
		AvgVis1mi:valid_max = 50000 ;
		AvgVis1mi:resolution = 1 ;
		AvgVis1mi:missing_value = -9999 ;
		AvgVis1mi:uncertainty = "+/- 10%, 10m to 10km\\; +/- 20%, 10km to 50km" ;
	int qc_AvgVis1mi(time) ;
		qc_AvgVis1mi:long_name = "Quality check results on field: 1 minute Average Visibility" ;
		qc_AvgVis1mi:units = "unitless" ;
	int AvgVis10m(time) ;
		AvgVis10m:long_name = "10 minute Average Visibility" ;
		AvgVis10m:units = "m" ;
		AvgVis10m:valid_min = 0 ;
		AvgVis10m:valid_max = 50000 ;
		AvgVis10m:resolution = 1 ;
		AvgVis10m:missing_value = -9999 ;
		AvgVis10m:uncertainty = "+/- 10%, 10m to 10km\\; +/- 20%, 10km to 50km" ;
	int qc_AvgVis10m(time) ;
		qc_AvgVis10m:long_name = "Quality check results on field: 10 minute Average Visibility" ;
		qc_AvgVis10m:units = "unitless" ;
	int InstPwCod(time) ;
		InstPwCod:long_name = "Instant Present Weather Code" ;
		InstPwCod:units = "unitless" ;
		InstPwCod:valid_min = 0 ;
		InstPwCod:valid_max = 99 ;
		InstPwCod:missing_value = -9999 ;
	int qc_InstPwCod(time) ;
		qc_InstPwCod:long_name = "Quality check results on field: Instant Present Weather Code" ;
		qc_InstPwCod:units = "unitless" ;
	int PwCod15mi(time) ;
		PwCod15mi:long_name = "15 minute Present Weather Code" ;
		PwCod15mi:units = "unitless" ;
		PwCod15mi:valid_min = 0 ;
		PwCod15mi:valid_max = 99 ;
		PwCod15mi:missing_value = -9999 ;
	int qc_PwCod15mi(time) ;
		qc_PwCod15mi:long_name = "Quality check results on field: 15 minute Present Weather Code" ;
		qc_PwCod15mi:units = "unitless" ;
	int PwCod1hr(time) ;
		PwCod1hr:long_name = "1 hour Present Weather Code" ;
		PwCod1hr:units = "unitless" ;
		PwCod1hr:valid_min = 0 ;
		PwCod1hr:valid_max = 99 ;
		PwCod1hr:missing_value = -9999 ;
	int qc_PwCod1hr(time) ;
		qc_PwCod1hr:long_name = "Quality check results on field: 1 hour Present Weather Code" ;
		qc_PwCod1hr:units = "unitless" ;
	float PcpRate(time) ;
		PcpRate:long_name = "Precipitation Rate" ;
		PcpRate:units = "mm/hr" ;
		PcpRate:valid_min = 0.f ;
		PcpRate:valid_max = 999.99f ;
		PcpRate:valid_delta = 100.f ;
		PcpRate:resolution = 0.01f ;
		PcpRate:missing_value = -9999.f ;
		PcpRate:uncertainty = "+/- 30%" ;
	int qc_PcpRate(time) ;
		qc_PcpRate:long_name = "Quality check results on field: Precipitation Rate" ;
		qc_PcpRate:units = "unitless" ;
	float CumH2O(time) ;
		CumH2O:long_name = "Cumulative Water Sum" ;
		CumH2O:units = "mm" ;
		CumH2O:valid_min = 0.f ;
		CumH2O:valid_max = 99.99f ;
		CumH2O:valid_delta = 50.f ;
		CumH2O:resolution = 0.01f ;
		CumH2O:missing_value = -9999.f ;
	int qc_CumH2O(time) ;
		qc_CumH2O:long_name = "Quality check results on field: Cumulative Water Sum" ;
		qc_CumH2O:units = "unitless" ;
	float CumSnow(time) ;
		CumSnow:long_name = "Cumulative Snow Sum" ;
		CumSnow:units = "mm" ;
		CumSnow:valid_min = 0.f ;
		CumSnow:valid_max = 999.f ;
		CumSnow:valid_delta = 100.f ;
		CumSnow:resolution = 1.f ;
		CumSnow:missing_value = -9999.f ;
	int qc_CumSnow(time) ;
		qc_CumSnow:long_name = "Quality check results on field: Cumulative Snow Sum" ;
		qc_CumSnow:units = "unitless" ;
	float CMHTemp(time) ;
		CMHTemp:long_name = "Chilled Mirror Temperature" ;
		CMHTemp:units = "C" ;
		CMHTemp:valid_min = -60.f ;
		CMHTemp:valid_max = 30.f ;
		CMHTemp:valid_delta = 10.f ;
		CMHTemp:missing_value = -9999.f ;
	int qc_CMHTemp(time) ;
		qc_CMHTemp:long_name = "Quality check results on field: Chilled Mirror Temperature" ;
		qc_CMHTemp:units = "unitless" ;
	float CMHDP(time) ;
		CMHDP:long_name = "Chilled Mirror Dew Point" ;
		CMHDP:units = "C" ;
		CMHDP:valid_min = -60.f ;
		CMHDP:valid_max = 30.f ;
		CMHDP:valid_delta = 10.f ;
		CMHDP:missing_value = -9999.f ;
	int qc_CMHDP(time) ;
		qc_CMHDP:long_name = "Quality check results on field: Chilled Mirror Dew Point" ;
		qc_CMHDP:units = "unitless" ;
	float SatVPCMH(time) ;
		SatVPCMH:long_name = "Chilled Mirror Calculated Saturation Vapor Pressure" ;
		SatVPCMH:units = "kPa" ;
		SatVPCMH:valid_min = 0.001f ;
		SatVPCMH:valid_max = 4.3f ;
		SatVPCMH:valid_delta = 1.f ;
		SatVPCMH:missing_value = -9999.f ;
	int qc_SatVPCMH(time) ;
		qc_SatVPCMH:long_name = "Quality check results on field: Chilled Mirror Calculated Saturation Vapor Pressure" ;
		qc_SatVPCMH:units = "unitless" ;
	float VPCMH(time) ;
		VPCMH:long_name = "Chilled Mirror Calculated Vapor Pressure" ;
		VPCMH:units = "kPa" ;
		VPCMH:valid_min = 0.001f ;
		VPCMH:valid_max = 4.3f ;
		VPCMH:valid_delta = 1.f ;
		VPCMH:missing_value = -9999.f ;
	int qc_VPCMH(time) ;
		qc_VPCMH:long_name = "Quality check results on field: Chilled Mirror Calculated Vapor Pressure" ;
		qc_VPCMH:units = "unitless" ;
	float CMHRH(time) ;
		CMHRH:long_name = "Chilled Mirror Calculated Relative Humidity" ;
		CMHRH:units = "%" ;
		CMHRH:valid_min = 0.f ;
		CMHRH:valid_max = 101.f ;
		CMHRH:valid_delta = 30.f ;
		CMHRH:missing_value = -9999.f ;
	int qc_CMHRH(time) ;
		qc_CMHRH:long_name = "Quality check results on field: Chilled Mirror Calculated Relative Humidity" ;
		qc_CMHRH:units = "unitless" ;
	float T2M_STD(time) ;
		T2M_STD:long_name = "Standard Deviation of 2m Temperature" ;
		T2M_STD:units = "C" ;
		T2M_STD:missing_value = -9999.f ;
	float RH2M_STD(time) ;
		RH2M_STD:long_name = "Standard Deviation of 2m Relative Humidity" ;
		RH2M_STD:units = "%" ;
		RH2M_STD:missing_value = -9999.f ;
	float DP2M_STD(time) ;
		DP2M_STD:long_name = "Standard Deviation of 2m Calculated Dew Point" ;
		DP2M_STD:units = "C" ;
		DP2M_STD:missing_value = -9999.f ;
	float VP2M_STD(time) ;
		VP2M_STD:long_name = "Standard Deviation of 2m Calculated Vapor Pressure" ;
		VP2M_STD:units = "kPa" ;
		VP2M_STD:missing_value = -9999.f ;
	float T10M_STD(time) ;
		T10M_STD:long_name = "Standard Deviation of 10m Temperature" ;
		T10M_STD:units = "C" ;
		T10M_STD:missing_value = -9999.f ;
	float RH10M_STD(time) ;
		RH10M_STD:long_name = "Standard Deviation of 10m Relative Humidity" ;
		RH10M_STD:units = "%" ;
		RH10M_STD:missing_value = -9999.f ;
	float DP10M_STD(time) ;
		DP10M_STD:long_name = "Standard Deviation of 10m Calculated Dew Point" ;
		DP10M_STD:units = "C" ;
		DP10M_STD:missing_value = -9999.f ;
	float VP10M_STD(time) ;
		VP10M_STD:long_name = "Standard Deviation of 10m Calculated Vapor Pressure" ;
		VP10M_STD:units = "kPa" ;
		VP10M_STD:missing_value = -9999.f ;
	float T20M_STD(time) ;
		T20M_STD:long_name = "Standard Deviation of 20m Temperature" ;
		T20M_STD:units = "C" ;
		T20M_STD:missing_value = -9999.f ;
	float RH20M_STD(time) ;
		RH20M_STD:long_name = "Standard Deviation of 20m Relative Humidity" ;
		RH20M_STD:units = "%" ;
		RH20M_STD:missing_value = -9999.f ;
	float DP20M_STD(time) ;
		DP20M_STD:long_name = "Standard Deviation of 20m Calculated Dew Point" ;
		DP20M_STD:units = "C" ;
		DP20M_STD:missing_value = -9999.f ;
	float VP20M_STD(time) ;
		VP20M_STD:long_name = "Standard Deviation of 20m Calculated Vapor Pressure" ;
		VP20M_STD:units = "kPa" ;
		VP20M_STD:missing_value = -9999.f ;
	float T40M_STD(time) ;
		T40M_STD:long_name = "Standard Deviation of 40m Temperature" ;
		T40M_STD:units = "C" ;
		T40M_STD:missing_value = -9999.f ;
	float RH40M_STD(time) ;
		RH40M_STD:long_name = "Standard Deviation of 40m Relative Humidity" ;
		RH40M_STD:units = "%" ;
		RH40M_STD:missing_value = -9999.f ;
	float DP40M_STD(time) ;
		DP40M_STD:long_name = "Standard Deviation of 40m Calculated Dew Point" ;
		DP40M_STD:units = "C" ;
		DP40M_STD:missing_value = -9999.f ;
	float VP40M_STD(time) ;
		VP40M_STD:long_name = "Standard Deviation of 40m Calculated Vapor Pressure" ;
		VP40M_STD:units = "kPa" ;
		VP40M_STD:missing_value = -9999.f ;
	float SonicX_AVG(time) ;
		SonicX_AVG:long_name = "Average X Component of Sonic Wind Speed" ;
		SonicX_AVG:units = "m/s" ;
		SonicX_AVG:missing_value = -9999.f ;
	float SonicY_AVG(time) ;
		SonicY_AVG:long_name = "Average Y Component of Sonic Wind Speed" ;
		SonicY_AVG:units = "m/s" ;
		SonicY_AVG:missing_value = -9999.f ;
	float SonicS_AVG(time) ;
		SonicS_AVG:long_name = "Average Sonic Static Speed of Sound" ;
		SonicS_AVG:units = "m/s" ;
		SonicS_AVG:missing_value = -9999.f ;
	float Batt_Volt(time) ;
		Batt_Volt:long_name = "Datalogger Battery Voltage" ;
		Batt_Volt:units = "V" ;
		Batt_Volt:missing_value = -9999.f ;
	float 2m_num_sec_avg(time) ;
		2m_num_sec_avg:long_name = "Averaging Seconds (2m)" ;
		2m_num_sec_avg:units = "seconds" ;
		2m_num_sec_avg:missing_value = -9999.f ;
	float 10m_num_sec_avg(time) ;
		10m_num_sec_avg:long_name = "Averaging Seconds (10m)" ;
		10m_num_sec_avg:units = "seconds" ;
		10m_num_sec_avg:missing_value = -9999.f ;
	float 20m_num_sec_avg(time) ;
		20m_num_sec_avg:long_name = "Averaging Seconds (20m)" ;
		20m_num_sec_avg:units = "seconds" ;
		20m_num_sec_avg:missing_value = -9999.f ;
	float 40m_num_sec_avg(time) ;
		40m_num_sec_avg:long_name = "Averaging Seconds (40m)" ;
		40m_num_sec_avg:units = "seconds" ;
		40m_num_sec_avg:missing_value = -9999.f ;
	float lat ;
		lat:long_name = "north latitude" ;
		lat:units = "degrees" ;
		lat:valid_min = -90.f ;
		lat:valid_max = 90.f ;
	float lon ;
		lon:long_name = "east longitude" ;
		lon:units = "degrees" ;
		lon:valid_min = -180.f ;
		lon:valid_max = 180.f ;
	float alt ;
		alt:long_name = "altitude" ;
		alt:units = "meters above Mean Sea Level" ;

// global attributes:
		:ingest_software = " mettwr_ingest.c,v 1.3 2005/10/18 22:56:51 choudhury process-ingest-mettwr_ingest-1.2-0 $" ;
		:proc_level = "b1" ;
		:input_source = "mettwr4h1:/data/collection/nsa/nsamettwr4hC1.00/MetTower.20051228000000.dat" ;
		:site_id = "nsa" ;
		:facility_id = "C1 : PAARCS2:NSA-Barrow_Central_Facility" ;
		:sample_int = "1.0 minute for atmospheric pressure, Chilled Mirror, Present Weather Sensor; 2.0 second for other measurements" ;
		:averaging_int = "60 seconds" ;
		:serial_number = " " ;
		:comment = "" ;
		:resolution_description = "The resolution field attributes refer to the number of significant\n",
			"digits relative to the decimal point that should be used in\n",
			"calculations.  Using fewer digits might result in greater uncertainty;\n",
			"using a larger number of digits should have no effect and thus is\n",
			"unnecessary.  However, analyses based on differences in values with\n",
			"a larger number of significant digits than indicated could lead to\n",
			"erroneous results or misleading scientific conclusions.\n",
			"\n",
			"resolution for lat= 0.001\n",
			"resolution for lon = 0.001\n",
			"resolution for alt = 1" ;
		:instruments = "Barometer:  Vaisala PTB201A,\n",
			"Anemometer: Vaisala WAA252,\n",
			"Wind Vane:  Vaisala WAV151,\n",
			"Temperature & Humidity: Vaisala HMP45D or HMP35D,\n",
			"Chilled Mirror: TSL Model 1088,\n",
			"Present Weather Sensor: Vaisala FD12P,\n",
			"Sonic Anemometer: Vaisala WS425" ;
		:qc_method = "Standard Mentor QC" ;
		:Mentor_QC_Field_Information = "For each qc_<field> interpret the values as follows:\n",
			"\n",
			"Basic mentor QC checks (bit values):\n",
			"==========================================\n",
			"0x0 = value is within the specified range\n",
			"0x1 = value is equal to \'missing_value\'\n",
			"0x2 = value is less than the \'valid_min\'\n",
			"0x4 = value is greater than the \'valid_max\'\n",
			"0x8 = value failed the \'valid_delta\' check\n",
			"\n",
			"If the value is a \'missing_value\' no min, max, or delta checks are performed.\n",
			"\n",
			"The delta checks are done by comparing each data value to the one just\n",
			"prior to it in time. If a previous data value does not exist or is a\n",
			"\'missing_value\' the delta check will not be performed.\n",
			"\n",
			"Note that the delta computation for multi-dimensioned data compares the\n",
			"absolute value between points in the same spatial location to the previous\n",
			"point in time.\n",
			"\n",
			"If the associated non-QC field does not contain any mentor-specified minimum,\n",
			"maximum, or delta information a qc_field is not generated.\n",
			"" ;
		:zeb_platform = "nsamettwr4hC1.b1" ;
		:history = "created by user dsmgr on machine ruby at 28-Dec-2005,3:07:25, using $State: ds-zebra-zeblib-4.13-0 $" ;
}
